{
	"id": "4a6fafb52e34233de4b574d1bbcc55bd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-3a79feaed7.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\";\n\ncontract Alchemy is ERC721, ERC721Enumerable, ERC721URIStorage {\n    uint256 private _nextTokenId;\n\n    uint256 MAX_SUPPLY = 10000;\n\n    constructor() ERC721(\"Alchemy\", \"ALCH\")    {}\n\n    function safeMint(address to, string memory uri) public {\n        uint256 tokenId = _nextTokenId++;\n        require(tokenId <= MAX_SUPPLY, \"I'm Sorry All NFT's have been minted\");\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n    } \n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address to, uint256 tokenId, address auth)\n        internal\n        override(ERC721, ERC721Enumerable)\n        returns (address)\n    {\n        return super._update(to, tokenId, auth);\n    }\n\n    function _increaseBalance(address account, uint128 value)\n        internal\n        override(ERC721, ERC721Enumerable)\n    {\n        super._increaseBalance(account, value);\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721Enumerable, ERC721URIStorage)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1331,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1335,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1338,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1342,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1724,
								"contract": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220833a19e08c018f090a70cdb362860a7c3ab097854cc0766b0b238a311547fe6964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220833a19e08c018f090a70cdb362860a7c3ab097854cc0766b0b238a311547fe6964736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 GASPRICE NOT 0xE0 DUP13 ADD DUP16 MULMOD EXP PUSH17 0xCDB362860A7C3AB097854CC0766B0B238A BALANCE ISZERO SELFBALANCE INVALID PUSH10 0x64736F6C634300081400 CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220833a19e08c018f090a70cdb362860a7c3ab097854cc0766b0b238a311547fe6964736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 GASPRICE NOT 0xE0 DUP13 ADD DUP16 MULMOD EXP PUSH17 0xCDB362860A7C3AB097854CC0766B0B238A BALANCE ISZERO SELFBALANCE INVALID PUSH10 0x64736F6C634300081400 CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220833a19e08c018f090a70cdb362860a7c3ab097854cc0766b0b238a311547fe6964736f6c63430008140033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol",
								"contract-3a79feaed7.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204325f438d56f4972cc5777e30bbb2e49c09ca3142f707685514614a5ed5280b164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204325f438d56f4972cc5777e30bbb2e49c09ca3142f707685514614a5ed5280b164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x25 DELEGATECALL CODESIZE 0xD5 PUSH16 0x4972CC5777E30BBB2E49C09CA3142F70 PUSH23 0x85514614A5ED5280B164736F6C63430008140033000000 ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204325f438d56f4972cc5777e30bbb2e49c09ca3142f707685514614a5ed5280b164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x25 DELEGATECALL CODESIZE 0xD5 PUSH16 0x4972CC5777E30BBB2E49C09CA3142F70 PUSH23 0x85514614A5ED5280B164736F6C63430008140033000000 ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204325f438d56f4972cc5777e30bbb2e49c09ca3142f707685514614a5ed5280b164736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol",
								"contract-3a79feaed7.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208664d1a6f6ab9990e4a61a9b85c5c31e767a365f97d183d4a9932e3f7ac5a7cd64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208664d1a6f6ab9990e4a61a9b85c5c31e767a365f97d183d4a9932e3f7ac5a7cd64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH5 0xD1A6F6AB99 SWAP1 0xE4 0xA6 BYTE SWAP12 DUP6 0xC5 0xC3 0x1E PUSH23 0x7A365F97D183D4A9932E3F7AC5A7CD64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208664d1a6f6ab9990e4a61a9b85c5c31e767a365f97d183d4a9932e3f7ac5a7cd64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH5 0xD1A6F6AB99 SWAP1 0xE4 0xA6 BYTE SWAP12 DUP6 0xC5 0xC3 0x1E PUSH23 0x7A365F97D183D4A9932E3F7AC5A7CD64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208664d1a6f6ab9990e4a61a9b85c5c31e767a365f97d183d4a9932e3f7ac5a7cd64736f6c63430008140033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol",
								"contract-3a79feaed7.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract-3a79feaed7.sol": {
				"Alchemy": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-3a79feaed7.sol\":342:1673  contract Alchemy is ERC721, ERC721Enumerable, ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contract-3a79feaed7.sol\":467:472  10000 */\n  0x2710\n    /* \"contract-3a79feaed7.sol\":446:472  uint256 MAX_SUPPLY = 10000 */\n  0x0c\n  sstore\n    /* \"contract-3a79feaed7.sol\":479:524  constructor() ERC721(\"Alchemy\", \"ALCH\")    {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x416c6368656d7900000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x414c434800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contract-3a79feaed7.sol\":342:1673  contract Alchemy is ERC721, ERC721Enumerable, ERC721URIStorage {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contract-3a79feaed7.sol\":342:1673  contract Alchemy is ERC721, ERC721Enumerable, ERC721URIStorage {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-3a79feaed7.sol\":342:1673  contract Alchemy is ERC721, ERC721Enumerable, ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f6ccce7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd204c45e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x4f6ccce7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x18160ddd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract-3a79feaed7.sol\":1448:1671  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contract-3a79feaed7.sol\":1253:1442  function tokenURI(uint256 tokenId)... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-3a79feaed7.sol\":530:783  function safeMint(address to, string memory uri) public {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-3a79feaed7.sol\":1448:1671  function supportsInterface(bytes4 interfaceId)... */\n    tag_26:\n        /* \"contract-3a79feaed7.sol\":1601:1605  bool */\n      0x00\n        /* \"contract-3a79feaed7.sol\":1628:1664  super.supportsInterface(interfaceId) */\n      tag_96\n        /* \"contract-3a79feaed7.sol\":1652:1663  interfaceId */\n      dup3\n        /* \"contract-3a79feaed7.sol\":1628:1651  super.supportsInterface */\n      tag_97\n        /* \"contract-3a79feaed7.sol\":1628:1664  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_96:\n        /* \"contract-3a79feaed7.sol\":1621:1664  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contract-3a79feaed7.sol\":1448:1671  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_106:\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_108\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_109\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_111\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_114\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2114:2121  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2150  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2157  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2133:2157  return _allTokens.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_119\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_121\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1824:1831  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      tag_126\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1866:1871  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1865  balanceOf */\n      tag_69\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1852  index */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1872  index >= balanceOf(owner) */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1918:1923  owner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1925:1930  index */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1970  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1971:1976  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1978:1983  index */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1951:1984  return _ownedTokens[owner][index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_57:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_131\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_81\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2302:2309  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2345  totalSupply */\n      tag_44\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2330  index */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2347  index >= totalSupply() */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2401:2402  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2405:2410  index */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2448  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2449:2454  index */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2455  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n    tag_136:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2431:2455  return _allTokens[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_141\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_100\n      jump\t// in\n    tag_146:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_100\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_152\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_154\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_156\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_50\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_157\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_158\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-3a79feaed7.sol\":1253:1442  function tokenURI(uint256 tokenId)... */\n    tag_84:\n        /* \"contract-3a79feaed7.sol\":1376:1389  string memory */\n      0x60\n        /* \"contract-3a79feaed7.sol\":1412:1435  super.tokenURI(tokenId) */\n      tag_160\n        /* \"contract-3a79feaed7.sol\":1427:1434  tokenId */\n      dup3\n        /* \"contract-3a79feaed7.sol\":1412:1426  super.tokenURI */\n      tag_161\n        /* \"contract-3a79feaed7.sol\":1412:1435  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_160:\n        /* \"contract-3a79feaed7.sol\":1405:1435  return super.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"contract-3a79feaed7.sol\":1253:1442  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-3a79feaed7.sol\":530:783  function safeMint(address to, string memory uri) public {... */\n    tag_89:\n        /* \"contract-3a79feaed7.sol\":596:611  uint256 tokenId */\n      0x00\n        /* \"contract-3a79feaed7.sol\":614:626  _nextTokenId */\n      0x0b\n      0x00\n        /* \"contract-3a79feaed7.sol\":614:628  _nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contract-3a79feaed7.sol\":596:628  uint256 tokenId = _nextTokenId++ */\n      swap1\n      pop\n        /* \"contract-3a79feaed7.sol\":657:667  MAX_SUPPLY */\n      sload(0x0c)\n        /* \"contract-3a79feaed7.sol\":646:653  tokenId */\n      dup2\n        /* \"contract-3a79feaed7.sol\":646:667  tokenId <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contract-3a79feaed7.sol\":638:708  require(tokenId <= MAX_SUPPLY, \"I'm Sorry All NFT's have been minted\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contract-3a79feaed7.sol\":718:740  _safeMint(to, tokenId) */\n      tag_168\n        /* \"contract-3a79feaed7.sol\":728:730  to */\n      dup4\n        /* \"contract-3a79feaed7.sol\":732:739  tokenId */\n      dup3\n        /* \"contract-3a79feaed7.sol\":718:727  _safeMint */\n      tag_169\n        /* \"contract-3a79feaed7.sol\":718:740  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"contract-3a79feaed7.sol\":750:776  _setTokenURI(tokenId, uri) */\n      tag_170\n        /* \"contract-3a79feaed7.sol\":763:770  tokenId */\n      dup2\n        /* \"contract-3a79feaed7.sol\":772:775  uri */\n      dup4\n        /* \"contract-3a79feaed7.sol\":750:762  _setTokenURI */\n      tag_171\n        /* \"contract-3a79feaed7.sol\":750:776  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_170:\n        /* \"contract-3a79feaed7.sol\":586:783  {... */\n      pop\n        /* \"contract-3a79feaed7.sol\":530:783  function safeMint(address to, string memory uri) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_174\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_175\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_176\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_174:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_178\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_179\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_185\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-3a79feaed7.sol\":858:1064  function _update(address to, uint256 tokenId, address auth)... */\n    tag_121:\n        /* \"contract-3a79feaed7.sol\":995:1002  address */\n      0x00\n        /* \"contract-3a79feaed7.sol\":1025:1057  super._update(to, tokenId, auth) */\n      tag_188\n        /* \"contract-3a79feaed7.sol\":1039:1041  to */\n      dup5\n        /* \"contract-3a79feaed7.sol\":1043:1050  tokenId */\n      dup5\n        /* \"contract-3a79feaed7.sol\":1052:1056  auth */\n      dup5\n        /* \"contract-3a79feaed7.sol\":1025:1038  super._update */\n      tag_189\n        /* \"contract-3a79feaed7.sol\":1025:1057  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_188:\n        /* \"contract-3a79feaed7.sol\":1018:1057  return super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"contract-3a79feaed7.sol\":858:1064  function _update(address to, uint256 tokenId, address auth)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_158:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_202\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_207\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_206)\n    tag_207:\n      0x60\n      swap2\n      pop\n    tag_206:\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_215\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_215:\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_216\n      swap1\n      tag_100\n      jump\t// in\n    tag_216:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_217\n      swap1\n      tag_100\n      jump\t// in\n    tag_217:\n      dup1\n      iszero\n      tag_218\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_219\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_218)\n    tag_219:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_220:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_220\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_221\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_222\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_214)\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_214)\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_227\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_228\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_214:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_169:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_230\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_231\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1537:1541  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1575:1610  type(IERC721Enumerable).interfaceId */\n      0x780e9d6300000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1571  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_237\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      tag_238\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1638:1649  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1637  super.supportsInterface */\n      tag_239\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_237:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1553:1650  return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_242\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_242:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_244\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_245\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_245:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_246\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_247\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_93\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_246:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2613:2620  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2653  address previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      tag_252\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2670:2672  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2674:2681  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2683:2687  auth */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2669  super._update */\n      tag_253\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2688  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2728:2729  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2716  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_255\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2778:2785  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2777  _addTokenToAllTokensEnumeration */\n      tag_256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      jump(tag_257)\n    tag_254:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2824:2826  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2820  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_259\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2875:2888  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2890:2897  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2874  _removeTokenFromOwnerEnumeration */\n      tag_260\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2936:2937  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2924  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_262\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2991:2998  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2990  _removeTokenFromAllTokensEnumeration */\n      tag_263\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      jump(tag_264)\n    tag_261:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3037:3039  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3033  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_266\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3083:3085  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3087:3094  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3082  _addTokenToOwnerEnumeration */\n      tag_267\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3123:3136  previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3116:3136  return previousOwner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_270\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_270:\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_271\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_222\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_272\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_273)\n    tag_272:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_274\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_275\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_276\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_273:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_231:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_278\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_279\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_280\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_158\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_282\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_282:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_283\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_284\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_285\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_283:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_287\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_179\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_289\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_290\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_292\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_256:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3959  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3966  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3937  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3938:3945  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3966  _allTokensIndex[tokenId] = _allTokens.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3976:3986  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3992:3999  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3976:4000  _allTokens.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_260:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4908  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      tag_297\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4921:4925  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4920  balanceOf */\n      tag_69\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4926  uint256 lastTokenIndex = balanceOf(from) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4954  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4974  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4975:4982  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4983  uint256 tokenIndex = _ownedTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5101:5115  lastTokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5097  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5115  tokenIndex != lastTokenIndex */\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5150  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5165  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5166:5170  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5172:5186  lastTokenIndex */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5187  uint256 lastTokenId = _ownedTokens[from][lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5235:5246  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5214  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5220  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5215:5219  from */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5220  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5221:5231  tokenIndex */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5246  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5351:5361  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5335  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5336:5347  lastTokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5361  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5117:5406  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5516  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5517:5524  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5492:5525  delete _ownedTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5554  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5555:5559  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5561:5575  lastTokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5535:5576  delete _ownedTokens[from][lastTokenIndex] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4705:5583  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_263:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6142  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6165:6166  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6155  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6162  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6166  _allTokens.length - 1 */\n      tag_300\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6166  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6194  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6212  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6213:6220  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6221  uint256 tokenIndex = _allTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6562  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6575  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6576:6590  lastTokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6591  _allTokens[lastTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_302\n      jumpi\n      tag_303\n      tag_138\n      jump\t// in\n    tag_303:\n    tag_302:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6591  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6627:6638  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6612  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6613:6623  tokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6624  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_305\n      jumpi\n      tag_306\n      tag_138\n      jump\t// in\n    tag_306:\n    tag_305:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6638  _allTokens[tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6737:6747  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6721  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6722:6733  lastTokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6747  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6890  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6891:6898  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6868:6899  delete _allTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6919  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6925  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_308\n      jumpi\n      tag_309\n      tag_310\n      jump\t// in\n    tag_309:\n    tag_308:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5942:6932  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_267:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3535  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3554:3555  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      tag_313\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3548:3550  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3547  balanceOf */\n      tag_69\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3555  balanceOf(to) - 1 */\n      tag_314\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3555  uint256 length = balanceOf(to) - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3592:3599  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3577  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3578:3580  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3582:3588  length */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3599  _ownedTokens[to][length] = tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3638:3644  length */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3626  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3627:3634  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3644  _ownedTokensIndex[tokenId] = length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3511:3651  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_316\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":759:769  Math.log10 */\n      tag_317\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_318\n      jumpi\n      tag_319\n      tag_320\n      jump\t// in\n    tag_319:\n    tag_318:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_321\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_321:\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_324\n      jumpi\n      tag_325\n      tag_326\n      jump\t// in\n    tag_325:\n    tag_324:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_322\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_279:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_329\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_331\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_121\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_290:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_336\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_337\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_345\n      jumpi\n      tag_346\n      tag_326\n      jump\t// in\n    tag_346:\n    tag_345:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_348\n      jumpi\n      tag_349\n      tag_326\n      jump\t// in\n    tag_349:\n    tag_348:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_351\n      jumpi\n      tag_352\n      tag_326\n      jump\t// in\n    tag_352:\n    tag_351:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_354\n      jumpi\n      tag_355\n      tag_326\n      jump\t// in\n    tag_355:\n    tag_354:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_357\n      jumpi\n      tag_358\n      tag_326\n      jump\t// in\n    tag_358:\n    tag_357:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_360\n      jumpi\n      tag_361\n      tag_326\n      jump\t// in\n    tag_361:\n    tag_360:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_364\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_365\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_366\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_93\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_365:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_367\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_368\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_109\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_367:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_364:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_369:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_370:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_371:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_372:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_373:\n        /* \"#utility.yul\":561:584   */\n      tag_435\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_372\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_436:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_374:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_438\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_373\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_441\n      tag_370\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":833:952   */\n    tag_440:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_442\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_374\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_375:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_376:\n        /* \"#utility.yul\":1268:1289   */\n      tag_445\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_375\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_447\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_376\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_377:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_378:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_379:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_451:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_451)\n    tag_453:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_380:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_381:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_456\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_377\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":2329:2400   */\n      tag_457\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_378\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_458\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_379\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":2499:2528   */\n      tag_459\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_380\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_32:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_461\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_381\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_382:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_383:\n        /* \"#utility.yul\":3016:3040   */\n      tag_464\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_382\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_465:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_384:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_467\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_383\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_35:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_470\n      tag_370\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":3292:3411   */\n    tag_469:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_471\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_384\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_385:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_386:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_474\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_385\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_387:\n        /* \"#utility.yul\":3872:3896   */\n      tag_476\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_386\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_38:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_478\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_387\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_388:\n        /* \"#utility.yul\":4210:4234   */\n      tag_480\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_386\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_481:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_389:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_483\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_388\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_41:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_486\n      tag_370\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":4503:4622   */\n    tag_485:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_487\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_389\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_488\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_384\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_390:\n        /* \"#utility.yul\":4977:5001   */\n      tag_490\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_382\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_46:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_492\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_390\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_49:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_495\n      tag_370\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":5352:5471   */\n    tag_494:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_496\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_389\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_497\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_389\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_498\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_384\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_68:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_501\n      tag_370\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":5943:6062   */\n    tag_500:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_502\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_389\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_391:\n        /* \"#utility.yul\":6272:6293   */\n      tag_504\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_375\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_505:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_392:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_507\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_391\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_76:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_510\n      tag_370\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":6553:6672   */\n    tag_509:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_511\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_389\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_512\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_392\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_393:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_394:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_320:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_395:\n        /* \"#utility.yul\":7452:7479   */\n      tag_517\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_380\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_519\n      tag_320\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":7525:7613   */\n    tag_518:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_396:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_521\n      tag_369\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_522\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_395\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_397:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_525\n      tag_320\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":7928:7984   */\n    tag_524:\n        /* \"#utility.yul\":8002:8031   */\n      tag_526\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_380\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_398:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_399:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_529\n        /* \"#utility.yul\":8374:8422   */\n      tag_530\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_397\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8358:8423   */\n      tag_396\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_532\n      tag_394\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":8498:8610   */\n    tag_531:\n        /* \"#utility.yul\":8619:8673   */\n      tag_533\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_398\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_400:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_536\n      tag_393\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8769:8891   */\n    tag_535:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_537\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_399\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_80:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_540\n      tag_370\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9178:9298   */\n    tag_539:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_541\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_389\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_542\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_389\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_543\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_384\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_545\n      tag_371\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":9765:9882   */\n    tag_544:\n        /* \"#utility.yul\":9906:9968   */\n      tag_546\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_400\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10299   */\n    tag_401:\n        /* \"#utility.yul\":10053:10057   */\n      0x00\n        /* \"#utility.yul\":10143:10161   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10132:10162   */\n      gt\n        /* \"#utility.yul\":10129:10185   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":10165:10183   */\n      tag_549\n      tag_320\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":10129:10185   */\n    tag_548:\n        /* \"#utility.yul\":10203:10232   */\n      tag_550\n        /* \"#utility.yul\":10225:10231   */\n      dup3\n        /* \"#utility.yul\":10203:10232   */\n      tag_380\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":10195:10232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10287:10291   */\n      0x20\n        /* \"#utility.yul\":10281:10285   */\n      dup2\n        /* \"#utility.yul\":10277:10292   */\n      add\n        /* \"#utility.yul\":10269:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:10730   */\n    tag_402:\n        /* \"#utility.yul\":10383:10388   */\n      0x00\n        /* \"#utility.yul\":10408:10474   */\n      tag_552\n        /* \"#utility.yul\":10424:10473   */\n      tag_553\n        /* \"#utility.yul\":10466:10472   */\n      dup5\n        /* \"#utility.yul\":10424:10473   */\n      tag_401\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":10408:10474   */\n      tag_396\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":10399:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10483:10504   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x20\n        /* \"#utility.yul\":10528:10533   */\n      dup2\n        /* \"#utility.yul\":10524:10540   */\n      add\n        /* \"#utility.yul\":10573:10576   */\n      dup5\n        /* \"#utility.yul\":10564:10570   */\n      dup5\n        /* \"#utility.yul\":10559:10562   */\n      dup5\n        /* \"#utility.yul\":10555:10571   */\n      add\n        /* \"#utility.yul\":10552:10577   */\n      gt\n        /* \"#utility.yul\":10549:10661   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":10580:10659   */\n      tag_555\n      tag_394\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":10549:10661   */\n    tag_554:\n        /* \"#utility.yul\":10670:10724   */\n      tag_556\n        /* \"#utility.yul\":10717:10723   */\n      dup5\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10707:10710   */\n      dup6\n        /* \"#utility.yul\":10670:10724   */\n      tag_398\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":10389:10730   */\n      pop\n        /* \"#utility.yul\":10305:10730   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10750:11090   */\n    tag_403:\n        /* \"#utility.yul\":10806:10811   */\n      0x00\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10848:10852   */\n      0x1f\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10836:10853   */\n      add\n        /* \"#utility.yul\":10832:10859   */\n      slt\n        /* \"#utility.yul\":10822:10944   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":10863:10942   */\n      tag_559\n      tag_393\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":10822:10944   */\n    tag_558:\n        /* \"#utility.yul\":10980:10986   */\n      dup2\n        /* \"#utility.yul\":10967:10987   */\n      calldataload\n        /* \"#utility.yul\":11005:11084   */\n      tag_560\n        /* \"#utility.yul\":11080:11083   */\n      dup5\n        /* \"#utility.yul\":11072:11078   */\n      dup3\n        /* \"#utility.yul\":11065:11069   */\n      0x20\n        /* \"#utility.yul\":11057:11063   */\n      dup7\n        /* \"#utility.yul\":11053:11070   */\n      add\n        /* \"#utility.yul\":11005:11084   */\n      tag_402\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":10996:11084   */\n      swap2\n      pop\n        /* \"#utility.yul\":10812:11090   */\n      pop\n        /* \"#utility.yul\":10750:11090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11096:11750   */\n    tag_88:\n        /* \"#utility.yul\":11174:11180   */\n      0x00\n        /* \"#utility.yul\":11182:11188   */\n      dup1\n        /* \"#utility.yul\":11231:11233   */\n      0x40\n        /* \"#utility.yul\":11219:11228   */\n      dup4\n        /* \"#utility.yul\":11210:11217   */\n      dup6\n        /* \"#utility.yul\":11206:11229   */\n      sub\n        /* \"#utility.yul\":11202:11234   */\n      slt\n        /* \"#utility.yul\":11199:11318   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":11237:11316   */\n      tag_563\n      tag_370\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":11199:11318   */\n    tag_562:\n        /* \"#utility.yul\":11357:11358   */\n      0x00\n        /* \"#utility.yul\":11382:11435   */\n      tag_564\n        /* \"#utility.yul\":11427:11434   */\n      dup6\n        /* \"#utility.yul\":11418:11424   */\n      dup3\n        /* \"#utility.yul\":11407:11416   */\n      dup7\n        /* \"#utility.yul\":11403:11425   */\n      add\n        /* \"#utility.yul\":11382:11435   */\n      tag_389\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":11372:11435   */\n      swap3\n      pop\n        /* \"#utility.yul\":11328:11445   */\n      pop\n        /* \"#utility.yul\":11512:11514   */\n      0x20\n        /* \"#utility.yul\":11501:11510   */\n      dup4\n        /* \"#utility.yul\":11497:11515   */\n      add\n        /* \"#utility.yul\":11484:11516   */\n      calldataload\n        /* \"#utility.yul\":11543:11561   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11532:11562   */\n      gt\n        /* \"#utility.yul\":11529:11646   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":11565:11644   */\n      tag_566\n      tag_371\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":11529:11646   */\n    tag_565:\n        /* \"#utility.yul\":11670:11733   */\n      tag_567\n        /* \"#utility.yul\":11725:11732   */\n      dup6\n        /* \"#utility.yul\":11716:11722   */\n      dup3\n        /* \"#utility.yul\":11705:11714   */\n      dup7\n        /* \"#utility.yul\":11701:11723   */\n      add\n        /* \"#utility.yul\":11670:11733   */\n      tag_403\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":11660:11733   */\n      swap2\n      pop\n        /* \"#utility.yul\":11455:11743   */\n      pop\n        /* \"#utility.yul\":11096:11750   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11756:12230   */\n    tag_92:\n        /* \"#utility.yul\":11824:11830   */\n      0x00\n        /* \"#utility.yul\":11832:11838   */\n      dup1\n        /* \"#utility.yul\":11881:11883   */\n      0x40\n        /* \"#utility.yul\":11869:11878   */\n      dup4\n        /* \"#utility.yul\":11860:11867   */\n      dup6\n        /* \"#utility.yul\":11856:11879   */\n      sub\n        /* \"#utility.yul\":11852:11884   */\n      slt\n        /* \"#utility.yul\":11849:11968   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":11887:11966   */\n      tag_570\n      tag_370\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11849:11968   */\n    tag_569:\n        /* \"#utility.yul\":12007:12008   */\n      0x00\n        /* \"#utility.yul\":12032:12085   */\n      tag_571\n        /* \"#utility.yul\":12077:12084   */\n      dup6\n        /* \"#utility.yul\":12068:12074   */\n      dup3\n        /* \"#utility.yul\":12057:12066   */\n      dup7\n        /* \"#utility.yul\":12053:12075   */\n      add\n        /* \"#utility.yul\":12032:12085   */\n      tag_389\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":12022:12085   */\n      swap3\n      pop\n        /* \"#utility.yul\":11978:12095   */\n      pop\n        /* \"#utility.yul\":12134:12136   */\n      0x20\n        /* \"#utility.yul\":12160:12213   */\n      tag_572\n        /* \"#utility.yul\":12205:12212   */\n      dup6\n        /* \"#utility.yul\":12196:12202   */\n      dup3\n        /* \"#utility.yul\":12185:12194   */\n      dup7\n        /* \"#utility.yul\":12181:12203   */\n      add\n        /* \"#utility.yul\":12160:12213   */\n      tag_389\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":12150:12213   */\n      swap2\n      pop\n        /* \"#utility.yul\":12105:12223   */\n      pop\n        /* \"#utility.yul\":11756:12230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12416   */\n    tag_404:\n        /* \"#utility.yul\":12284:12361   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12281:12282   */\n      0x00\n        /* \"#utility.yul\":12274:12362   */\n      mstore\n        /* \"#utility.yul\":12381:12385   */\n      0x22\n        /* \"#utility.yul\":12378:12379   */\n      0x04\n        /* \"#utility.yul\":12371:12386   */\n      mstore\n        /* \"#utility.yul\":12405:12409   */\n      0x24\n        /* \"#utility.yul\":12402:12403   */\n      0x00\n        /* \"#utility.yul\":12395:12410   */\n      revert\n        /* \"#utility.yul\":12422:12742   */\n    tag_100:\n        /* \"#utility.yul\":12466:12472   */\n      0x00\n        /* \"#utility.yul\":12503:12504   */\n      0x02\n        /* \"#utility.yul\":12497:12501   */\n      dup3\n        /* \"#utility.yul\":12493:12505   */\n      div\n        /* \"#utility.yul\":12483:12505   */\n      swap1\n      pop\n        /* \"#utility.yul\":12550:12551   */\n      0x01\n        /* \"#utility.yul\":12544:12548   */\n      dup3\n        /* \"#utility.yul\":12540:12552   */\n      and\n        /* \"#utility.yul\":12571:12589   */\n      dup1\n        /* \"#utility.yul\":12561:12642   */\n      tag_575\n      jumpi\n        /* \"#utility.yul\":12627:12631   */\n      0x7f\n        /* \"#utility.yul\":12619:12625   */\n      dup3\n        /* \"#utility.yul\":12615:12632   */\n      and\n        /* \"#utility.yul\":12605:12632   */\n      swap2\n      pop\n        /* \"#utility.yul\":12561:12642   */\n    tag_575:\n        /* \"#utility.yul\":12689:12691   */\n      0x20\n        /* \"#utility.yul\":12681:12687   */\n      dup3\n        /* \"#utility.yul\":12678:12692   */\n      lt\n        /* \"#utility.yul\":12658:12676   */\n      dup2\n        /* \"#utility.yul\":12655:12693   */\n      sub\n        /* \"#utility.yul\":12652:12736   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":12708:12726   */\n      tag_577\n      tag_404\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":12652:12736   */\n    tag_576:\n        /* \"#utility.yul\":12473:12742   */\n      pop\n        /* \"#utility.yul\":12422:12742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12748:13190   */\n    tag_124:\n        /* \"#utility.yul\":12897:12901   */\n      0x00\n        /* \"#utility.yul\":12935:12937   */\n      0x60\n        /* \"#utility.yul\":12924:12933   */\n      dup3\n        /* \"#utility.yul\":12920:12938   */\n      add\n        /* \"#utility.yul\":12912:12938   */\n      swap1\n      pop\n        /* \"#utility.yul\":12948:13019   */\n      tag_579\n        /* \"#utility.yul\":13016:13017   */\n      0x00\n        /* \"#utility.yul\":13005:13014   */\n      dup4\n        /* \"#utility.yul\":13001:13018   */\n      add\n        /* \"#utility.yul\":12992:12998   */\n      dup7\n        /* \"#utility.yul\":12948:13019   */\n      tag_387\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":13029:13101   */\n      tag_580\n        /* \"#utility.yul\":13097:13099   */\n      0x20\n        /* \"#utility.yul\":13086:13095   */\n      dup4\n        /* \"#utility.yul\":13082:13100   */\n      add\n        /* \"#utility.yul\":13073:13079   */\n      dup6\n        /* \"#utility.yul\":13029:13101   */\n      tag_390\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":13111:13183   */\n      tag_581\n        /* \"#utility.yul\":13179:13181   */\n      0x40\n        /* \"#utility.yul\":13168:13177   */\n      dup4\n        /* \"#utility.yul\":13164:13182   */\n      add\n        /* \"#utility.yul\":13155:13161   */\n      dup5\n        /* \"#utility.yul\":13111:13183   */\n      tag_387\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":12748:13190   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13196:13528   */\n    tag_129:\n        /* \"#utility.yul\":13317:13321   */\n      0x00\n        /* \"#utility.yul\":13355:13357   */\n      0x40\n        /* \"#utility.yul\":13344:13353   */\n      dup3\n        /* \"#utility.yul\":13340:13358   */\n      add\n        /* \"#utility.yul\":13332:13358   */\n      swap1\n      pop\n        /* \"#utility.yul\":13368:13439   */\n      tag_583\n        /* \"#utility.yul\":13436:13437   */\n      0x00\n        /* \"#utility.yul\":13425:13434   */\n      dup4\n        /* \"#utility.yul\":13421:13438   */\n      add\n        /* \"#utility.yul\":13412:13418   */\n      dup6\n        /* \"#utility.yul\":13368:13439   */\n      tag_387\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":13449:13521   */\n      tag_584\n        /* \"#utility.yul\":13517:13519   */\n      0x20\n        /* \"#utility.yul\":13506:13515   */\n      dup4\n        /* \"#utility.yul\":13502:13520   */\n      add\n        /* \"#utility.yul\":13493:13499   */\n      dup5\n        /* \"#utility.yul\":13449:13521   */\n      tag_390\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":13196:13528   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13534:13714   */\n    tag_138:\n        /* \"#utility.yul\":13582:13659   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13579:13580   */\n      0x00\n        /* \"#utility.yul\":13572:13660   */\n      mstore\n        /* \"#utility.yul\":13679:13683   */\n      0x32\n        /* \"#utility.yul\":13676:13677   */\n      0x04\n        /* \"#utility.yul\":13669:13684   */\n      mstore\n        /* \"#utility.yul\":13703:13707   */\n      0x24\n        /* \"#utility.yul\":13700:13701   */\n      0x00\n        /* \"#utility.yul\":13693:13708   */\n      revert\n        /* \"#utility.yul\":13720:13900   */\n    tag_405:\n        /* \"#utility.yul\":13768:13845   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13765:13766   */\n      0x00\n        /* \"#utility.yul\":13758:13846   */\n      mstore\n        /* \"#utility.yul\":13865:13869   */\n      0x11\n        /* \"#utility.yul\":13862:13863   */\n      0x04\n        /* \"#utility.yul\":13855:13870   */\n      mstore\n        /* \"#utility.yul\":13889:13893   */\n      0x24\n        /* \"#utility.yul\":13886:13887   */\n      0x00\n        /* \"#utility.yul\":13879:13894   */\n      revert\n        /* \"#utility.yul\":13906:14139   */\n    tag_164:\n        /* \"#utility.yul\":13945:13948   */\n      0x00\n        /* \"#utility.yul\":13968:13992   */\n      tag_588\n        /* \"#utility.yul\":13986:13991   */\n      dup3\n        /* \"#utility.yul\":13968:13992   */\n      tag_382\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":13959:13992   */\n      swap2\n      pop\n        /* \"#utility.yul\":14014:14080   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14007:14012   */\n      dup3\n        /* \"#utility.yul\":14004:14081   */\n      sub\n        /* \"#utility.yul\":14001:14104   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":14084:14102   */\n      tag_590\n      tag_405\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":14001:14104   */\n    tag_589:\n        /* \"#utility.yul\":14131:14132   */\n      0x01\n        /* \"#utility.yul\":14124:14129   */\n      dup3\n        /* \"#utility.yul\":14120:14133   */\n      add\n        /* \"#utility.yul\":14113:14133   */\n      swap1\n      pop\n        /* \"#utility.yul\":13906:14139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14145:14368   */\n    tag_406:\n        /* \"#utility.yul\":14285:14319   */\n      0x49276d20536f72727920416c6c204e465427732068617665206265656e206d69\n        /* \"#utility.yul\":14281:14282   */\n      0x00\n        /* \"#utility.yul\":14273:14279   */\n      dup3\n        /* \"#utility.yul\":14269:14283   */\n      add\n        /* \"#utility.yul\":14262:14320   */\n      mstore\n        /* \"#utility.yul\":14354:14360   */\n      0x6e74656400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14349:14351   */\n      0x20\n        /* \"#utility.yul\":14341:14347   */\n      dup3\n        /* \"#utility.yul\":14337:14352   */\n      add\n        /* \"#utility.yul\":14330:14361   */\n      mstore\n        /* \"#utility.yul\":14145:14368   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14374:14740   */\n    tag_407:\n        /* \"#utility.yul\":14516:14519   */\n      0x00\n        /* \"#utility.yul\":14537:14604   */\n      tag_593\n        /* \"#utility.yul\":14601:14603   */\n      0x24\n        /* \"#utility.yul\":14596:14599   */\n      dup4\n        /* \"#utility.yul\":14537:14604   */\n      tag_378\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":14530:14604   */\n      swap2\n      pop\n        /* \"#utility.yul\":14613:14706   */\n      tag_594\n        /* \"#utility.yul\":14702:14705   */\n      dup3\n        /* \"#utility.yul\":14613:14706   */\n      tag_406\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":14731:14733   */\n      0x40\n        /* \"#utility.yul\":14726:14729   */\n      dup3\n        /* \"#utility.yul\":14722:14734   */\n      add\n        /* \"#utility.yul\":14715:14734   */\n      swap1\n      pop\n        /* \"#utility.yul\":14374:14740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14746:15165   */\n    tag_167:\n        /* \"#utility.yul\":14912:14916   */\n      0x00\n        /* \"#utility.yul\":14950:14952   */\n      0x20\n        /* \"#utility.yul\":14939:14948   */\n      dup3\n        /* \"#utility.yul\":14935:14953   */\n      add\n        /* \"#utility.yul\":14927:14953   */\n      swap1\n      pop\n        /* \"#utility.yul\":14999:15008   */\n      dup2\n        /* \"#utility.yul\":14993:14997   */\n      dup2\n        /* \"#utility.yul\":14989:15009   */\n      sub\n        /* \"#utility.yul\":14985:14986   */\n      0x00\n        /* \"#utility.yul\":14974:14983   */\n      dup4\n        /* \"#utility.yul\":14970:14987   */\n      add\n        /* \"#utility.yul\":14963:15010   */\n      mstore\n        /* \"#utility.yul\":15027:15158   */\n      tag_596\n        /* \"#utility.yul\":15153:15157   */\n      dup2\n        /* \"#utility.yul\":15027:15158   */\n      tag_407\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":15019:15158   */\n      swap1\n      pop\n        /* \"#utility.yul\":14746:15165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15171:15269   */\n    tag_408:\n        /* \"#utility.yul\":15222:15228   */\n      0x00\n        /* \"#utility.yul\":15256:15261   */\n      dup2\n        /* \"#utility.yul\":15250:15262   */\n      mload\n        /* \"#utility.yul\":15240:15262   */\n      swap1\n      pop\n        /* \"#utility.yul\":15171:15269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15275:15443   */\n    tag_409:\n        /* \"#utility.yul\":15358:15369   */\n      0x00\n        /* \"#utility.yul\":15392:15398   */\n      dup3\n        /* \"#utility.yul\":15387:15390   */\n      dup3\n        /* \"#utility.yul\":15380:15399   */\n      mstore\n        /* \"#utility.yul\":15432:15436   */\n      0x20\n        /* \"#utility.yul\":15427:15430   */\n      dup3\n        /* \"#utility.yul\":15423:15437   */\n      add\n        /* \"#utility.yul\":15408:15437   */\n      swap1\n      pop\n        /* \"#utility.yul\":15275:15443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15449:15822   */\n    tag_410:\n        /* \"#utility.yul\":15535:15538   */\n      0x00\n        /* \"#utility.yul\":15563:15601   */\n      tag_600\n        /* \"#utility.yul\":15595:15600   */\n      dup3\n        /* \"#utility.yul\":15563:15601   */\n      tag_408\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":15617:15687   */\n      tag_601\n        /* \"#utility.yul\":15680:15686   */\n      dup2\n        /* \"#utility.yul\":15675:15678   */\n      dup6\n        /* \"#utility.yul\":15617:15687   */\n      tag_409\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":15610:15687   */\n      swap4\n      pop\n        /* \"#utility.yul\":15696:15761   */\n      tag_602\n        /* \"#utility.yul\":15754:15760   */\n      dup2\n        /* \"#utility.yul\":15749:15752   */\n      dup6\n        /* \"#utility.yul\":15742:15746   */\n      0x20\n        /* \"#utility.yul\":15735:15740   */\n      dup7\n        /* \"#utility.yul\":15731:15747   */\n      add\n        /* \"#utility.yul\":15696:15761   */\n      tag_379\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":15786:15815   */\n      tag_603\n        /* \"#utility.yul\":15808:15814   */\n      dup2\n        /* \"#utility.yul\":15786:15815   */\n      tag_380\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":15781:15784   */\n      dup5\n        /* \"#utility.yul\":15777:15816   */\n      add\n        /* \"#utility.yul\":15770:15816   */\n      swap2\n      pop\n        /* \"#utility.yul\":15539:15822   */\n      pop\n        /* \"#utility.yul\":15449:15822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15828:16468   */\n    tag_198:\n        /* \"#utility.yul\":16023:16027   */\n      0x00\n        /* \"#utility.yul\":16061:16064   */\n      0x80\n        /* \"#utility.yul\":16050:16059   */\n      dup3\n        /* \"#utility.yul\":16046:16065   */\n      add\n        /* \"#utility.yul\":16038:16065   */\n      swap1\n      pop\n        /* \"#utility.yul\":16075:16146   */\n      tag_605\n        /* \"#utility.yul\":16143:16144   */\n      0x00\n        /* \"#utility.yul\":16132:16141   */\n      dup4\n        /* \"#utility.yul\":16128:16145   */\n      add\n        /* \"#utility.yul\":16119:16125   */\n      dup8\n        /* \"#utility.yul\":16075:16146   */\n      tag_387\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":16156:16228   */\n      tag_606\n        /* \"#utility.yul\":16224:16226   */\n      0x20\n        /* \"#utility.yul\":16213:16222   */\n      dup4\n        /* \"#utility.yul\":16209:16227   */\n      add\n        /* \"#utility.yul\":16200:16206   */\n      dup7\n        /* \"#utility.yul\":16156:16228   */\n      tag_387\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":16238:16310   */\n      tag_607\n        /* \"#utility.yul\":16306:16308   */\n      0x40\n        /* \"#utility.yul\":16295:16304   */\n      dup4\n        /* \"#utility.yul\":16291:16309   */\n      add\n        /* \"#utility.yul\":16282:16288   */\n      dup6\n        /* \"#utility.yul\":16238:16310   */\n      tag_390\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":16357:16366   */\n      dup2\n        /* \"#utility.yul\":16351:16355   */\n      dup2\n        /* \"#utility.yul\":16347:16367   */\n      sub\n        /* \"#utility.yul\":16342:16344   */\n      0x60\n        /* \"#utility.yul\":16331:16340   */\n      dup4\n        /* \"#utility.yul\":16327:16345   */\n      add\n        /* \"#utility.yul\":16320:16368   */\n      mstore\n        /* \"#utility.yul\":16385:16461   */\n      tag_608\n        /* \"#utility.yul\":16456:16460   */\n      dup2\n        /* \"#utility.yul\":16447:16453   */\n      dup5\n        /* \"#utility.yul\":16385:16461   */\n      tag_410\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":16377:16461   */\n      swap1\n      pop\n        /* \"#utility.yul\":15828:16468   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16474:16615   */\n    tag_411:\n        /* \"#utility.yul\":16530:16535   */\n      0x00\n        /* \"#utility.yul\":16561:16567   */\n      dup2\n        /* \"#utility.yul\":16555:16568   */\n      mload\n        /* \"#utility.yul\":16546:16568   */\n      swap1\n      pop\n        /* \"#utility.yul\":16577:16609   */\n      tag_610\n        /* \"#utility.yul\":16603:16608   */\n      dup2\n        /* \"#utility.yul\":16577:16609   */\n      tag_373\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":16474:16615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16621:16970   */\n    tag_201:\n        /* \"#utility.yul\":16690:16696   */\n      0x00\n        /* \"#utility.yul\":16739:16741   */\n      0x20\n        /* \"#utility.yul\":16727:16736   */\n      dup3\n        /* \"#utility.yul\":16718:16725   */\n      dup5\n        /* \"#utility.yul\":16714:16737   */\n      sub\n        /* \"#utility.yul\":16710:16742   */\n      slt\n        /* \"#utility.yul\":16707:16826   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":16745:16824   */\n      tag_613\n      tag_370\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":16707:16826   */\n    tag_612:\n        /* \"#utility.yul\":16865:16866   */\n      0x00\n        /* \"#utility.yul\":16890:16953   */\n      tag_614\n        /* \"#utility.yul\":16945:16952   */\n      dup5\n        /* \"#utility.yul\":16936:16942   */\n      dup3\n        /* \"#utility.yul\":16925:16934   */\n      dup6\n        /* \"#utility.yul\":16921:16943   */\n      add\n        /* \"#utility.yul\":16890:16953   */\n      tag_411\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":16880:16953   */\n      swap2\n      pop\n        /* \"#utility.yul\":16836:16963   */\n      pop\n        /* \"#utility.yul\":16621:16970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16976:17124   */\n    tag_412:\n        /* \"#utility.yul\":17078:17089   */\n      0x00\n        /* \"#utility.yul\":17115:17118   */\n      dup2\n        /* \"#utility.yul\":17100:17118   */\n      swap1\n      pop\n        /* \"#utility.yul\":16976:17124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17130:17520   */\n    tag_413:\n        /* \"#utility.yul\":17236:17239   */\n      0x00\n        /* \"#utility.yul\":17264:17303   */\n      tag_617\n        /* \"#utility.yul\":17297:17302   */\n      dup3\n        /* \"#utility.yul\":17264:17303   */\n      tag_377\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":17319:17408   */\n      tag_618\n        /* \"#utility.yul\":17401:17407   */\n      dup2\n        /* \"#utility.yul\":17396:17399   */\n      dup6\n        /* \"#utility.yul\":17319:17408   */\n      tag_412\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":17312:17408   */\n      swap4\n      pop\n        /* \"#utility.yul\":17417:17482   */\n      tag_619\n        /* \"#utility.yul\":17475:17481   */\n      dup2\n        /* \"#utility.yul\":17470:17473   */\n      dup6\n        /* \"#utility.yul\":17463:17467   */\n      0x20\n        /* \"#utility.yul\":17456:17461   */\n      dup7\n        /* \"#utility.yul\":17452:17468   */\n      add\n        /* \"#utility.yul\":17417:17482   */\n      tag_379\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":17507:17513   */\n      dup1\n        /* \"#utility.yul\":17502:17505   */\n      dup5\n        /* \"#utility.yul\":17498:17514   */\n      add\n        /* \"#utility.yul\":17491:17514   */\n      swap2\n      pop\n        /* \"#utility.yul\":17240:17520   */\n      pop\n        /* \"#utility.yul\":17130:17520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17526:17961   */\n    tag_226:\n        /* \"#utility.yul\":17706:17709   */\n      0x00\n        /* \"#utility.yul\":17728:17823   */\n      tag_621\n        /* \"#utility.yul\":17819:17822   */\n      dup3\n        /* \"#utility.yul\":17810:17816   */\n      dup6\n        /* \"#utility.yul\":17728:17823   */\n      tag_413\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":17721:17823   */\n      swap2\n      pop\n        /* \"#utility.yul\":17840:17935   */\n      tag_622\n        /* \"#utility.yul\":17931:17934   */\n      dup3\n        /* \"#utility.yul\":17922:17928   */\n      dup5\n        /* \"#utility.yul\":17840:17935   */\n      tag_413\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":17833:17935   */\n      swap2\n      pop\n        /* \"#utility.yul\":17952:17955   */\n      dup2\n        /* \"#utility.yul\":17945:17955   */\n      swap1\n      pop\n        /* \"#utility.yul\":17526:17961   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17967:18108   */\n    tag_414:\n        /* \"#utility.yul\":18016:18020   */\n      0x00\n        /* \"#utility.yul\":18039:18042   */\n      dup2\n        /* \"#utility.yul\":18031:18042   */\n      swap1\n      pop\n        /* \"#utility.yul\":18062:18065   */\n      dup2\n        /* \"#utility.yul\":18059:18060   */\n      0x00\n        /* \"#utility.yul\":18052:18066   */\n      mstore\n        /* \"#utility.yul\":18096:18100   */\n      0x20\n        /* \"#utility.yul\":18093:18094   */\n      0x00\n        /* \"#utility.yul\":18083:18101   */\n      keccak256\n        /* \"#utility.yul\":18075:18101   */\n      swap1\n      pop\n        /* \"#utility.yul\":17967:18108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18114:18207   */\n    tag_415:\n        /* \"#utility.yul\":18151:18157   */\n      0x00\n        /* \"#utility.yul\":18198:18200   */\n      0x20\n        /* \"#utility.yul\":18193:18195   */\n      0x1f\n        /* \"#utility.yul\":18186:18191   */\n      dup4\n        /* \"#utility.yul\":18182:18196   */\n      add\n        /* \"#utility.yul\":18178:18201   */\n      div\n        /* \"#utility.yul\":18168:18201   */\n      swap1\n      pop\n        /* \"#utility.yul\":18114:18207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18213:18320   */\n    tag_416:\n        /* \"#utility.yul\":18257:18265   */\n      0x00\n        /* \"#utility.yul\":18307:18312   */\n      dup3\n        /* \"#utility.yul\":18301:18305   */\n      dup3\n        /* \"#utility.yul\":18297:18313   */\n      shl\n        /* \"#utility.yul\":18276:18313   */\n      swap1\n      pop\n        /* \"#utility.yul\":18213:18320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18326:18719   */\n    tag_417:\n        /* \"#utility.yul\":18395:18401   */\n      0x00\n        /* \"#utility.yul\":18445:18446   */\n      0x08\n        /* \"#utility.yul\":18433:18443   */\n      dup4\n        /* \"#utility.yul\":18429:18447   */\n      mul\n        /* \"#utility.yul\":18468:18565   */\n      tag_627\n        /* \"#utility.yul\":18498:18564   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18487:18496   */\n      dup3\n        /* \"#utility.yul\":18468:18565   */\n      tag_416\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":18586:18625   */\n      tag_628\n        /* \"#utility.yul\":18616:18624   */\n      dup7\n        /* \"#utility.yul\":18605:18614   */\n      dup4\n        /* \"#utility.yul\":18586:18625   */\n      tag_416\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":18574:18625   */\n      swap6\n      pop\n        /* \"#utility.yul\":18658:18662   */\n      dup1\n        /* \"#utility.yul\":18654:18663   */\n      not\n        /* \"#utility.yul\":18647:18652   */\n      dup5\n        /* \"#utility.yul\":18643:18664   */\n      and\n        /* \"#utility.yul\":18634:18664   */\n      swap4\n      pop\n        /* \"#utility.yul\":18707:18711   */\n      dup1\n        /* \"#utility.yul\":18697:18705   */\n      dup7\n        /* \"#utility.yul\":18693:18712   */\n      and\n        /* \"#utility.yul\":18686:18691   */\n      dup5\n        /* \"#utility.yul\":18683:18713   */\n      or\n        /* \"#utility.yul\":18673:18713   */\n      swap3\n      pop\n        /* \"#utility.yul\":18402:18719   */\n      pop\n      pop\n        /* \"#utility.yul\":18326:18719   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18725:18785   */\n    tag_418:\n        /* \"#utility.yul\":18753:18756   */\n      0x00\n        /* \"#utility.yul\":18774:18779   */\n      dup2\n        /* \"#utility.yul\":18767:18779   */\n      swap1\n      pop\n        /* \"#utility.yul\":18725:18785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18791:18933   */\n    tag_419:\n        /* \"#utility.yul\":18841:18850   */\n      0x00\n        /* \"#utility.yul\":18874:18927   */\n      tag_631\n        /* \"#utility.yul\":18892:18926   */\n      tag_632\n        /* \"#utility.yul\":18901:18925   */\n      tag_633\n        /* \"#utility.yul\":18919:18924   */\n      dup5\n        /* \"#utility.yul\":18901:18925   */\n      tag_382\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":18892:18926   */\n      tag_418\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":18874:18927   */\n      tag_382\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":18861:18927   */\n      swap1\n      pop\n        /* \"#utility.yul\":18791:18933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18939:19014   */\n    tag_420:\n        /* \"#utility.yul\":18982:18985   */\n      0x00\n        /* \"#utility.yul\":19003:19008   */\n      dup2\n        /* \"#utility.yul\":18996:19008   */\n      swap1\n      pop\n        /* \"#utility.yul\":18939:19014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19020:19289   */\n    tag_421:\n        /* \"#utility.yul\":19130:19169   */\n      tag_636\n        /* \"#utility.yul\":19161:19168   */\n      dup4\n        /* \"#utility.yul\":19130:19169   */\n      tag_419\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":19191:19282   */\n      tag_637\n        /* \"#utility.yul\":19240:19281   */\n      tag_638\n        /* \"#utility.yul\":19264:19280   */\n      dup3\n        /* \"#utility.yul\":19240:19281   */\n      tag_420\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":19232:19238   */\n      dup5\n        /* \"#utility.yul\":19225:19229   */\n      dup5\n        /* \"#utility.yul\":19219:19230   */\n      sload\n        /* \"#utility.yul\":19191:19282   */\n      tag_417\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":19185:19189   */\n      dup3\n        /* \"#utility.yul\":19178:19283   */\n      sstore\n        /* \"#utility.yul\":19096:19289   */\n      pop\n        /* \"#utility.yul\":19020:19289   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19295:19368   */\n    tag_422:\n        /* \"#utility.yul\":19340:19343   */\n      0x00\n        /* \"#utility.yul\":19295:19368   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19374:19563   */\n    tag_423:\n        /* \"#utility.yul\":19451:19483   */\n      tag_641\n      tag_422\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":19492:19557   */\n      tag_642\n        /* \"#utility.yul\":19550:19556   */\n      dup2\n        /* \"#utility.yul\":19542:19548   */\n      dup5\n        /* \"#utility.yul\":19536:19540   */\n      dup5\n        /* \"#utility.yul\":19492:19557   */\n      tag_421\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":19427:19563   */\n      pop\n        /* \"#utility.yul\":19374:19563   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19569:19755   */\n    tag_424:\n        /* \"#utility.yul\":19629:19749   */\n    tag_644:\n        /* \"#utility.yul\":19646:19649   */\n      dup2\n        /* \"#utility.yul\":19639:19644   */\n      dup2\n        /* \"#utility.yul\":19636:19650   */\n      lt\n        /* \"#utility.yul\":19629:19749   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":19700:19739   */\n      tag_647\n        /* \"#utility.yul\":19737:19738   */\n      0x00\n        /* \"#utility.yul\":19730:19735   */\n      dup3\n        /* \"#utility.yul\":19700:19739   */\n      tag_423\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":19673:19674   */\n      0x01\n        /* \"#utility.yul\":19666:19671   */\n      dup2\n        /* \"#utility.yul\":19662:19675   */\n      add\n        /* \"#utility.yul\":19653:19675   */\n      swap1\n      pop\n        /* \"#utility.yul\":19629:19749   */\n      jump(tag_644)\n    tag_646:\n        /* \"#utility.yul\":19569:19755   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19761:20304   */\n    tag_425:\n        /* \"#utility.yul\":19862:19864   */\n      0x1f\n        /* \"#utility.yul\":19857:19860   */\n      dup3\n        /* \"#utility.yul\":19854:19865   */\n      gt\n        /* \"#utility.yul\":19851:20297   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":19896:19934   */\n      tag_650\n        /* \"#utility.yul\":19928:19933   */\n      dup2\n        /* \"#utility.yul\":19896:19934   */\n      tag_414\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":19980:20009   */\n      tag_651\n        /* \"#utility.yul\":19998:20008   */\n      dup5\n        /* \"#utility.yul\":19980:20009   */\n      tag_415\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":19970:19978   */\n      dup2\n        /* \"#utility.yul\":19966:20010   */\n      add\n        /* \"#utility.yul\":20163:20165   */\n      0x20\n        /* \"#utility.yul\":20151:20161   */\n      dup6\n        /* \"#utility.yul\":20148:20166   */\n      lt\n        /* \"#utility.yul\":20145:20194   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":20184:20192   */\n      dup2\n        /* \"#utility.yul\":20169:20192   */\n      swap1\n      pop\n        /* \"#utility.yul\":20145:20194   */\n    tag_652:\n        /* \"#utility.yul\":20207:20287   */\n      tag_653\n        /* \"#utility.yul\":20263:20285   */\n      tag_654\n        /* \"#utility.yul\":20281:20284   */\n      dup6\n        /* \"#utility.yul\":20263:20285   */\n      tag_415\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":20253:20261   */\n      dup4\n        /* \"#utility.yul\":20249:20286   */\n      add\n        /* \"#utility.yul\":20236:20247   */\n      dup3\n        /* \"#utility.yul\":20207:20287   */\n      tag_424\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":19866:20297   */\n      pop\n      pop\n        /* \"#utility.yul\":19851:20297   */\n    tag_649:\n        /* \"#utility.yul\":19761:20304   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20310:20427   */\n    tag_426:\n        /* \"#utility.yul\":20364:20372   */\n      0x00\n        /* \"#utility.yul\":20414:20419   */\n      dup3\n        /* \"#utility.yul\":20408:20412   */\n      dup3\n        /* \"#utility.yul\":20404:20420   */\n      shr\n        /* \"#utility.yul\":20383:20420   */\n      swap1\n      pop\n        /* \"#utility.yul\":20310:20427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20433:20602   */\n    tag_427:\n        /* \"#utility.yul\":20477:20483   */\n      0x00\n        /* \"#utility.yul\":20510:20561   */\n      tag_657\n        /* \"#utility.yul\":20558:20559   */\n      0x00\n        /* \"#utility.yul\":20554:20560   */\n      not\n        /* \"#utility.yul\":20546:20551   */\n      dup5\n        /* \"#utility.yul\":20543:20544   */\n      0x08\n        /* \"#utility.yul\":20539:20552   */\n      mul\n        /* \"#utility.yul\":20510:20561   */\n      tag_426\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":20506:20562   */\n      not\n        /* \"#utility.yul\":20591:20595   */\n      dup1\n        /* \"#utility.yul\":20585:20589   */\n      dup4\n        /* \"#utility.yul\":20581:20596   */\n      and\n        /* \"#utility.yul\":20571:20596   */\n      swap2\n      pop\n        /* \"#utility.yul\":20484:20602   */\n      pop\n        /* \"#utility.yul\":20433:20602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20607:20902   */\n    tag_428:\n        /* \"#utility.yul\":20683:20687   */\n      0x00\n        /* \"#utility.yul\":20829:20858   */\n      tag_659\n        /* \"#utility.yul\":20854:20857   */\n      dup4\n        /* \"#utility.yul\":20848:20852   */\n      dup4\n        /* \"#utility.yul\":20829:20858   */\n      tag_427\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":20821:20858   */\n      swap2\n      pop\n        /* \"#utility.yul\":20891:20894   */\n      dup3\n        /* \"#utility.yul\":20888:20889   */\n      0x02\n        /* \"#utility.yul\":20884:20895   */\n      mul\n        /* \"#utility.yul\":20878:20882   */\n      dup3\n        /* \"#utility.yul\":20875:20896   */\n      or\n        /* \"#utility.yul\":20867:20896   */\n      swap1\n      pop\n        /* \"#utility.yul\":20607:20902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20907:22302   */\n    tag_234:\n        /* \"#utility.yul\":21024:21061   */\n      tag_661\n        /* \"#utility.yul\":21057:21060   */\n      dup3\n        /* \"#utility.yul\":21024:21061   */\n      tag_377\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":21126:21144   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21118:21124   */\n      dup2\n        /* \"#utility.yul\":21115:21145   */\n      gt\n        /* \"#utility.yul\":21112:21168   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":21148:21166   */\n      tag_663\n      tag_320\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":21112:21168   */\n    tag_662:\n        /* \"#utility.yul\":21192:21230   */\n      tag_664\n        /* \"#utility.yul\":21224:21228   */\n      dup3\n        /* \"#utility.yul\":21218:21229   */\n      sload\n        /* \"#utility.yul\":21192:21230   */\n      tag_100\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":21277:21344   */\n      tag_665\n        /* \"#utility.yul\":21337:21343   */\n      dup3\n        /* \"#utility.yul\":21329:21335   */\n      dup3\n        /* \"#utility.yul\":21323:21327   */\n      dup6\n        /* \"#utility.yul\":21277:21344   */\n      tag_425\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":21371:21372   */\n      0x00\n        /* \"#utility.yul\":21395:21399   */\n      0x20\n        /* \"#utility.yul\":21382:21399   */\n      swap1\n      pop\n        /* \"#utility.yul\":21427:21429   */\n      0x1f\n        /* \"#utility.yul\":21419:21425   */\n      dup4\n        /* \"#utility.yul\":21416:21430   */\n      gt\n        /* \"#utility.yul\":21444:21445   */\n      0x01\n        /* \"#utility.yul\":21439:22057   */\n      dup2\n      eq\n      tag_667\n      jumpi\n        /* \"#utility.yul\":22101:22102   */\n      0x00\n        /* \"#utility.yul\":22118:22124   */\n      dup5\n        /* \"#utility.yul\":22115:22192   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":22167:22176   */\n      dup3\n        /* \"#utility.yul\":22162:22165   */\n      dup8\n        /* \"#utility.yul\":22158:22177   */\n      add\n        /* \"#utility.yul\":22152:22178   */\n      mload\n        /* \"#utility.yul\":22143:22178   */\n      swap1\n      pop\n        /* \"#utility.yul\":22115:22192   */\n    tag_668:\n        /* \"#utility.yul\":22218:22285   */\n      tag_669\n        /* \"#utility.yul\":22278:22284   */\n      dup6\n        /* \"#utility.yul\":22271:22276   */\n      dup3\n        /* \"#utility.yul\":22218:22285   */\n      tag_428\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":22212:22216   */\n      dup7\n        /* \"#utility.yul\":22205:22286   */\n      sstore\n        /* \"#utility.yul\":22074:22296   */\n      pop\n        /* \"#utility.yul\":21409:22296   */\n      jump(tag_666)\n        /* \"#utility.yul\":21439:22057   */\n    tag_667:\n        /* \"#utility.yul\":21491:21495   */\n      0x1f\n        /* \"#utility.yul\":21487:21496   */\n      not\n        /* \"#utility.yul\":21479:21485   */\n      dup5\n        /* \"#utility.yul\":21475:21497   */\n      and\n        /* \"#utility.yul\":21525:21562   */\n      tag_670\n        /* \"#utility.yul\":21557:21561   */\n      dup7\n        /* \"#utility.yul\":21525:21562   */\n      tag_414\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":21584:21585   */\n      0x00\n        /* \"#utility.yul\":21598:21806   */\n    tag_671:\n        /* \"#utility.yul\":21612:21619   */\n      dup3\n        /* \"#utility.yul\":21609:21610   */\n      dup2\n        /* \"#utility.yul\":21606:21620   */\n      lt\n        /* \"#utility.yul\":21598:21806   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":21691:21700   */\n      dup5\n        /* \"#utility.yul\":21686:21689   */\n      dup10\n        /* \"#utility.yul\":21682:21701   */\n      add\n        /* \"#utility.yul\":21676:21702   */\n      mload\n        /* \"#utility.yul\":21668:21674   */\n      dup3\n        /* \"#utility.yul\":21661:21703   */\n      sstore\n        /* \"#utility.yul\":21742:21743   */\n      0x01\n        /* \"#utility.yul\":21734:21740   */\n      dup3\n        /* \"#utility.yul\":21730:21744   */\n      add\n        /* \"#utility.yul\":21720:21744   */\n      swap2\n      pop\n        /* \"#utility.yul\":21789:21791   */\n      0x20\n        /* \"#utility.yul\":21778:21787   */\n      dup6\n        /* \"#utility.yul\":21774:21792   */\n      add\n        /* \"#utility.yul\":21761:21792   */\n      swap5\n      pop\n        /* \"#utility.yul\":21635:21639   */\n      0x20\n        /* \"#utility.yul\":21632:21633   */\n      dup2\n        /* \"#utility.yul\":21628:21640   */\n      add\n        /* \"#utility.yul\":21623:21640   */\n      swap1\n      pop\n        /* \"#utility.yul\":21598:21806   */\n      jump(tag_671)\n    tag_673:\n        /* \"#utility.yul\":21834:21840   */\n      dup7\n        /* \"#utility.yul\":21825:21832   */\n      dup4\n        /* \"#utility.yul\":21822:21841   */\n      lt\n        /* \"#utility.yul\":21819:21998   */\n      iszero\n      tag_674\n      jumpi\n        /* \"#utility.yul\":21892:21901   */\n      dup5\n        /* \"#utility.yul\":21887:21890   */\n      dup10\n        /* \"#utility.yul\":21883:21902   */\n      add\n        /* \"#utility.yul\":21877:21903   */\n      mload\n        /* \"#utility.yul\":21935:21983   */\n      tag_675\n        /* \"#utility.yul\":21977:21981   */\n      0x1f\n        /* \"#utility.yul\":21969:21975   */\n      dup10\n        /* \"#utility.yul\":21965:21982   */\n      and\n        /* \"#utility.yul\":21954:21963   */\n      dup3\n        /* \"#utility.yul\":21935:21983   */\n      tag_427\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":21927:21933   */\n      dup4\n        /* \"#utility.yul\":21920:21984   */\n      sstore\n        /* \"#utility.yul\":21842:21998   */\n      pop\n        /* \"#utility.yul\":21819:21998   */\n    tag_674:\n        /* \"#utility.yul\":22044:22045   */\n      0x01\n        /* \"#utility.yul\":22040:22041   */\n      0x02\n        /* \"#utility.yul\":22032:22038   */\n      dup9\n        /* \"#utility.yul\":22028:22042   */\n      mul\n        /* \"#utility.yul\":22024:22046   */\n      add\n        /* \"#utility.yul\":22018:22022   */\n      dup9\n        /* \"#utility.yul\":22011:22047   */\n      sstore\n        /* \"#utility.yul\":21446:22057   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21409:22296   */\n    tag_666:\n      pop\n        /* \"#utility.yul\":20999:22302   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20907:22302   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22308:22502   */\n    tag_301:\n        /* \"#utility.yul\":22348:22352   */\n      0x00\n        /* \"#utility.yul\":22368:22388   */\n      tag_677\n        /* \"#utility.yul\":22386:22387   */\n      dup3\n        /* \"#utility.yul\":22368:22388   */\n      tag_382\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":22363:22388   */\n      swap2\n      pop\n        /* \"#utility.yul\":22402:22422   */\n      tag_678\n        /* \"#utility.yul\":22420:22421   */\n      dup4\n        /* \"#utility.yul\":22402:22422   */\n      tag_382\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":22397:22422   */\n      swap3\n      pop\n        /* \"#utility.yul\":22446:22447   */\n      dup3\n        /* \"#utility.yul\":22443:22444   */\n      dup3\n        /* \"#utility.yul\":22439:22448   */\n      sub\n        /* \"#utility.yul\":22431:22448   */\n      swap1\n      pop\n        /* \"#utility.yul\":22470:22471   */\n      dup2\n        /* \"#utility.yul\":22464:22468   */\n      dup2\n        /* \"#utility.yul\":22461:22472   */\n      gt\n        /* \"#utility.yul\":22458:22495   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":22475:22493   */\n      tag_680\n      tag_405\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":22458:22495   */\n    tag_679:\n        /* \"#utility.yul\":22308:22502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22508:22688   */\n    tag_310:\n        /* \"#utility.yul\":22556:22633   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22553:22554   */\n      0x00\n        /* \"#utility.yul\":22546:22634   */\n      mstore\n        /* \"#utility.yul\":22653:22657   */\n      0x31\n        /* \"#utility.yul\":22650:22651   */\n      0x04\n        /* \"#utility.yul\":22643:22658   */\n      mstore\n        /* \"#utility.yul\":22677:22681   */\n      0x24\n        /* \"#utility.yul\":22674:22675   */\n      0x00\n        /* \"#utility.yul\":22667:22682   */\n      revert\n        /* \"#utility.yul\":22694:22874   */\n    tag_326:\n        /* \"#utility.yul\":22742:22819   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22739:22740   */\n      0x00\n        /* \"#utility.yul\":22732:22820   */\n      mstore\n        /* \"#utility.yul\":22839:22843   */\n      0x12\n        /* \"#utility.yul\":22836:22837   */\n      0x04\n        /* \"#utility.yul\":22829:22844   */\n      mstore\n        /* \"#utility.yul\":22863:22867   */\n      0x24\n        /* \"#utility.yul\":22860:22861   */\n      0x00\n        /* \"#utility.yul\":22853:22868   */\n      revert\n\n    auxdata: 0xa2646970667358221220be3de7cd8662276746ee6cda6d8a97bb93fa247642f0278e9994f802a5dfed8a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_238": {
									"entryPoint": null,
									"id": 238,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3386": {
									"entryPoint": null,
									"id": 3386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:18",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:18"
															},
															"nodeType": "YulIf",
															"src": "623:81:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:18"
															},
															"nodeType": "YulIf",
															"src": "714:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:18",
														"type": ""
													}
												],
												"src": "484:320:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:18",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:18",
														"type": ""
													}
												],
												"src": "810:141:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:18",
														"type": ""
													}
												],
												"src": "957:93:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:18"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:18",
														"type": ""
													}
												],
												"src": "1056:107:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:18"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:18",
														"type": ""
													}
												],
												"src": "1169:393:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:18",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:18",
														"type": ""
													}
												],
												"src": "1568:77:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:18",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:18",
														"type": ""
													}
												],
												"src": "1651:60:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:18",
														"type": ""
													}
												],
												"src": "1717:142:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:18",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:18",
														"type": ""
													}
												],
												"src": "1865:75:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:18"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:18",
														"type": ""
													}
												],
												"src": "1946:269:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:18",
														"type": ""
													}
												],
												"src": "2221:73:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:18"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:18",
														"type": ""
													}
												],
												"src": "2300:189:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:18"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:18",
																"statements": []
															},
															"src": "2555:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:18",
														"type": ""
													}
												],
												"src": "2495:186:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:18",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:18",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:18",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:18"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:18"
															},
															"nodeType": "YulIf",
															"src": "2777:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:18",
														"type": ""
													}
												],
												"src": "2687:543:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:18"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:18",
														"type": ""
													}
												],
												"src": "3236:117:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:18"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:18",
														"type": ""
													}
												],
												"src": "3359:169:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:18"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:18",
														"type": ""
													}
												],
												"src": "3533:295:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:18"
															},
															"nodeType": "YulIf",
															"src": "4038:56:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:18"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:18",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:18"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:18"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:18"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:18"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:18",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:18",
																					"statements": []
																				},
																				"src": "4524:208:18"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:18",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:18"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:18"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:18"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:18"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:18"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:18",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:18",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:18"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:18"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:18"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:18",
														"type": ""
													}
												],
												"src": "3833:1395:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052612710600c5534801562000016575f80fd5b506040518060400160405280600781526020017f416c6368656d79000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f414c434800000000000000000000000000000000000000000000000000000000815250815f908162000093919062000312565b508060019081620000a5919062000312565b505050620003f6565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200012a57607f821691505b60208210810362000140576200013f620000e5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620001a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000167565b620001b0868362000167565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001fa620001f4620001ee84620001c8565b620001d1565b620001c8565b9050919050565b5f819050919050565b6200021583620001da565b6200022d620002248262000201565b84845462000173565b825550505050565b5f90565b6200024362000235565b620002508184846200020a565b505050565b5b8181101562000277576200026b5f8262000239565b60018101905062000256565b5050565b601f821115620002c657620002908162000146565b6200029b8462000158565b81016020851015620002ab578190505b620002c3620002ba8562000158565b83018262000255565b50505b505050565b5f82821c905092915050565b5f620002e85f1984600802620002cb565b1980831691505092915050565b5f620003028383620002d7565b9150826002028217905092915050565b6200031d82620000ae565b67ffffffffffffffff811115620003395762000338620000b8565b5b62000345825462000112565b620003528282856200027b565b5f60209050601f83116001811462000388575f841562000373578287015190505b6200037f8582620002f5565b865550620003ee565b601f198416620003988662000146565b5f5b82811015620003c1578489015182556001820191506020850194506020810190506200039a565b86831015620003e15784890151620003dd601f891682620002d7565b8355505b6001600288020188555050505b505050505050565b612acd80620004045f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c80634f6ccce7116100a0578063a22cb4651161006f578063a22cb465146102db578063b88d4fde146102f7578063c87b56dd14610313578063d204c45e14610343578063e985e9c51461035f57610109565b80634f6ccce71461022d5780636352211e1461025d57806370a082311461028d57806395d89b41146102bd57610109565b806318160ddd116100dc57806318160ddd146101a757806323b872dd146101c55780632f745c59146101e157806342842e0e1461021157610109565b806301ffc9a71461010d57806306fdde031461013d578063081812fc1461015b578063095ea7b31461018b575b5f80fd5b61012760048036038101906101229190611e6b565b61038f565b6040516101349190611eb0565b60405180910390f35b6101456103a0565b6040516101529190611f53565b60405180910390f35b61017560048036038101906101709190611fa6565b61042f565b6040516101829190612010565b60405180910390f35b6101a560048036038101906101a09190612053565b61044a565b005b6101af610460565b6040516101bc91906120a0565b60405180910390f35b6101df60048036038101906101da91906120b9565b61046c565b005b6101fb60048036038101906101f69190612053565b61056b565b60405161020891906120a0565b60405180910390f35b61022b600480360381019061022691906120b9565b61060f565b005b61024760048036038101906102429190611fa6565b61062e565b60405161025491906120a0565b60405180910390f35b61027760048036038101906102729190611fa6565b6106a0565b6040516102849190612010565b60405180910390f35b6102a760048036038101906102a29190612109565b6106b1565b6040516102b491906120a0565b60405180910390f35b6102c5610767565b6040516102d29190611f53565b60405180910390f35b6102f560048036038101906102f0919061215e565b6107f7565b005b610311600480360381019061030c91906122c8565b61080d565b005b61032d60048036038101906103289190611fa6565b61082a565b60405161033a9190611f53565b60405180910390f35b61035d600480360381019061035891906123e6565b61083c565b005b61037960048036038101906103749190612440565b6108b3565b6040516103869190611eb0565b60405180910390f35b5f61039982610941565b9050919050565b60605f80546103ae906124ab565b80601f01602080910402602001604051908101604052809291908181526020018280546103da906124ab565b80156104255780601f106103fc57610100808354040283529160200191610425565b820191905f5260205f20905b81548152906001019060200180831161040857829003601f168201915b5050505050905090565b5f610439826109a1565b5061044382610a27565b9050919050565b61045c8282610457610a60565b610a67565b5050565b5f600880549050905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104dc575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104d39190612010565b60405180910390fd5b5f6104ef83836104ea610a60565b610a79565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610565578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161055c939291906124db565b60405180910390fd5b50505050565b5f610575836106b1565b82106105ba5782826040517fa57d13dc0000000000000000000000000000000000000000000000000000000081526004016105b1929190612510565b60405180910390fd5b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2054905092915050565b61062983838360405180602001604052805f81525061080d565b505050565b5f610637610460565b821061067c575f826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610673929190612510565b60405180910390fd5b600882815481106106905761068f612537565b5b905f5260205f2001549050919050565b5f6106aa826109a1565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610722575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107199190612010565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610776906124ab565b80601f01602080910402602001604051908101604052809291908181526020018280546107a2906124ab565b80156107ed5780601f106107c4576101008083540402835291602001916107ed565b820191905f5260205f20905b8154815290600101906020018083116107d057829003601f168201915b5050505050905090565b610809610802610a60565b8383610a8e565b5050565b61081884848461046c565b61082484848484610bf7565b50505050565b606061083582610da9565b9050919050565b5f600b5f81548092919061084f90612591565b919050559050600c5481111561089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190612648565b60405180910390fd5b6108a48382610eb4565b6108ae8183610ed1565b505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061099a575061099982610f2b565b5b9050919050565b5f806109ac83610fa4565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a1e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a1591906120a0565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610a748383836001610fdd565b505050565b5f610a8584848461119c565b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610afe57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610af59190612010565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bea9190611eb0565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610da3578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610c3a610a60565b8685856040518563ffffffff1660e01b8152600401610c5c94939291906126b8565b6020604051808303815f875af1925050508015610c9757506040513d601f19601f82011682018060405250810190610c949190612716565b60015b610d18573d805f8114610cc5576040519150601f19603f3d011682016040523d82523d5f602084013e610cca565b606091505b505f815103610d1057836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610d079190612010565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610da157836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610d989190612010565b60405180910390fd5b505b50505050565b6060610db4826109a1565b505f600a5f8481526020019081526020015f208054610dd2906124ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfe906124ab565b8015610e495780601f10610e2057610100808354040283529160200191610e49565b820191905f5260205f20905b815481529060010190602001808311610e2c57829003601f168201915b505050505090505f610e596112b6565b90505f815103610e6d578192505050610eaf565b5f82511115610ea1578082604051602001610e8992919061277b565b60405160208183030381529060405292505050610eaf565b610eaa846112cc565b925050505b919050565b610ecd828260405180602001604052805f815250611332565b5050565b80600a5f8481526020019081526020015f209081610eef919061293b565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610f1f91906120a0565b60405180910390a15050565b5f7f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610f9d5750610f9c8261134d565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061101557505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611147575f611024846109a1565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561108e57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156110a1575061109f81846108b3565b155b156110e357826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016110da9190612010565b60405180910390fd5b811561114557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f806111a985858561142e565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ec576111e784611639565b61122b565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461122a57611229818561167d565b5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361126c57611267846117c7565b6112ab565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112aa576112a98585611887565b5b5b809150509392505050565b606060405180602001604052805f815250905090565b60606112d7826109a1565b505f6112e16112b6565b90505f8151116112ff5760405180602001604052805f81525061132a565b806113098461190b565b60405160200161131a92919061277b565b6040516020818303038152906040525b915050919050565b61133c83836119d5565b6113485f848484610bf7565b505050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061141757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611427575061142682611ac8565b5b9050919050565b5f8061143984610fa4565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461147a57611479818486611b31565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611505576114b95f855f80610fdd565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461158457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60088054905060095f8381526020019081526020015f2081905550600881908060018154018082558091505060019003905f5260205f20015f909190919091505550565b5f611687836106b1565b90505f60075f8481526020019081526020015f2054905081811461175e575f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205490508060065f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20819055508160075f8381526020019081526020015f2081905550505b60075f8481526020019081526020015f205f905560065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f905550505050565b5f60016008805490506117da9190612a0a565b90505f60095f8481526020019081526020015f205490505f6008838154811061180657611805612537565b5b905f5260205f2001549050806008838154811061182657611825612537565b5b905f5260205f2001819055508160095f8381526020019081526020015f208190555060095f8581526020019081526020015f205f9055600880548061186e5761186d612a3d565b5b600190038181905f5260205f20015f9055905550505050565b5f6001611893846106b1565b61189d9190612a0a565b90508160065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f20819055508060075f8481526020019081526020015f2081905550505050565b60605f600161191984611bf4565b0190505f8167ffffffffffffffff811115611937576119366121a4565b5b6040519080825280601f01601f1916602001820160405280156119695781602001600182028036833780820191505090505b5090505f82602001820190505b6001156119ca578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816119bf576119be612a6a565b5b0494505f8503611976575b819350505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a45575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a3c9190612010565b60405180910390fd5b5f611a5183835f610a79565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ac3575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611aba9190612010565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611b3c838383611d45565b611bef575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bb057806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611ba791906120a0565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611be6929190612510565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c50577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c4657611c45612a6a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c8d576d04ee2d6d415b85acef81000000008381611c8357611c82612a6a565b5b0492506020810190505b662386f26fc100008310611cbc57662386f26fc100008381611cb257611cb1612a6a565b5b0492506010810190505b6305f5e1008310611ce5576305f5e1008381611cdb57611cda612a6a565b5b0492506008810190505b6127108310611d0a576127108381611d0057611cff612a6a565b5b0492506004810190505b60648310611d2d5760648381611d2357611d22612a6a565b5b0492506002810190505b600a8310611d3c576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611dfc57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611dbd5750611dbc84846108b3565b5b80611dfb57508273ffffffffffffffffffffffffffffffffffffffff16611de383610a27565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e4a81611e16565b8114611e54575f80fd5b50565b5f81359050611e6581611e41565b92915050565b5f60208284031215611e8057611e7f611e0e565b5b5f611e8d84828501611e57565b91505092915050565b5f8115159050919050565b611eaa81611e96565b82525050565b5f602082019050611ec35f830184611ea1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611f00578082015181840152602081019050611ee5565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611f2582611ec9565b611f2f8185611ed3565b9350611f3f818560208601611ee3565b611f4881611f0b565b840191505092915050565b5f6020820190508181035f830152611f6b8184611f1b565b905092915050565b5f819050919050565b611f8581611f73565b8114611f8f575f80fd5b50565b5f81359050611fa081611f7c565b92915050565b5f60208284031215611fbb57611fba611e0e565b5b5f611fc884828501611f92565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ffa82611fd1565b9050919050565b61200a81611ff0565b82525050565b5f6020820190506120235f830184612001565b92915050565b61203281611ff0565b811461203c575f80fd5b50565b5f8135905061204d81612029565b92915050565b5f806040838503121561206957612068611e0e565b5b5f6120768582860161203f565b925050602061208785828601611f92565b9150509250929050565b61209a81611f73565b82525050565b5f6020820190506120b35f830184612091565b92915050565b5f805f606084860312156120d0576120cf611e0e565b5b5f6120dd8682870161203f565b93505060206120ee8682870161203f565b92505060406120ff86828701611f92565b9150509250925092565b5f6020828403121561211e5761211d611e0e565b5b5f61212b8482850161203f565b91505092915050565b61213d81611e96565b8114612147575f80fd5b50565b5f8135905061215881612134565b92915050565b5f806040838503121561217457612173611e0e565b5b5f6121818582860161203f565b92505060206121928582860161214a565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6121da82611f0b565b810181811067ffffffffffffffff821117156121f9576121f86121a4565b5b80604052505050565b5f61220b611e05565b905061221782826121d1565b919050565b5f67ffffffffffffffff821115612236576122356121a4565b5b61223f82611f0b565b9050602081019050919050565b828183375f83830152505050565b5f61226c6122678461221c565b612202565b905082815260208101848484011115612288576122876121a0565b5b61229384828561224c565b509392505050565b5f82601f8301126122af576122ae61219c565b5b81356122bf84826020860161225a565b91505092915050565b5f805f80608085870312156122e0576122df611e0e565b5b5f6122ed8782880161203f565b94505060206122fe8782880161203f565b935050604061230f87828801611f92565b925050606085013567ffffffffffffffff8111156123305761232f611e12565b5b61233c8782880161229b565b91505092959194509250565b5f67ffffffffffffffff821115612362576123616121a4565b5b61236b82611f0b565b9050602081019050919050565b5f61238a61238584612348565b612202565b9050828152602081018484840111156123a6576123a56121a0565b5b6123b184828561224c565b509392505050565b5f82601f8301126123cd576123cc61219c565b5b81356123dd848260208601612378565b91505092915050565b5f80604083850312156123fc576123fb611e0e565b5b5f6124098582860161203f565b925050602083013567ffffffffffffffff81111561242a57612429611e12565b5b612436858286016123b9565b9150509250929050565b5f806040838503121561245657612455611e0e565b5b5f6124638582860161203f565b92505060206124748582860161203f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124c257607f821691505b6020821081036124d5576124d461247e565b5b50919050565b5f6060820190506124ee5f830186612001565b6124fb6020830185612091565b6125086040830184612001565b949350505050565b5f6040820190506125235f830185612001565b6125306020830184612091565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61259b82611f73565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125cd576125cc612564565b5b600182019050919050565b7f49276d20536f72727920416c6c204e465427732068617665206265656e206d695f8201527f6e74656400000000000000000000000000000000000000000000000000000000602082015250565b5f612632602483611ed3565b915061263d826125d8565b604082019050919050565b5f6020820190508181035f83015261265f81612626565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61268a82612666565b6126948185612670565b93506126a4818560208601611ee3565b6126ad81611f0b565b840191505092915050565b5f6080820190506126cb5f830187612001565b6126d86020830186612001565b6126e56040830185612091565b81810360608301526126f78184612680565b905095945050505050565b5f8151905061271081611e41565b92915050565b5f6020828403121561272b5761272a611e0e565b5b5f61273884828501612702565b91505092915050565b5f81905092915050565b5f61275582611ec9565b61275f8185612741565b935061276f818560208601611ee3565b80840191505092915050565b5f612786828561274b565b9150612792828461274b565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026127fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826127bf565b61280486836127bf565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61283f61283a61283584611f73565b61281c565b611f73565b9050919050565b5f819050919050565b61285883612825565b61286c61286482612846565b8484546127cb565b825550505050565b5f90565b612880612874565b61288b81848461284f565b505050565b5b818110156128ae576128a35f82612878565b600181019050612891565b5050565b601f8211156128f3576128c48161279e565b6128cd846127b0565b810160208510156128dc578190505b6128f06128e8856127b0565b830182612890565b50505b505050565b5f82821c905092915050565b5f6129135f19846008026128f8565b1980831691505092915050565b5f61292b8383612904565b9150826002028217905092915050565b61294482611ec9565b67ffffffffffffffff81111561295d5761295c6121a4565b5b61296782546124ab565b6129728282856128b2565b5f60209050601f8311600181146129a3575f8415612991578287015190505b61299b8582612920565b865550612a02565b601f1984166129b18661279e565b5f5b828110156129d8578489015182556001820191506020850194506020810190506129b3565b868310156129f557848901516129f1601f891682612904565b8355505b6001600288020188555050505b505050505050565b5f612a1482611f73565b9150612a1f83611f73565b9250828203905081811115612a3757612a36612564565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220be3de7cd8662276746ee6cda6d8a97bb93fa247642f0278e9994f802a5dfed8a64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2710 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416C6368656D7900000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x414C434800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x93 SWAP2 SWAP1 PUSH3 0x312 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x312 JUMP JUMPDEST POP POP POP PUSH3 0x3F6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x12A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x140 JUMPI PUSH3 0x13F PUSH3 0xE5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x1A4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x167 JUMP JUMPDEST PUSH3 0x1B0 DUP7 DUP4 PUSH3 0x167 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1FA PUSH3 0x1F4 PUSH3 0x1EE DUP5 PUSH3 0x1C8 JUMP JUMPDEST PUSH3 0x1D1 JUMP JUMPDEST PUSH3 0x1C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x215 DUP4 PUSH3 0x1DA JUMP JUMPDEST PUSH3 0x22D PUSH3 0x224 DUP3 PUSH3 0x201 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x173 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x243 PUSH3 0x235 JUMP JUMPDEST PUSH3 0x250 DUP2 DUP5 DUP5 PUSH3 0x20A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x277 JUMPI PUSH3 0x26B PUSH0 DUP3 PUSH3 0x239 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x256 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x290 DUP2 PUSH3 0x146 JUMP JUMPDEST PUSH3 0x29B DUP5 PUSH3 0x158 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2AB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2C3 PUSH3 0x2BA DUP6 PUSH3 0x158 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x255 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2E8 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2CB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x302 DUP4 DUP4 PUSH3 0x2D7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x31D DUP3 PUSH3 0xAE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x339 JUMPI PUSH3 0x338 PUSH3 0xB8 JUMP JUMPDEST JUMPDEST PUSH3 0x345 DUP3 SLOAD PUSH3 0x112 JUMP JUMPDEST PUSH3 0x352 DUP3 DUP3 DUP6 PUSH3 0x27B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x388 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x373 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x37F DUP6 DUP3 PUSH3 0x2F5 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3EE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x398 DUP7 PUSH3 0x146 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3C1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x39A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3E1 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3DD PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2D7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2ACD DUP1 PUSH3 0x404 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x35F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BD JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x211 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x399 DUP3 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3AE SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3DA SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x425 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x425 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x408 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x439 DUP3 PUSH2 0x9A1 JUMP JUMPDEST POP PUSH2 0x443 DUP3 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45C DUP3 DUP3 PUSH2 0x457 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4DC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4EF DUP4 DUP4 PUSH2 0x4EA PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x565 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x575 DUP4 PUSH2 0x6B1 JUMP JUMPDEST DUP3 LT PUSH2 0x5BA JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x629 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x80D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x637 PUSH2 0x460 JUMP JUMPDEST DUP3 LT PUSH2 0x67C JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x673 SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x690 JUMPI PUSH2 0x68F PUSH2 0x2537 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6AA DUP3 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x722 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x776 SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x809 PUSH2 0x802 PUSH2 0xA60 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x818 DUP5 DUP5 DUP5 PUSH2 0x46C JUMP JUMPDEST PUSH2 0x824 DUP5 DUP5 DUP5 DUP5 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x835 DUP3 PUSH2 0xDA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x84F SWAP1 PUSH2 0x2591 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0xC SLOAD DUP2 GT ISZERO PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A4 DUP4 DUP3 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x8AE DUP2 DUP4 PUSH2 0xED1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x99A JUMPI POP PUSH2 0x999 DUP3 PUSH2 0xF2B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9AC DUP4 PUSH2 0xFA4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA74 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA85 DUP5 DUP5 DUP5 PUSH2 0x119C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xDA3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xC3A PUSH2 0xA60 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC97 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x2716 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD18 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xD10 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xDA1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDB4 DUP3 PUSH2 0x9A1 JUMP JUMPDEST POP PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xDD2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFE SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE49 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE20 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE49 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE2C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xE59 PUSH2 0x12B6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xE6D JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xEAF JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xEA1 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE89 SWAP3 SWAP2 SWAP1 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xEAA DUP5 PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1332 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x293B JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xF9D JUMPI POP PUSH2 0xF9C DUP3 PUSH2 0x134D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1015 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1147 JUMPI PUSH0 PUSH2 0x1024 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x108E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10A1 JUMPI POP PUSH2 0x109F DUP2 DUP5 PUSH2 0x8B3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x10E3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1145 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x11A9 DUP6 DUP6 DUP6 PUSH2 0x142E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EC JUMPI PUSH2 0x11E7 DUP5 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x122B JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x122A JUMPI PUSH2 0x1229 DUP2 DUP6 PUSH2 0x167D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126C JUMPI PUSH2 0x1267 DUP5 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x12AB JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AA JUMPI PUSH2 0x12A9 DUP6 DUP6 PUSH2 0x1887 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12D7 DUP3 PUSH2 0x9A1 JUMP JUMPDEST POP PUSH0 PUSH2 0x12E1 PUSH2 0x12B6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x132A JUMP JUMPDEST DUP1 PUSH2 0x1309 DUP5 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x131A SWAP3 SWAP2 SWAP1 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133C DUP4 DUP4 PUSH2 0x19D5 JUMP JUMPDEST PUSH2 0x1348 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1417 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1427 JUMPI POP PUSH2 0x1426 DUP3 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1439 DUP5 PUSH2 0xFA4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147A JUMPI PUSH2 0x1479 DUP2 DUP5 DUP7 PUSH2 0x1B31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1505 JUMPI PUSH2 0x14B9 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1584 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1687 DUP4 PUSH2 0x6B1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x175E JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x17DA SWAP2 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1806 JUMPI PUSH2 0x1805 PUSH2 0x2537 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1826 JUMPI PUSH2 0x1825 PUSH2 0x2537 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x2A3D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x1893 DUP5 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x189D SWAP2 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1919 DUP5 PUSH2 0x1BF4 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1969 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x19CA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1976 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A51 DUP4 DUP4 PUSH0 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABA SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3C DUP4 DUP4 DUP4 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x1BEF JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BB0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA7 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE6 SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C50 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C46 JUMPI PUSH2 0x1C45 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C8D JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CBC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1CB2 JUMPI PUSH2 0x1CB1 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CE5 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1CDB JUMPI PUSH2 0x1CDA PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1D0A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1D00 JUMPI PUSH2 0x1CFF PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1D2D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1D23 JUMPI PUSH2 0x1D22 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D3C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DFC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1DBD JUMPI POP PUSH2 0x1DBC DUP5 DUP5 PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1DFB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DE3 DUP4 PUSH2 0xA27 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4A DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E54 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E65 DUP2 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E8D DUP5 DUP3 DUP6 ADD PUSH2 0x1E57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1E96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F00 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EE5 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F25 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH2 0x1F2F DUP2 DUP6 PUSH2 0x1ED3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F3F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x1F48 DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F6B DUP2 DUP5 PUSH2 0x1F1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F85 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FA0 DUP2 PUSH2 0x1F7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBB JUMPI PUSH2 0x1FBA PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC8 DUP5 DUP3 DUP6 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FFA DUP3 PUSH2 0x1FD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200A DUP2 PUSH2 0x1FF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2023 PUSH0 DUP4 ADD DUP5 PUSH2 0x2001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2032 DUP2 PUSH2 0x1FF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x203C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204D DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2069 JUMPI PUSH2 0x2068 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2076 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2087 DUP6 DUP3 DUP7 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x209A DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DD DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20EE DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20FF DUP7 DUP3 DUP8 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x211E JUMPI PUSH2 0x211D PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x212B DUP5 DUP3 DUP6 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x213D DUP2 PUSH2 0x1E96 JUMP JUMPDEST DUP2 EQ PUSH2 0x2147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2158 DUP2 PUSH2 0x2134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2173 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2181 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2192 DUP6 DUP3 DUP7 ADD PUSH2 0x214A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x21DA DUP3 PUSH2 0x1F0B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21F9 JUMPI PUSH2 0x21F8 PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x220B PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP PUSH2 0x2217 DUP3 DUP3 PUSH2 0x21D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2236 JUMPI PUSH2 0x2235 PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST PUSH2 0x223F DUP3 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x226C PUSH2 0x2267 DUP5 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2288 JUMPI PUSH2 0x2287 PUSH2 0x21A0 JUMP JUMPDEST JUMPDEST PUSH2 0x2293 DUP5 DUP3 DUP6 PUSH2 0x224C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22AF JUMPI PUSH2 0x22AE PUSH2 0x219C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x225A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22E0 JUMPI PUSH2 0x22DF PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22ED DUP8 DUP3 DUP9 ADD PUSH2 0x203F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22FE DUP8 DUP3 DUP9 ADD PUSH2 0x203F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x230F DUP8 DUP3 DUP9 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2330 JUMPI PUSH2 0x232F PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH2 0x233C DUP8 DUP3 DUP9 ADD PUSH2 0x229B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2362 JUMPI PUSH2 0x2361 PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST PUSH2 0x236B DUP3 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x238A PUSH2 0x2385 DUP5 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x21A0 JUMP JUMPDEST JUMPDEST PUSH2 0x23B1 DUP5 DUP3 DUP6 PUSH2 0x224C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23CD JUMPI PUSH2 0x23CC PUSH2 0x219C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23FC JUMPI PUSH2 0x23FB PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2409 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH2 0x2436 DUP6 DUP3 DUP7 ADD PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2456 JUMPI PUSH2 0x2455 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2463 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2474 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24D5 JUMPI PUSH2 0x24D4 PUSH2 0x247E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24EE PUSH0 DUP4 ADD DUP7 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x24FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x2508 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2001 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2523 PUSH0 DUP4 ADD DUP6 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x2530 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2091 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x259B DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x25CD JUMPI PUSH2 0x25CC PUSH2 0x2564 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x49276D20536F72727920416C6C204E465427732068617665206265656E206D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2632 PUSH1 0x24 DUP4 PUSH2 0x1ED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x263D DUP3 PUSH2 0x25D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x265F DUP2 PUSH2 0x2626 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x268A DUP3 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x2694 DUP2 DUP6 PUSH2 0x2670 JUMP JUMPDEST SWAP4 POP PUSH2 0x26A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x26AD DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x26CB PUSH0 DUP4 ADD DUP8 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x26D8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x26E5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2091 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x26F7 DUP2 DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2710 DUP2 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x272B JUMPI PUSH2 0x272A PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2738 DUP5 DUP3 DUP6 ADD PUSH2 0x2702 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2755 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH2 0x275F DUP2 DUP6 PUSH2 0x2741 JUMP JUMPDEST SWAP4 POP PUSH2 0x276F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2786 DUP3 DUP6 PUSH2 0x274B JUMP JUMPDEST SWAP2 POP PUSH2 0x2792 DUP3 DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x27FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x2804 DUP7 DUP4 PUSH2 0x27BF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x283F PUSH2 0x283A PUSH2 0x2835 DUP5 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x281C JUMP JUMPDEST PUSH2 0x1F73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2858 DUP4 PUSH2 0x2825 JUMP JUMPDEST PUSH2 0x286C PUSH2 0x2864 DUP3 PUSH2 0x2846 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x27CB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2880 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x288B DUP2 DUP5 DUP5 PUSH2 0x284F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28A3 PUSH0 DUP3 PUSH2 0x2878 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2891 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x28F3 JUMPI PUSH2 0x28C4 DUP2 PUSH2 0x279E JUMP JUMPDEST PUSH2 0x28CD DUP5 PUSH2 0x27B0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x28DC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x28F0 PUSH2 0x28E8 DUP6 PUSH2 0x27B0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2890 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2913 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x28F8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x292B DUP4 DUP4 PUSH2 0x2904 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2944 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x295D JUMPI PUSH2 0x295C PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST PUSH2 0x2967 DUP3 SLOAD PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x2972 DUP3 DUP3 DUP6 PUSH2 0x28B2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x29A3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2991 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x299B DUP6 DUP3 PUSH2 0x2920 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x29B1 DUP7 PUSH2 0x279E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x29D8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x29F5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x29F1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2904 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A14 DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1F DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A37 JUMPI PUSH2 0x2A36 PUSH2 0x2564 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE RETURNDATASIZE 0xE7 0xCD DUP7 PUSH3 0x276746 0xEE PUSH13 0xDA6D8A97BB93FA247642F0278E SWAP10 SWAP5 0xF8 MUL 0xA5 0xDF 0xED DUP11 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "342:1331:17:-:0;;;467:5;446:26;;479:45;;;;;;;;;;1381:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;342:1331:17;;7:99:18;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;342:1331:17:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_1562": {
									"entryPoint": 5689,
									"id": 1562,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1542": {
									"entryPoint": 6279,
									"id": 1542,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1046": {
									"entryPoint": 4061,
									"id": 1046,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_980": {
									"entryPoint": 2663,
									"id": 980,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_373": {
									"entryPoint": 4790,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_628": {
									"entryPoint": 6961,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1176": {
									"entryPoint": 3063,
									"id": 1176,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_555": {
									"entryPoint": 2599,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_591": {
									"entryPoint": 7493,
									"id": 591,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_784": {
									"entryPoint": 6613,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1894": {
									"entryPoint": 2656,
									"id": 1894,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_542": {
									"entryPoint": 4004,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_1670": {
									"entryPoint": 6087,
									"id": 1670,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1622": {
									"entryPoint": 5757,
									"id": 1622,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_1112": {
									"entryPoint": 2465,
									"id": 1112,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_799": {
									"entryPoint": 3764,
									"id": 799,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_825": {
									"entryPoint": 4914,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1083": {
									"entryPoint": 2702,
									"id": 1083,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1821": {
									"entryPoint": 3793,
									"id": 1821,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_1511": {
									"entryPoint": 4508,
									"id": 1511,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_3438": {
									"entryPoint": 2681,
									"id": 3438,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_734": {
									"entryPoint": 5166,
									"id": 734,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_389": {
									"entryPoint": 1098,
									"id": 389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_297": {
									"entryPoint": 1713,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_406": {
									"entryPoint": 1071,
									"id": 406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_439": {
									"entryPoint": 2227,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3077": {
									"entryPoint": 7156,
									"id": 3077,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_319": {
									"entryPoint": 928,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_310": {
									"entryPoint": 1696,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeMint_3416": {
									"entryPoint": 2108,
									"id": 3416,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_503": {
									"entryPoint": 1551,
									"id": 503,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_529": {
									"entryPoint": 2061,
									"id": 529,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_422": {
									"entryPoint": 2039,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1376": {
									"entryPoint": 3883,
									"id": 1376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1745": {
									"entryPoint": 2369,
									"id": 1745,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2190": {
									"entryPoint": 6856,
									"id": 2190,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_269": {
									"entryPoint": 4941,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3489": {
									"entryPoint": 911,
									"id": 3489,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_328": {
									"entryPoint": 1895,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1980": {
									"entryPoint": 6411,
									"id": 1980,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1442": {
									"entryPoint": 1582,
									"id": 1442,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1405": {
									"entryPoint": 1387,
									"id": 1405,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1802": {
									"entryPoint": 3497,
									"id": 1802,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3472": {
									"entryPoint": 2090,
									"id": 3472,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_364": {
									"entryPoint": 4812,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1415": {
									"entryPoint": 1120,
									"id": 1415,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_485": {
									"entryPoint": 1132,
									"id": 485,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8794,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 9080,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 9145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 9190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9912,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9488,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9435,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 9032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10418,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8780,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8612,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4": {
									"entryPoint": 9688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10187,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22877:18",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:18",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:18",
														"type": ""
													}
												],
												"src": "334:149:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:18"
															},
															"nodeType": "YulIf",
															"src": "541:62:18"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:18",
														"type": ""
													}
												],
												"src": "489:120:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:18",
														"type": ""
													}
												],
												"src": "615:137:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:18"
															},
															"nodeType": "YulIf",
															"src": "833:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:18",
														"type": ""
													}
												],
												"src": "758:327:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:18",
														"type": ""
													}
												],
												"src": "1091:90:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:18",
														"type": ""
													}
												],
												"src": "1187:109:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:18",
														"type": ""
													}
												],
												"src": "1302:210:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:18",
														"type": ""
													}
												],
												"src": "1518:99:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:18",
														"type": ""
													}
												],
												"src": "1623:169:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:18"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:18"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:18",
																"statements": []
															},
															"src": "1889:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:18"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:18",
														"type": ""
													}
												],
												"src": "1798:246:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:18",
														"type": ""
													}
												],
												"src": "2050:102:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:18"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:18",
														"type": ""
													}
												],
												"src": "2158:377:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:18"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:18",
														"type": ""
													}
												],
												"src": "2541:313:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:18",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:18",
														"type": ""
													}
												],
												"src": "2860:77:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:18"
															},
															"nodeType": "YulIf",
															"src": "2996:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:18",
														"type": ""
													}
												],
												"src": "2943:122:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:18",
														"type": ""
													}
												],
												"src": "3071:139:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:18"
															},
															"nodeType": "YulIf",
															"src": "3292:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:18",
														"type": ""
													}
												],
												"src": "3216:329:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:18",
														"type": ""
													}
												],
												"src": "3551:126:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:18",
														"type": ""
													}
												],
												"src": "3683:96:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:18",
														"type": ""
													}
												],
												"src": "3785:118:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:18",
														"type": ""
													}
												],
												"src": "3909:222:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:18"
															},
															"nodeType": "YulIf",
															"src": "4190:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:18",
														"type": ""
													}
												],
												"src": "4137:122:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:18",
														"type": ""
													}
												],
												"src": "4265:139:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:18"
															},
															"nodeType": "YulIf",
															"src": "4503:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:18",
														"type": ""
													}
												],
												"src": "4410:474:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:18",
														"type": ""
													}
												],
												"src": "4890:118:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:18",
														"type": ""
													}
												],
												"src": "5014:222:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:18"
															},
															"nodeType": "YulIf",
															"src": "5352:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:18",
														"type": ""
													}
												],
												"src": "5242:619:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:18"
															},
															"nodeType": "YulIf",
															"src": "5943:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:18",
														"type": ""
													}
												],
												"src": "5867:329:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:18"
															},
															"nodeType": "YulIf",
															"src": "6252:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:18",
														"type": ""
													}
												],
												"src": "6202:116:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:18",
														"type": ""
													}
												],
												"src": "6324:133:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:18"
															},
															"nodeType": "YulIf",
															"src": "6553:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:18",
														"type": ""
													}
												],
												"src": "6463:468:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:18"
															},
															"nodeType": "YulIf",
															"src": "7525:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:18",
														"type": ""
													}
												],
												"src": "7369:281:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:18"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:18",
														"type": ""
													}
												],
												"src": "7656:129:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:18"
															},
															"nodeType": "YulIf",
															"src": "7928:56:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:18",
														"type": ""
													}
												],
												"src": "7791:307:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:18"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:18"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:18",
														"type": ""
													}
												],
												"src": "8104:146:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:18"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:18"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:18"
															},
															"nodeType": "YulIf",
															"src": "8498:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:18"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:18",
														"type": ""
													}
												],
												"src": "8256:423:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:18"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:18"
															},
															"nodeType": "YulIf",
															"src": "8769:122:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:18"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:18",
														"type": ""
													}
												],
												"src": "8698:338:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:18"
															},
															"nodeType": "YulIf",
															"src": "9178:120:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:18",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:18"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:18"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:18",
														"type": ""
													}
												],
												"src": "9042:943:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10058:241:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10165:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10135:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10143:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10132:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:30:18"
															},
															"nodeType": "YulIf",
															"src": "10129:56:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10195:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "10203:21:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10203:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10269:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10281:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10287:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10277:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10042:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10053:4:18",
														"type": ""
													}
												],
												"src": "9991:308:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10389:341:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10399:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10466:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10424:41:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10424:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10408:15:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10399:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10490:5:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10483:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10483:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10483:21:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10513:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10528:5:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10524:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10517:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10578:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "10580:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10580:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10580:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10559:3:18"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10564:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10555:16:18"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10573:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10552:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:25:18"
															},
															"nodeType": "YulIf",
															"src": "10549:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:18"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10712:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10670:36:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10670:54:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10670:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10362:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10367:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10375:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10383:5:18",
														"type": ""
													}
												],
												"src": "10305:425:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10812:278:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10861:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10863:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10863:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10863:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10840:6:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10848:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10836:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10836:17:18"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10825:35:18"
															},
															"nodeType": "YulIf",
															"src": "10822:122:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10953:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10980:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10967:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10967:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10957:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10996:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11065:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11053:17:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11072:6:18"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11080:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11005:47:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10996:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10790:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10798:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10806:5:18",
														"type": ""
													}
												],
												"src": "10750:340:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11189:561:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11235:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11237:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11237:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11237:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11210:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11219:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11206:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11231:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11202:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11202:32:18"
															},
															"nodeType": "YulIf",
															"src": "11199:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "11328:117:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11343:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11357:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11347:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11372:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11407:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11418:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11403:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11403:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11427:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11382:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11382:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11372:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11455:288:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11470:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11501:9:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11512:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11497:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11497:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11484:12:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11484:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11474:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11563:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11565:77:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11565:79:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11565:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11535:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11543:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11532:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:30:18"
																	},
																	"nodeType": "YulIf",
																	"src": "11529:117:18"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11660:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11705:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11716:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11701:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11701:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11725:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11670:30:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11670:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11660:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11151:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11162:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11174:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11182:6:18",
														"type": ""
													}
												],
												"src": "11096:654:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11839:391:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11885:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11887:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11887:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11887:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11860:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11856:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11856:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11881:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11852:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11852:32:18"
															},
															"nodeType": "YulIf",
															"src": "11849:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "11978:117:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11993:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11997:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12022:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12057:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12068:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12053:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12053:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12077:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12032:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12032:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12022:6:18"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12105:118:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12120:16:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12124:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12150:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12185:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12196:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12181:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12181:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12205:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12160:20:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12160:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12150:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11801:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11812:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11824:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11832:6:18",
														"type": ""
													}
												],
												"src": "11756:474:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12264:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12281:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12284:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12274:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12274:88:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12274:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12378:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12381:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12371:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12371:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12371:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12402:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12405:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12395:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12395:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12395:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12236:180:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12473:269:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12483:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12497:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12503:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12514:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12544:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12550:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12540:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12540:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12518:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12591:51:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12605:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12619:6:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12627:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12615:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12615:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12605:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12571:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12564:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12564:26:18"
															},
															"nodeType": "YulIf",
															"src": "12561:81:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12694:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12708:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12708:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12708:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12658:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12681:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12689:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12678:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12678:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12655:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12655:38:18"
															},
															"nodeType": "YulIf",
															"src": "12652:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12457:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12466:6:18",
														"type": ""
													}
												],
												"src": "12422:320:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12902:288:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12912:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12924:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12935:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12920:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12920:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12912:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12992:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13005:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13016:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13001:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13001:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12948:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12948:71:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12948:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13073:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13086:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13097:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13082:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13082:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13029:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13029:72:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13029:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13155:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13168:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13179:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13164:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13111:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13111:72:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13111:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12858:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12870:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12878:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12886:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12897:4:18",
														"type": ""
													}
												],
												"src": "12748:442:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13322:206:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13332:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13344:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13355:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13340:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13340:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13332:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13412:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13425:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13436:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13421:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13421:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13368:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13368:71:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13368:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13493:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13506:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13517:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13502:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13502:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13449:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13449:72:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13449:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13286:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13298:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13306:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13317:4:18",
														"type": ""
													}
												],
												"src": "13196:332:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13562:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13579:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13582:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13572:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13572:88:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13572:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13676:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13679:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13669:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13669:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13669:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13700:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13703:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13693:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13693:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13534:180:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13748:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13765:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13768:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13758:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13758:88:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13758:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13862:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13865:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13855:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13855:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13855:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13886:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13889:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13879:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13879:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13879:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13720:180:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13949:190:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13959:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13986:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13968:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13968:24:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13959:5:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14082:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14084:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14084:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14084:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14007:5:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14014:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14004:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14004:77:18"
															},
															"nodeType": "YulIf",
															"src": "14001:103:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14113:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14124:5:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14131:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14120:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14120:13:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14113:3:18"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13935:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13945:3:18",
														"type": ""
													}
												],
												"src": "13906:233:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14251:117:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14273:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14281:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14269:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14269:14:18"
																	},
																	{
																		"hexValue": "49276d20536f72727920416c6c204e465427732068617665206265656e206d69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14285:34:18",
																		"type": "",
																		"value": "I'm Sorry All NFT's have been mi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14262:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:58:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14262:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14341:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14349:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14337:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14337:15:18"
																	},
																	{
																		"hexValue": "6e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14354:6:18",
																		"type": "",
																		"value": "nted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14330:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14330:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14330:31:18"
														}
													]
												},
												"name": "store_literal_in_memory_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14243:6:18",
														"type": ""
													}
												],
												"src": "14145:223:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14520:220:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14530:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14596:3:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14601:2:18",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14537:58:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14537:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14530:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14702:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4",
																	"nodeType": "YulIdentifier",
																	"src": "14613:88:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14613:93:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14613:93:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14715:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14726:3:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14731:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14722:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14722:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14715:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14508:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14516:3:18",
														"type": ""
													}
												],
												"src": "14374:366:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14917:248:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14927:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14939:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14950:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14935:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14935:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14927:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14974:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14985:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14970:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14970:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14993:4:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14999:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14989:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14989:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14963:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "14963:47:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14963:47:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15019:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15153:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15027:124:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "15027:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15019:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14897:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14912:4:18",
														"type": ""
													}
												],
												"src": "14746:419:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15229:40:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15240:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15256:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15250:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "15250:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15240:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15212:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15222:6:18",
														"type": ""
													}
												],
												"src": "15171:98:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15370:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15387:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15392:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15380:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "15380:19:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15380:19:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15408:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15427:3:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15432:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15423:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "15423:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15408:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15342:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15347:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15358:11:18",
														"type": ""
													}
												],
												"src": "15275:168:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15539:283:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15549:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15595:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15563:31:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "15563:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15553:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15610:77:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15675:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15680:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15617:57:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "15617:70:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15610:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15735:5:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15742:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15731:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15731:16:18"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15749:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15754:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15696:34:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "15696:65:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15696:65:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15770:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15781:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15808:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15786:21:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15786:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15777:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "15777:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15770:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15520:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15527:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15535:3:18",
														"type": ""
													}
												],
												"src": "15449:373:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16028:440:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16038:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16050:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16061:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16046:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16046:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16038:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16119:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16132:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16143:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16128:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16128:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16075:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16075:71:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16075:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16200:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16213:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16224:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16209:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16209:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16156:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16156:72:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16156:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16282:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16295:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16306:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16291:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16291:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16238:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16238:72:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16238:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16331:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16342:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16327:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16327:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16351:4:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16357:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16347:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16347:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16320:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16320:48:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16320:48:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16377:84:18",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16447:6:18"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16456:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16385:61:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16385:76:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16377:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15976:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15988:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15996:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16004:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16012:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16023:4:18",
														"type": ""
													}
												],
												"src": "15828:640:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16536:79:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16546:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16561:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16555:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16555:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16546:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16603:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "16577:25:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16577:32:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16577:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16514:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16522:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16530:5:18",
														"type": ""
													}
												],
												"src": "16474:141:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16697:273:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16743:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16745:77:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16745:79:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16745:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16718:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16727:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16714:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16714:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16739:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16710:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "16710:32:18"
															},
															"nodeType": "YulIf",
															"src": "16707:119:18"
														},
														{
															"nodeType": "YulBlock",
															"src": "16836:127:18",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16851:15:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16865:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16855:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16880:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16925:9:18"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16936:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16921:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16921:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16945:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16890:30:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16890:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16880:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16667:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16678:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16690:6:18",
														"type": ""
													}
												],
												"src": "16621:349:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17090:34:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17100:18:18",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17115:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17100:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17062:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17067:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17078:11:18",
														"type": ""
													}
												],
												"src": "16976:148:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17240:280:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17250:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17297:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "17264:32:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "17264:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17254:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17312:96:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17396:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17401:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17319:76:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "17319:89:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17312:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17456:5:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17463:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17452:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17452:16:18"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17470:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17475:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "17417:34:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "17417:65:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17417:65:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17491:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17502:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17507:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17498:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "17498:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17491:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17221:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17228:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17236:3:18",
														"type": ""
													}
												],
												"src": "17130:390:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17710:251:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17721:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17810:6:18"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17819:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17728:81:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "17728:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17721:3:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17833:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17922:6:18"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17931:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17840:81:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "17840:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17833:3:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17945:10:18",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17952:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17945:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17681:3:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17687:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17695:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17706:3:18",
														"type": ""
													}
												],
												"src": "17526:435:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18021:87:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18031:11:18",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "18039:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18031:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18059:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18062:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18052:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18052:14:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18052:14:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18075:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18093:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18096:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "18083:9:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18083:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18075:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "18008:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18016:4:18",
														"type": ""
													}
												],
												"src": "17967:141:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18158:49:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18168:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18186:5:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18193:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18182:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18182:14:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18198:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18178:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18178:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18168:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18141:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18151:6:18",
														"type": ""
													}
												],
												"src": "18114:93:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18266:54:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18276:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "18301:4:18"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18307:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "18297:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18297:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "18276:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "18241:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18247:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "18257:8:18",
														"type": ""
													}
												],
												"src": "18213:107:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18402:317:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18412:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "18433:10:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18445:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18429:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18429:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "18416:9:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18456:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "18487:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18498:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "18468:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18468:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "18460:4:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18574:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "18605:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "18616:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "18586:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18586:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "18574:8:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18634:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18647:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "18658:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18654:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18654:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18643:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18643:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18634:5:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18673:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18686:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "18697:8:18"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "18707:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18693:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18693:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18683:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18683:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18673:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18363:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "18370:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "18382:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18395:6:18",
														"type": ""
													}
												],
												"src": "18326:393:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18757:28:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18767:12:18",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18774:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18767:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18743:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18753:3:18",
														"type": ""
													}
												],
												"src": "18725:60:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18851:82:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18861:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18919:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18901:17:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18901:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "18892:8:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18892:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18874:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "18874:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18861:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18831:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18841:9:18",
														"type": ""
													}
												],
												"src": "18791:142:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18986:28:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18996:12:18",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19003:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18996:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18972:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18982:3:18",
														"type": ""
													}
												],
												"src": "18939:75:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19096:193:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19106:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "19161:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19130:30:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "19130:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "19110:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "19185:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "19225:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "19219:5:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19219:11:18"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19232:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "19264:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "19240:23:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19240:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "19191:27:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19191:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "19178:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "19178:105:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19178:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "19073:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19079:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "19087:7:18",
														"type": ""
													}
												],
												"src": "19020:269:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19344:24:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19354:8:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19361:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19354:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19340:3:18",
														"type": ""
													}
												],
												"src": "19295:73:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19427:136:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19437:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19451:30:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "19451:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "19441:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "19536:4:18"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19542:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "19550:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19492:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "19492:65:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19492:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "19413:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19419:6:18",
														"type": ""
													}
												],
												"src": "19374:189:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19619:136:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19686:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "19730:5:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19737:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "19700:29:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19700:39:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19700:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "19639:5:18"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "19646:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19636:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "19636:14:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19651:26:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19653:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "19666:5:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19673:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19662:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19662:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "19653:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19633:2:18",
																"statements": []
															},
															"src": "19629:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "19607:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19614:3:18",
														"type": ""
													}
												],
												"src": "19569:186:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19840:464:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19866:431:18",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19880:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "19928:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "19896:31:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19896:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "19884:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19947:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "19970:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "19998:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "19980:17:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19980:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19966:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19966:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "19951:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "20167:27:18",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "20169:23:18",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "20184:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "20169:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "20151:10:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20163:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "20148:2:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20148:18:18"
																		},
																		"nodeType": "YulIf",
																		"src": "20145:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "20236:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "20253:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "20281:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "20263:17:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20263:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20249:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20249:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "20207:28:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20207:80:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20207:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "19857:3:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19862:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19854:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "19854:11:18"
															},
															"nodeType": "YulIf",
															"src": "19851:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "19816:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "19823:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "19828:10:18",
														"type": ""
													}
												],
												"src": "19761:543:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20373:54:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20383:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "20408:4:18"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20414:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "20404:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "20404:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "20383:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "20348:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20354:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "20364:8:18",
														"type": ""
													}
												],
												"src": "20310:117:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20484:118:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20494:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20543:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "20546:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "20539:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20539:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20558:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "20554:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20554:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "20510:28:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20510:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "20506:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "20506:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "20498:4:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20571:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20585:4:18"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "20591:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20581:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "20581:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "20571:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20461:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "20467:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "20477:6:18",
														"type": ""
													}
												],
												"src": "20433:169:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20688:214:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20821:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20848:4:18"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "20854:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "20829:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "20829:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "20821:4:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20867:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20878:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20888:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "20891:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "20884:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20884:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "20875:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "20875:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "20867:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20669:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "20675:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "20683:4:18",
														"type": ""
													}
												],
												"src": "20607:295:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20999:1303:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21010:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "21057:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21024:32:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "21024:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "21014:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21146:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "21148:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21148:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21148:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "21118:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21126:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21115:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "21115:30:18"
															},
															"nodeType": "YulIf",
															"src": "21112:56:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21178:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "21224:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "21218:5:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21218:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "21192:25:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "21192:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "21182:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "21323:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "21329:6:18"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "21337:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "21277:45:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "21277:67:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21277:67:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21354:18:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21371:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "21358:9:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21382:17:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21395:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "21382:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "21446:611:18",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "21460:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "21479:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "21491:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "21487:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21487:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "21475:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21475:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "21464:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "21511:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "21557:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "21525:31:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21525:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "21515:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "21575:10:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21584:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "21579:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "21643:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "21668:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "21686:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "21691:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "21682:3:18"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "21682:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "21676:5:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "21676:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "21661:6:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21661:42:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "21661:42:18"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "21720:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "21734:6:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21742:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21730:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21730:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "21720:6:18"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "21761:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "21778:9:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21789:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21774:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21774:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "21761:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21609:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "21612:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "21606:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21606:14:18"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "21621:21:18",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "21623:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "21632:1:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "21635:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21628:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21628:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21623:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "21602:3:18",
																					"statements": []
																				},
																				"src": "21598:208:18"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "21842:156:18",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "21860:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "21887:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "21892:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "21883:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "21883:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "21877:5:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21877:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "21864:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "21927:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "21954:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "21969:6:18"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "21977:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "21965:3:18"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "21965:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "21935:18:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "21935:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "21920:6:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21920:64:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "21920:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "21825:7:18"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "21834:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "21822:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21822:19:18"
																				},
																				"nodeType": "YulIf",
																				"src": "21819:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "22018:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "22032:6:18"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "22040:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "22028:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "22028:14:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "22044:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "22024:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22024:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "22011:6:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22011:36:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "22011:36:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "21439:618:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21444:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "22074:222:18",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "22088:14:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22101:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "22092:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "22125:67:18",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "22143:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "22162:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "22167:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "22158:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "22158:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "22152:5:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22152:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "22143:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "22118:6:18"
																				},
																				"nodeType": "YulIf",
																				"src": "22115:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "22212:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "22271:5:18"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "22278:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "22218:52:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22218:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "22205:6:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22205:81:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "22205:81:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "22066:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "21419:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21427:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21416:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "21416:14:18"
															},
															"nodeType": "YulSwitch",
															"src": "21409:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "20988:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20994:3:18",
														"type": ""
													}
												],
												"src": "20907:1395:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22353:149:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22363:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22386:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22368:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22368:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22363:1:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22397:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22420:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22402:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22402:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22397:1:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22431:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22443:1:18"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22446:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22439:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22439:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22431:4:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22473:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22475:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22475:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22475:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "22464:4:18"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22470:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22461:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22461:11:18"
															},
															"nodeType": "YulIf",
															"src": "22458:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22339:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22342:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "22348:4:18",
														"type": ""
													}
												],
												"src": "22308:194:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22536:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22553:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22556:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22546:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22546:88:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22546:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22650:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22653:4:18",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22643:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22643:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22643:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22674:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22677:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22667:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22667:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22667:15:18"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "22508:180:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22722:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22739:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22742:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22732:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22732:88:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22732:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22836:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22839:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22829:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22829:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22829:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22860:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22863:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22853:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "22853:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22853:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "22694:180:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"I'm Sorry All NFT's have been mi\")\n\n        mstore(add(memPtr, 32), \"nted\")\n\n    }\n\n    function abi_encode_t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c80634f6ccce7116100a0578063a22cb4651161006f578063a22cb465146102db578063b88d4fde146102f7578063c87b56dd14610313578063d204c45e14610343578063e985e9c51461035f57610109565b80634f6ccce71461022d5780636352211e1461025d57806370a082311461028d57806395d89b41146102bd57610109565b806318160ddd116100dc57806318160ddd146101a757806323b872dd146101c55780632f745c59146101e157806342842e0e1461021157610109565b806301ffc9a71461010d57806306fdde031461013d578063081812fc1461015b578063095ea7b31461018b575b5f80fd5b61012760048036038101906101229190611e6b565b61038f565b6040516101349190611eb0565b60405180910390f35b6101456103a0565b6040516101529190611f53565b60405180910390f35b61017560048036038101906101709190611fa6565b61042f565b6040516101829190612010565b60405180910390f35b6101a560048036038101906101a09190612053565b61044a565b005b6101af610460565b6040516101bc91906120a0565b60405180910390f35b6101df60048036038101906101da91906120b9565b61046c565b005b6101fb60048036038101906101f69190612053565b61056b565b60405161020891906120a0565b60405180910390f35b61022b600480360381019061022691906120b9565b61060f565b005b61024760048036038101906102429190611fa6565b61062e565b60405161025491906120a0565b60405180910390f35b61027760048036038101906102729190611fa6565b6106a0565b6040516102849190612010565b60405180910390f35b6102a760048036038101906102a29190612109565b6106b1565b6040516102b491906120a0565b60405180910390f35b6102c5610767565b6040516102d29190611f53565b60405180910390f35b6102f560048036038101906102f0919061215e565b6107f7565b005b610311600480360381019061030c91906122c8565b61080d565b005b61032d60048036038101906103289190611fa6565b61082a565b60405161033a9190611f53565b60405180910390f35b61035d600480360381019061035891906123e6565b61083c565b005b61037960048036038101906103749190612440565b6108b3565b6040516103869190611eb0565b60405180910390f35b5f61039982610941565b9050919050565b60605f80546103ae906124ab565b80601f01602080910402602001604051908101604052809291908181526020018280546103da906124ab565b80156104255780601f106103fc57610100808354040283529160200191610425565b820191905f5260205f20905b81548152906001019060200180831161040857829003601f168201915b5050505050905090565b5f610439826109a1565b5061044382610a27565b9050919050565b61045c8282610457610a60565b610a67565b5050565b5f600880549050905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104dc575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104d39190612010565b60405180910390fd5b5f6104ef83836104ea610a60565b610a79565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610565578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161055c939291906124db565b60405180910390fd5b50505050565b5f610575836106b1565b82106105ba5782826040517fa57d13dc0000000000000000000000000000000000000000000000000000000081526004016105b1929190612510565b60405180910390fd5b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2054905092915050565b61062983838360405180602001604052805f81525061080d565b505050565b5f610637610460565b821061067c575f826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610673929190612510565b60405180910390fd5b600882815481106106905761068f612537565b5b905f5260205f2001549050919050565b5f6106aa826109a1565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610722575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107199190612010565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610776906124ab565b80601f01602080910402602001604051908101604052809291908181526020018280546107a2906124ab565b80156107ed5780601f106107c4576101008083540402835291602001916107ed565b820191905f5260205f20905b8154815290600101906020018083116107d057829003601f168201915b5050505050905090565b610809610802610a60565b8383610a8e565b5050565b61081884848461046c565b61082484848484610bf7565b50505050565b606061083582610da9565b9050919050565b5f600b5f81548092919061084f90612591565b919050559050600c5481111561089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190612648565b60405180910390fd5b6108a48382610eb4565b6108ae8183610ed1565b505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061099a575061099982610f2b565b5b9050919050565b5f806109ac83610fa4565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a1e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a1591906120a0565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610a748383836001610fdd565b505050565b5f610a8584848461119c565b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610afe57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610af59190612010565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bea9190611eb0565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610da3578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610c3a610a60565b8685856040518563ffffffff1660e01b8152600401610c5c94939291906126b8565b6020604051808303815f875af1925050508015610c9757506040513d601f19601f82011682018060405250810190610c949190612716565b60015b610d18573d805f8114610cc5576040519150601f19603f3d011682016040523d82523d5f602084013e610cca565b606091505b505f815103610d1057836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610d079190612010565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610da157836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610d989190612010565b60405180910390fd5b505b50505050565b6060610db4826109a1565b505f600a5f8481526020019081526020015f208054610dd2906124ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfe906124ab565b8015610e495780601f10610e2057610100808354040283529160200191610e49565b820191905f5260205f20905b815481529060010190602001808311610e2c57829003601f168201915b505050505090505f610e596112b6565b90505f815103610e6d578192505050610eaf565b5f82511115610ea1578082604051602001610e8992919061277b565b60405160208183030381529060405292505050610eaf565b610eaa846112cc565b925050505b919050565b610ecd828260405180602001604052805f815250611332565b5050565b80600a5f8481526020019081526020015f209081610eef919061293b565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610f1f91906120a0565b60405180910390a15050565b5f7f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610f9d5750610f9c8261134d565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061101557505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611147575f611024846109a1565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561108e57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156110a1575061109f81846108b3565b155b156110e357826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016110da9190612010565b60405180910390fd5b811561114557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f806111a985858561142e565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ec576111e784611639565b61122b565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461122a57611229818561167d565b5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361126c57611267846117c7565b6112ab565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112aa576112a98585611887565b5b5b809150509392505050565b606060405180602001604052805f815250905090565b60606112d7826109a1565b505f6112e16112b6565b90505f8151116112ff5760405180602001604052805f81525061132a565b806113098461190b565b60405160200161131a92919061277b565b6040516020818303038152906040525b915050919050565b61133c83836119d5565b6113485f848484610bf7565b505050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061141757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611427575061142682611ac8565b5b9050919050565b5f8061143984610fa4565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461147a57611479818486611b31565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611505576114b95f855f80610fdd565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461158457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60088054905060095f8381526020019081526020015f2081905550600881908060018154018082558091505060019003905f5260205f20015f909190919091505550565b5f611687836106b1565b90505f60075f8481526020019081526020015f2054905081811461175e575f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205490508060065f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20819055508160075f8381526020019081526020015f2081905550505b60075f8481526020019081526020015f205f905560065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f905550505050565b5f60016008805490506117da9190612a0a565b90505f60095f8481526020019081526020015f205490505f6008838154811061180657611805612537565b5b905f5260205f2001549050806008838154811061182657611825612537565b5b905f5260205f2001819055508160095f8381526020019081526020015f208190555060095f8581526020019081526020015f205f9055600880548061186e5761186d612a3d565b5b600190038181905f5260205f20015f9055905550505050565b5f6001611893846106b1565b61189d9190612a0a565b90508160065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f20819055508060075f8481526020019081526020015f2081905550505050565b60605f600161191984611bf4565b0190505f8167ffffffffffffffff811115611937576119366121a4565b5b6040519080825280601f01601f1916602001820160405280156119695781602001600182028036833780820191505090505b5090505f82602001820190505b6001156119ca578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816119bf576119be612a6a565b5b0494505f8503611976575b819350505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a45575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a3c9190612010565b60405180910390fd5b5f611a5183835f610a79565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ac3575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611aba9190612010565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611b3c838383611d45565b611bef575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bb057806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611ba791906120a0565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611be6929190612510565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c50577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c4657611c45612a6a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c8d576d04ee2d6d415b85acef81000000008381611c8357611c82612a6a565b5b0492506020810190505b662386f26fc100008310611cbc57662386f26fc100008381611cb257611cb1612a6a565b5b0492506010810190505b6305f5e1008310611ce5576305f5e1008381611cdb57611cda612a6a565b5b0492506008810190505b6127108310611d0a576127108381611d0057611cff612a6a565b5b0492506004810190505b60648310611d2d5760648381611d2357611d22612a6a565b5b0492506002810190505b600a8310611d3c576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611dfc57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611dbd5750611dbc84846108b3565b5b80611dfb57508273ffffffffffffffffffffffffffffffffffffffff16611de383610a27565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e4a81611e16565b8114611e54575f80fd5b50565b5f81359050611e6581611e41565b92915050565b5f60208284031215611e8057611e7f611e0e565b5b5f611e8d84828501611e57565b91505092915050565b5f8115159050919050565b611eaa81611e96565b82525050565b5f602082019050611ec35f830184611ea1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611f00578082015181840152602081019050611ee5565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611f2582611ec9565b611f2f8185611ed3565b9350611f3f818560208601611ee3565b611f4881611f0b565b840191505092915050565b5f6020820190508181035f830152611f6b8184611f1b565b905092915050565b5f819050919050565b611f8581611f73565b8114611f8f575f80fd5b50565b5f81359050611fa081611f7c565b92915050565b5f60208284031215611fbb57611fba611e0e565b5b5f611fc884828501611f92565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ffa82611fd1565b9050919050565b61200a81611ff0565b82525050565b5f6020820190506120235f830184612001565b92915050565b61203281611ff0565b811461203c575f80fd5b50565b5f8135905061204d81612029565b92915050565b5f806040838503121561206957612068611e0e565b5b5f6120768582860161203f565b925050602061208785828601611f92565b9150509250929050565b61209a81611f73565b82525050565b5f6020820190506120b35f830184612091565b92915050565b5f805f606084860312156120d0576120cf611e0e565b5b5f6120dd8682870161203f565b93505060206120ee8682870161203f565b92505060406120ff86828701611f92565b9150509250925092565b5f6020828403121561211e5761211d611e0e565b5b5f61212b8482850161203f565b91505092915050565b61213d81611e96565b8114612147575f80fd5b50565b5f8135905061215881612134565b92915050565b5f806040838503121561217457612173611e0e565b5b5f6121818582860161203f565b92505060206121928582860161214a565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6121da82611f0b565b810181811067ffffffffffffffff821117156121f9576121f86121a4565b5b80604052505050565b5f61220b611e05565b905061221782826121d1565b919050565b5f67ffffffffffffffff821115612236576122356121a4565b5b61223f82611f0b565b9050602081019050919050565b828183375f83830152505050565b5f61226c6122678461221c565b612202565b905082815260208101848484011115612288576122876121a0565b5b61229384828561224c565b509392505050565b5f82601f8301126122af576122ae61219c565b5b81356122bf84826020860161225a565b91505092915050565b5f805f80608085870312156122e0576122df611e0e565b5b5f6122ed8782880161203f565b94505060206122fe8782880161203f565b935050604061230f87828801611f92565b925050606085013567ffffffffffffffff8111156123305761232f611e12565b5b61233c8782880161229b565b91505092959194509250565b5f67ffffffffffffffff821115612362576123616121a4565b5b61236b82611f0b565b9050602081019050919050565b5f61238a61238584612348565b612202565b9050828152602081018484840111156123a6576123a56121a0565b5b6123b184828561224c565b509392505050565b5f82601f8301126123cd576123cc61219c565b5b81356123dd848260208601612378565b91505092915050565b5f80604083850312156123fc576123fb611e0e565b5b5f6124098582860161203f565b925050602083013567ffffffffffffffff81111561242a57612429611e12565b5b612436858286016123b9565b9150509250929050565b5f806040838503121561245657612455611e0e565b5b5f6124638582860161203f565b92505060206124748582860161203f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124c257607f821691505b6020821081036124d5576124d461247e565b5b50919050565b5f6060820190506124ee5f830186612001565b6124fb6020830185612091565b6125086040830184612001565b949350505050565b5f6040820190506125235f830185612001565b6125306020830184612091565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61259b82611f73565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125cd576125cc612564565b5b600182019050919050565b7f49276d20536f72727920416c6c204e465427732068617665206265656e206d695f8201527f6e74656400000000000000000000000000000000000000000000000000000000602082015250565b5f612632602483611ed3565b915061263d826125d8565b604082019050919050565b5f6020820190508181035f83015261265f81612626565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61268a82612666565b6126948185612670565b93506126a4818560208601611ee3565b6126ad81611f0b565b840191505092915050565b5f6080820190506126cb5f830187612001565b6126d86020830186612001565b6126e56040830185612091565b81810360608301526126f78184612680565b905095945050505050565b5f8151905061271081611e41565b92915050565b5f6020828403121561272b5761272a611e0e565b5b5f61273884828501612702565b91505092915050565b5f81905092915050565b5f61275582611ec9565b61275f8185612741565b935061276f818560208601611ee3565b80840191505092915050565b5f612786828561274b565b9150612792828461274b565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026127fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826127bf565b61280486836127bf565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61283f61283a61283584611f73565b61281c565b611f73565b9050919050565b5f819050919050565b61285883612825565b61286c61286482612846565b8484546127cb565b825550505050565b5f90565b612880612874565b61288b81848461284f565b505050565b5b818110156128ae576128a35f82612878565b600181019050612891565b5050565b601f8211156128f3576128c48161279e565b6128cd846127b0565b810160208510156128dc578190505b6128f06128e8856127b0565b830182612890565b50505b505050565b5f82821c905092915050565b5f6129135f19846008026128f8565b1980831691505092915050565b5f61292b8383612904565b9150826002028217905092915050565b61294482611ec9565b67ffffffffffffffff81111561295d5761295c6121a4565b5b61296782546124ab565b6129728282856128b2565b5f60209050601f8311600181146129a3575f8415612991578287015190505b61299b8582612920565b865550612a02565b601f1984166129b18661279e565b5f5b828110156129d8578489015182556001820191506020850194506020810190506129b3565b868310156129f557848901516129f1601f891682612904565b8355505b6001600288020188555050505b505050505050565b5f612a1482611f73565b9150612a1f83611f73565b9250828203905081811115612a3757612a36612564565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220be3de7cd8662276746ee6cda6d8a97bb93fa247642f0278e9994f802a5dfed8a64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x35F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BD JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x211 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x399 DUP3 PUSH2 0x941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x3AE SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3DA SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x425 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x425 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x408 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x439 DUP3 PUSH2 0x9A1 JUMP JUMPDEST POP PUSH2 0x443 DUP3 PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45C DUP3 DUP3 PUSH2 0x457 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4DC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4EF DUP4 DUP4 PUSH2 0x4EA PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x565 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x575 DUP4 PUSH2 0x6B1 JUMP JUMPDEST DUP3 LT PUSH2 0x5BA JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B1 SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x629 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x80D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x637 PUSH2 0x460 JUMP JUMPDEST DUP3 LT PUSH2 0x67C JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x673 SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x690 JUMPI PUSH2 0x68F PUSH2 0x2537 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6AA DUP3 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x722 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x776 SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x809 PUSH2 0x802 PUSH2 0xA60 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x818 DUP5 DUP5 DUP5 PUSH2 0x46C JUMP JUMPDEST PUSH2 0x824 DUP5 DUP5 DUP5 DUP5 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x835 DUP3 PUSH2 0xDA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x84F SWAP1 PUSH2 0x2591 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0xC SLOAD DUP2 GT ISZERO PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A4 DUP4 DUP3 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x8AE DUP2 DUP4 PUSH2 0xED1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x99A JUMPI POP PUSH2 0x999 DUP3 PUSH2 0xF2B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9AC DUP4 PUSH2 0xFA4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA74 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA85 DUP5 DUP5 DUP5 PUSH2 0x119C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFE JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xDA3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xC3A PUSH2 0xA60 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC97 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x2716 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD18 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xD10 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0xDA1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDB4 DUP3 PUSH2 0x9A1 JUMP JUMPDEST POP PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xDD2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFE SWAP1 PUSH2 0x24AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE49 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE20 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE49 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE2C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xE59 PUSH2 0x12B6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xE6D JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xEAF JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xEA1 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE89 SWAP3 SWAP2 SWAP1 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xEAA DUP5 PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECD DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1332 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x293B JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xF9D JUMPI POP PUSH2 0xF9C DUP3 PUSH2 0x134D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1015 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1147 JUMPI PUSH0 PUSH2 0x1024 DUP5 PUSH2 0x9A1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x108E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10A1 JUMPI POP PUSH2 0x109F DUP2 DUP5 PUSH2 0x8B3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x10E3 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1145 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x11A9 DUP6 DUP6 DUP6 PUSH2 0x142E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EC JUMPI PUSH2 0x11E7 DUP5 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x122B JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x122A JUMPI PUSH2 0x1229 DUP2 DUP6 PUSH2 0x167D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126C JUMPI PUSH2 0x1267 DUP5 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x12AB JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AA JUMPI PUSH2 0x12A9 DUP6 DUP6 PUSH2 0x1887 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12D7 DUP3 PUSH2 0x9A1 JUMP JUMPDEST POP PUSH0 PUSH2 0x12E1 PUSH2 0x12B6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x132A JUMP JUMPDEST DUP1 PUSH2 0x1309 DUP5 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x131A SWAP3 SWAP2 SWAP1 PUSH2 0x277B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133C DUP4 DUP4 PUSH2 0x19D5 JUMP JUMPDEST PUSH2 0x1348 PUSH0 DUP5 DUP5 DUP5 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1417 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1427 JUMPI POP PUSH2 0x1426 DUP3 PUSH2 0x1AC8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1439 DUP5 PUSH2 0xFA4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147A JUMPI PUSH2 0x1479 DUP2 DUP5 DUP7 PUSH2 0x1B31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1505 JUMPI PUSH2 0x14B9 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1584 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1687 DUP4 PUSH2 0x6B1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x175E JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x17DA SWAP2 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1806 JUMPI PUSH2 0x1805 PUSH2 0x2537 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1826 JUMPI PUSH2 0x1825 PUSH2 0x2537 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x2A3D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x1893 DUP5 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x189D SWAP2 SWAP1 PUSH2 0x2A0A JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1919 DUP5 PUSH2 0x1BF4 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1969 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x19CA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1976 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1A51 DUP4 DUP4 PUSH0 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABA SWAP2 SWAP1 PUSH2 0x2010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B3C DUP4 DUP4 DUP4 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x1BEF JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BB0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA7 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE6 SWAP3 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C50 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C46 JUMPI PUSH2 0x1C45 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C8D JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CBC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1CB2 JUMPI PUSH2 0x1CB1 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CE5 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1CDB JUMPI PUSH2 0x1CDA PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1D0A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1D00 JUMPI PUSH2 0x1CFF PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1D2D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1D23 JUMPI PUSH2 0x1D22 PUSH2 0x2A6A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D3C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DFC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1DBD JUMPI POP PUSH2 0x1DBC DUP5 DUP5 PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1DFB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DE3 DUP4 PUSH2 0xA27 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4A DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E54 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E65 DUP2 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E8D DUP5 DUP3 DUP6 ADD PUSH2 0x1E57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1E96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F00 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EE5 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F25 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH2 0x1F2F DUP2 DUP6 PUSH2 0x1ED3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F3F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x1F48 DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F6B DUP2 DUP5 PUSH2 0x1F1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F85 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FA0 DUP2 PUSH2 0x1F7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBB JUMPI PUSH2 0x1FBA PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC8 DUP5 DUP3 DUP6 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FFA DUP3 PUSH2 0x1FD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200A DUP2 PUSH2 0x1FF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2023 PUSH0 DUP4 ADD DUP5 PUSH2 0x2001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2032 DUP2 PUSH2 0x1FF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x203C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204D DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2069 JUMPI PUSH2 0x2068 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2076 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2087 DUP6 DUP3 DUP7 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x209A DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DD DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20EE DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20FF DUP7 DUP3 DUP8 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x211E JUMPI PUSH2 0x211D PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x212B DUP5 DUP3 DUP6 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x213D DUP2 PUSH2 0x1E96 JUMP JUMPDEST DUP2 EQ PUSH2 0x2147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2158 DUP2 PUSH2 0x2134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2173 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2181 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2192 DUP6 DUP3 DUP7 ADD PUSH2 0x214A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x21DA DUP3 PUSH2 0x1F0B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21F9 JUMPI PUSH2 0x21F8 PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x220B PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP PUSH2 0x2217 DUP3 DUP3 PUSH2 0x21D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2236 JUMPI PUSH2 0x2235 PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST PUSH2 0x223F DUP3 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x226C PUSH2 0x2267 DUP5 PUSH2 0x221C JUMP JUMPDEST PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2288 JUMPI PUSH2 0x2287 PUSH2 0x21A0 JUMP JUMPDEST JUMPDEST PUSH2 0x2293 DUP5 DUP3 DUP6 PUSH2 0x224C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22AF JUMPI PUSH2 0x22AE PUSH2 0x219C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x225A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22E0 JUMPI PUSH2 0x22DF PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22ED DUP8 DUP3 DUP9 ADD PUSH2 0x203F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22FE DUP8 DUP3 DUP9 ADD PUSH2 0x203F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x230F DUP8 DUP3 DUP9 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2330 JUMPI PUSH2 0x232F PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH2 0x233C DUP8 DUP3 DUP9 ADD PUSH2 0x229B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2362 JUMPI PUSH2 0x2361 PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST PUSH2 0x236B DUP3 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x238A PUSH2 0x2385 DUP5 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x2202 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x21A0 JUMP JUMPDEST JUMPDEST PUSH2 0x23B1 DUP5 DUP3 DUP6 PUSH2 0x224C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23CD JUMPI PUSH2 0x23CC PUSH2 0x219C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23FC JUMPI PUSH2 0x23FB PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2409 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH2 0x2436 DUP6 DUP3 DUP7 ADD PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2456 JUMPI PUSH2 0x2455 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2463 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2474 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24D5 JUMPI PUSH2 0x24D4 PUSH2 0x247E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24EE PUSH0 DUP4 ADD DUP7 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x24FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x2508 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2001 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2523 PUSH0 DUP4 ADD DUP6 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x2530 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2091 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x259B DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x25CD JUMPI PUSH2 0x25CC PUSH2 0x2564 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x49276D20536F72727920416C6C204E465427732068617665206265656E206D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2632 PUSH1 0x24 DUP4 PUSH2 0x1ED3 JUMP JUMPDEST SWAP2 POP PUSH2 0x263D DUP3 PUSH2 0x25D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x265F DUP2 PUSH2 0x2626 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x268A DUP3 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x2694 DUP2 DUP6 PUSH2 0x2670 JUMP JUMPDEST SWAP4 POP PUSH2 0x26A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x26AD DUP2 PUSH2 0x1F0B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x26CB PUSH0 DUP4 ADD DUP8 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x26D8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x26E5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2091 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x26F7 DUP2 DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2710 DUP2 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x272B JUMPI PUSH2 0x272A PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2738 DUP5 DUP3 DUP6 ADD PUSH2 0x2702 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2755 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH2 0x275F DUP2 DUP6 PUSH2 0x2741 JUMP JUMPDEST SWAP4 POP PUSH2 0x276F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EE3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2786 DUP3 DUP6 PUSH2 0x274B JUMP JUMPDEST SWAP2 POP PUSH2 0x2792 DUP3 DUP5 PUSH2 0x274B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x27FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x2804 DUP7 DUP4 PUSH2 0x27BF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x283F PUSH2 0x283A PUSH2 0x2835 DUP5 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x281C JUMP JUMPDEST PUSH2 0x1F73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2858 DUP4 PUSH2 0x2825 JUMP JUMPDEST PUSH2 0x286C PUSH2 0x2864 DUP3 PUSH2 0x2846 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x27CB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2880 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x288B DUP2 DUP5 DUP5 PUSH2 0x284F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28A3 PUSH0 DUP3 PUSH2 0x2878 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2891 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x28F3 JUMPI PUSH2 0x28C4 DUP2 PUSH2 0x279E JUMP JUMPDEST PUSH2 0x28CD DUP5 PUSH2 0x27B0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x28DC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x28F0 PUSH2 0x28E8 DUP6 PUSH2 0x27B0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2890 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2913 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x28F8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x292B DUP4 DUP4 PUSH2 0x2904 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2944 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x295D JUMPI PUSH2 0x295C PUSH2 0x21A4 JUMP JUMPDEST JUMPDEST PUSH2 0x2967 DUP3 SLOAD PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x2972 DUP3 DUP3 DUP6 PUSH2 0x28B2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x29A3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2991 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x299B DUP6 DUP3 PUSH2 0x2920 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2A02 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x29B1 DUP7 PUSH2 0x279E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x29D8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x29F5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x29F1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2904 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A14 DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1F DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A37 JUMPI PUSH2 0x2A36 PUSH2 0x2564 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE RETURNDATASIZE 0xE7 0xCD DUP7 PUSH3 0x276746 0xEE PUSH13 0xDA6D8A97BB93FA247642F0278E SWAP10 SWAP5 0xF8 MUL 0xA5 0xDF 0xED DUP11 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "342:1331:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1448:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2062:102:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:578:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1736:255:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2236:226:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1253:189:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;530:253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1448:223:17;1601:4;1628:36;1652:11;1628:23;:36::i;:::-;1621:43;;1448:223;;;:::o;2365:89:4:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;2062:102:7:-;2114:7;2140:10;:17;;;;2133:24;;2062:102;:::o;4143:578:4:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1736:255:7:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1918:5;1925;1895:36;;;;;;;;;;;;:::i;:::-;;;;;;;;1843:99;1958:12;:19;1971:5;1958:19;;;;;;;;;;;;;;;:26;1978:5;1958:26;;;;;;;;;;;;1951:33;;1736:255;;;;:::o;4787:132:4:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2236:226:7:-;2302:7;2334:13;:11;:13::i;:::-;2325:5;:22;2321:101;;2401:1;2405:5;2370:41;;;;;;;;;;;;:::i;:::-;;;;;;;;2321:101;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;;2431:24;;2236:226;;;:::o;2185:118:4:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1253:189:17:-;1376:13;1412:23;1427:7;1412:14;:23::i;:::-;1405:30;;1253:189;;;:::o;530:253::-;596:15;614:12;;:14;;;;;;;;;:::i;:::-;;;;;596:32;;657:10;;646:7;:21;;638:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;718:22;728:2;732:7;718:9;:22::i;:::-;750:26;763:7;772:3;750:12;:26::i;:::-;586:197;530:253;;:::o;3928:153:4:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;937:207:8:-;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;16138:241:4:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;14418:120:4:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;858:206:17:-;995:7;1025:32;1039:2;1043:7;1052:4;1025:13;:32::i;:::-;1018:39;;858:206;;;;;:::o;15591:312:4:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;1210:593:8:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;10633:100:4:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1922:167:8:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;1435:222:7:-;1537:4;1575:35;1560:50;;;:11;:50;;;;:90;;;;1614:36;1638:11;1614:23;:36::i;:::-;1560:90;1553:97;;1435:222;;;:::o;5707:115:4:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;2518:625:7:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;;2728:1;2703:27;;:13;:27;;;2699:210;;2746:40;2778:7;2746:31;:40::i;:::-;2699:210;;;2824:2;2807:19;;:13;:19;;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;2803:106;2699:210;2936:1;2922:16;;:2;:16;;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;3020:19;;:13;:19;;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3016:90;2918:188;3123:13;3116:20;;;2518:625;;;;;:::o;3174:92:4:-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;3846:161:7:-;3949:10;:17;;;;3922:15;:24;3938:7;3922:24;;;;;;;;;;;:44;;;;3976:10;3992:7;3976:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:161;:::o;4624:959::-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4886:40;;4936:18;4957:17;:26;4975:7;4957:26;;;;;;;;;;;;4936:47;;5101:14;5087:10;:28;5083:323;;5131:19;5153:12;:18;5166:4;5153:18;;;;;;;;;;;;;;;:34;5172:14;5153:34;;;;;;;;;;;;5131:56;;5235:11;5202:12;:18;5215:4;5202:18;;;;;;;;;;;;;;;:30;5221:10;5202:30;;;;;;;;;;;:44;;;;5351:10;5318:17;:30;5336:11;5318:30;;;;;;;;;;;:43;;;;5117:289;5083:323;5499:17;:26;5517:7;5499:26;;;;;;;;;;;5492:33;;;5542:12;:18;5555:4;5542:18;;;;;;;;;;;;;;;:34;5561:14;5542:34;;;;;;;;;;;5535:41;;;4705:878;;4624:959;;:::o;5871:1061::-;6120:22;6165:1;6145:10;:17;;;;:21;;;;:::i;:::-;6120:46;;6176:18;6197:15;:24;6213:7;6197:24;;;;;;;;;;;;6176:45;;6543:19;6565:10;6576:14;6565:26;;;;;;;;:::i;:::-;;;;;;;;;;6543:48;;6627:11;6602:10;6613;6602:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6737:10;6706:15;:28;6722:11;6706:28;;;;;;;;;;;:41;;;;6875:15;:24;6891:7;6875:24;;;;;;;;;;;6868:31;;;6909:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5942:990;;;5871:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;3521:34;;3592:7;3565:12;:16;3578:2;3565:16;;;;;;;;;;;;;;;:24;3582:6;3565:24;;;;;;;;;;;:34;;;;3638:6;3609:17;:26;3627:7;3609:26;;;;;;;;;;;:35;;;;3511:140;3437:214;;:::o;637:698:12:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;9955:327:4:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;762:146:13:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;7082:368:4:-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:15:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:4:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:654::-;11174:6;11182;11231:2;11219:9;11210:7;11206:23;11202:32;11199:119;;;11237:79;;:::i;:::-;11199:119;11357:1;11382:53;11427:7;11418:6;11407:9;11403:22;11382:53;:::i;:::-;11372:63;;11328:117;11512:2;11501:9;11497:18;11484:32;11543:18;11535:6;11532:30;11529:117;;;11565:79;;:::i;:::-;11529:117;11670:63;11725:7;11716:6;11705:9;11701:22;11670:63;:::i;:::-;11660:73;;11455:288;11096:654;;;;;:::o;11756:474::-;11824:6;11832;11881:2;11869:9;11860:7;11856:23;11852:32;11849:119;;;11887:79;;:::i;:::-;11849:119;12007:1;12032:53;12077:7;12068:6;12057:9;12053:22;12032:53;:::i;:::-;12022:63;;11978:117;12134:2;12160:53;12205:7;12196:6;12185:9;12181:22;12160:53;:::i;:::-;12150:63;;12105:118;11756:474;;;;;:::o;12236:180::-;12284:77;12281:1;12274:88;12381:4;12378:1;12371:15;12405:4;12402:1;12395:15;12422:320;12466:6;12503:1;12497:4;12493:12;12483:22;;12550:1;12544:4;12540:12;12571:18;12561:81;;12627:4;12619:6;12615:17;12605:27;;12561:81;12689:2;12681:6;12678:14;12658:18;12655:38;12652:84;;12708:18;;:::i;:::-;12652:84;12473:269;12422:320;;;:::o;12748:442::-;12897:4;12935:2;12924:9;12920:18;12912:26;;12948:71;13016:1;13005:9;13001:17;12992:6;12948:71;:::i;:::-;13029:72;13097:2;13086:9;13082:18;13073:6;13029:72;:::i;:::-;13111;13179:2;13168:9;13164:18;13155:6;13111:72;:::i;:::-;12748:442;;;;;;:::o;13196:332::-;13317:4;13355:2;13344:9;13340:18;13332:26;;13368:71;13436:1;13425:9;13421:17;13412:6;13368:71;:::i;:::-;13449:72;13517:2;13506:9;13502:18;13493:6;13449:72;:::i;:::-;13196:332;;;;;:::o;13534:180::-;13582:77;13579:1;13572:88;13679:4;13676:1;13669:15;13703:4;13700:1;13693:15;13720:180;13768:77;13765:1;13758:88;13865:4;13862:1;13855:15;13889:4;13886:1;13879:15;13906:233;13945:3;13968:24;13986:5;13968:24;:::i;:::-;13959:33;;14014:66;14007:5;14004:77;14001:103;;14084:18;;:::i;:::-;14001:103;14131:1;14124:5;14120:13;14113:20;;13906:233;;;:::o;14145:223::-;14285:34;14281:1;14273:6;14269:14;14262:58;14354:6;14349:2;14341:6;14337:15;14330:31;14145:223;:::o;14374:366::-;14516:3;14537:67;14601:2;14596:3;14537:67;:::i;:::-;14530:74;;14613:93;14702:3;14613:93;:::i;:::-;14731:2;14726:3;14722:12;14715:19;;14374:366;;;:::o;14746:419::-;14912:4;14950:2;14939:9;14935:18;14927:26;;14999:9;14993:4;14989:20;14985:1;14974:9;14970:17;14963:47;15027:131;15153:4;15027:131;:::i;:::-;15019:139;;14746:419;;;:::o;15171:98::-;15222:6;15256:5;15250:12;15240:22;;15171:98;;;:::o;15275:168::-;15358:11;15392:6;15387:3;15380:19;15432:4;15427:3;15423:14;15408:29;;15275:168;;;;:::o;15449:373::-;15535:3;15563:38;15595:5;15563:38;:::i;:::-;15617:70;15680:6;15675:3;15617:70;:::i;:::-;15610:77;;15696:65;15754:6;15749:3;15742:4;15735:5;15731:16;15696:65;:::i;:::-;15786:29;15808:6;15786:29;:::i;:::-;15781:3;15777:39;15770:46;;15539:283;15449:373;;;;:::o;15828:640::-;16023:4;16061:3;16050:9;16046:19;16038:27;;16075:71;16143:1;16132:9;16128:17;16119:6;16075:71;:::i;:::-;16156:72;16224:2;16213:9;16209:18;16200:6;16156:72;:::i;:::-;16238;16306:2;16295:9;16291:18;16282:6;16238:72;:::i;:::-;16357:9;16351:4;16347:20;16342:2;16331:9;16327:18;16320:48;16385:76;16456:4;16447:6;16385:76;:::i;:::-;16377:84;;15828:640;;;;;;;:::o;16474:141::-;16530:5;16561:6;16555:13;16546:22;;16577:32;16603:5;16577:32;:::i;:::-;16474:141;;;;:::o;16621:349::-;16690:6;16739:2;16727:9;16718:7;16714:23;16710:32;16707:119;;;16745:79;;:::i;:::-;16707:119;16865:1;16890:63;16945:7;16936:6;16925:9;16921:22;16890:63;:::i;:::-;16880:73;;16836:127;16621:349;;;;:::o;16976:148::-;17078:11;17115:3;17100:18;;16976:148;;;;:::o;17130:390::-;17236:3;17264:39;17297:5;17264:39;:::i;:::-;17319:89;17401:6;17396:3;17319:89;:::i;:::-;17312:96;;17417:65;17475:6;17470:3;17463:4;17456:5;17452:16;17417:65;:::i;:::-;17507:6;17502:3;17498:16;17491:23;;17240:280;17130:390;;;;:::o;17526:435::-;17706:3;17728:95;17819:3;17810:6;17728:95;:::i;:::-;17721:102;;17840:95;17931:3;17922:6;17840:95;:::i;:::-;17833:102;;17952:3;17945:10;;17526:435;;;;;:::o;17967:141::-;18016:4;18039:3;18031:11;;18062:3;18059:1;18052:14;18096:4;18093:1;18083:18;18075:26;;17967:141;;;:::o;18114:93::-;18151:6;18198:2;18193;18186:5;18182:14;18178:23;18168:33;;18114:93;;;:::o;18213:107::-;18257:8;18307:5;18301:4;18297:16;18276:37;;18213:107;;;;:::o;18326:393::-;18395:6;18445:1;18433:10;18429:18;18468:97;18498:66;18487:9;18468:97;:::i;:::-;18586:39;18616:8;18605:9;18586:39;:::i;:::-;18574:51;;18658:4;18654:9;18647:5;18643:21;18634:30;;18707:4;18697:8;18693:19;18686:5;18683:30;18673:40;;18402:317;;18326:393;;;;;:::o;18725:60::-;18753:3;18774:5;18767:12;;18725:60;;;:::o;18791:142::-;18841:9;18874:53;18892:34;18901:24;18919:5;18901:24;:::i;:::-;18892:34;:::i;:::-;18874:53;:::i;:::-;18861:66;;18791:142;;;:::o;18939:75::-;18982:3;19003:5;18996:12;;18939:75;;;:::o;19020:269::-;19130:39;19161:7;19130:39;:::i;:::-;19191:91;19240:41;19264:16;19240:41;:::i;:::-;19232:6;19225:4;19219:11;19191:91;:::i;:::-;19185:4;19178:105;19096:193;19020:269;;;:::o;19295:73::-;19340:3;19295:73;:::o;19374:189::-;19451:32;;:::i;:::-;19492:65;19550:6;19542;19536:4;19492:65;:::i;:::-;19427:136;19374:189;;:::o;19569:186::-;19629:120;19646:3;19639:5;19636:14;19629:120;;;19700:39;19737:1;19730:5;19700:39;:::i;:::-;19673:1;19666:5;19662:13;19653:22;;19629:120;;;19569:186;;:::o;19761:543::-;19862:2;19857:3;19854:11;19851:446;;;19896:38;19928:5;19896:38;:::i;:::-;19980:29;19998:10;19980:29;:::i;:::-;19970:8;19966:44;20163:2;20151:10;20148:18;20145:49;;;20184:8;20169:23;;20145:49;20207:80;20263:22;20281:3;20263:22;:::i;:::-;20253:8;20249:37;20236:11;20207:80;:::i;:::-;19866:431;;19851:446;19761:543;;;:::o;20310:117::-;20364:8;20414:5;20408:4;20404:16;20383:37;;20310:117;;;;:::o;20433:169::-;20477:6;20510:51;20558:1;20554:6;20546:5;20543:1;20539:13;20510:51;:::i;:::-;20506:56;20591:4;20585;20581:15;20571:25;;20484:118;20433:169;;;;:::o;20607:295::-;20683:4;20829:29;20854:3;20848:4;20829:29;:::i;:::-;20821:37;;20891:3;20888:1;20884:11;20878:4;20875:21;20867:29;;20607:295;;;;:::o;20907:1395::-;21024:37;21057:3;21024:37;:::i;:::-;21126:18;21118:6;21115:30;21112:56;;;21148:18;;:::i;:::-;21112:56;21192:38;21224:4;21218:11;21192:38;:::i;:::-;21277:67;21337:6;21329;21323:4;21277:67;:::i;:::-;21371:1;21395:4;21382:17;;21427:2;21419:6;21416:14;21444:1;21439:618;;;;22101:1;22118:6;22115:77;;;22167:9;22162:3;22158:19;22152:26;22143:35;;22115:77;22218:67;22278:6;22271:5;22218:67;:::i;:::-;22212:4;22205:81;22074:222;21409:887;;21439:618;21491:4;21487:9;21479:6;21475:22;21525:37;21557:4;21525:37;:::i;:::-;21584:1;21598:208;21612:7;21609:1;21606:14;21598:208;;;21691:9;21686:3;21682:19;21676:26;21668:6;21661:42;21742:1;21734:6;21730:14;21720:24;;21789:2;21778:9;21774:18;21761:31;;21635:4;21632:1;21628:12;21623:17;;21598:208;;;21834:6;21825:7;21822:19;21819:179;;;21892:9;21887:3;21883:19;21877:26;21935:48;21977:4;21969:6;21965:17;21954:9;21935:48;:::i;:::-;21927:6;21920:64;21842:156;21819:179;22044:1;22040;22032:6;22028:14;22024:22;22018:4;22011:36;21446:611;;;21409:887;;20999:1303;;;20907:1395;;:::o;22308:194::-;22348:4;22368:20;22386:1;22368:20;:::i;:::-;22363:25;;22402:20;22420:1;22402:20;:::i;:::-;22397:25;;22446:1;22443;22439:9;22431:17;;22470:1;22464:4;22461:11;22458:37;;;22475:18;;:::i;:::-;22458:37;22308:194;;;;:::o;22508:180::-;22556:77;22553:1;22546:88;22653:4;22650:1;22643:15;22677:4;22674:1;22667:15;22694:180;22742:77;22739:1;22732:88;22839:4;22836:1;22829:15;22863:4;22860:1;22853:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2191400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeMint(address,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "1011",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2463",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_increaseBalance(address,uint128)": "infinite",
								"_update(address,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 342,
									"end": 1673,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 467,
									"end": 472,
									"name": "PUSH",
									"source": 17,
									"value": "2710"
								},
								{
									"begin": 446,
									"end": 472,
									"name": "PUSH",
									"source": 17,
									"value": "C"
								},
								{
									"begin": 446,
									"end": 472,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 479,
									"end": 524,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 479,
									"end": 524,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 479,
									"end": 524,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 479,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 524,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 479,
									"end": 524,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 524,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 479,
									"end": 524,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 479,
									"end": 524,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 524,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 479,
									"end": 524,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "416C6368656D7900000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "414C434800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 18,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 18,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 18,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "tag",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 1673,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be3de7cd8662276746ee6cda6d8a97bb93fa247642f0278e9994f802a5dfed8a64736f6c63430008140033",
									".code": [
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "4F6CCCE7"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "B88D4FDE"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "D204C45E"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "E985E9C5"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "4F6CCCE7"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "18160DDD"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "18160DDD"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "2F745C59"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "42842E0E"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "81812FC"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 342,
											"end": 1673,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "tag",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 1448,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 1448,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 1448,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1253,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 1253,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1253,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "tag",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 530,
											"end": 783,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 530,
											"end": 783,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 783,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 530,
											"end": 783,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 530,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "tag",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 530,
											"end": 783,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 530,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "tag",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 530,
											"end": 783,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1605,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "96"
										},
										{
											"begin": 1652,
											"end": 1663,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1628,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1628,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1628,
											"end": 1664,
											"name": "tag",
											"source": 17,
											"value": "96"
										},
										{
											"begin": 1628,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1621,
											"end": 1664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1621,
											"end": 1664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1872,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1895,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 1984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 1984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 7,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2370,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2438,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "tag",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1376,
											"end": 1389,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 1427,
											"end": 1434,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1412,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1405,
											"end": 1435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1405,
											"end": 1435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1253,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 530,
											"end": 783,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 596,
											"end": 611,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 626,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 614,
											"end": 626,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 614,
											"end": 628,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 614,
											"end": 628,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 614,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 614,
											"end": 628,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 614,
											"end": 628,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 596,
											"end": 628,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 657,
											"end": 667,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 657,
											"end": 667,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 646,
											"end": 653,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 646,
											"end": 667,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 646,
											"end": 667,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 638,
											"end": 708,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 708,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 638,
											"end": 708,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 708,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 638,
											"end": 708,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 638,
											"end": 708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 638,
											"end": 708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 708,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 638,
											"end": 708,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 638,
											"end": 708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 718,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 732,
											"end": 739,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 718,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 718,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 718,
											"end": 740,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 718,
											"end": 740,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 750,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 763,
											"end": 770,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 772,
											"end": 775,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 750,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 750,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 750,
											"end": 776,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 750,
											"end": 776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 586,
											"end": 783,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 530,
											"end": 783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 8,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 858,
											"end": 1064,
											"name": "tag",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 858,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 995,
											"end": 1002,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1043,
											"end": 1050,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1052,
											"end": 1056,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1025,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 1025,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1025,
											"end": 1057,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 1025,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1057,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 858,
											"end": 1064,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 858,
											"end": 1064,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 858,
											"end": 1064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 858,
											"end": 1064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 858,
											"end": 1064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 858,
											"end": 1064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "780E9D6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1638,
											"end": 1649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1614,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2653,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2656,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2746,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2875,
											"end": 2888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2842,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2954,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3055,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 3959,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3937,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3986,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3992,
											"end": 3999,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4911,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4974,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5101,
											"end": 5115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5165,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5186,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5235,
											"end": 5246,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5219,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5231,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5335,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5347,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5117,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5554,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5559,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 5583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 5583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6145,
											"end": 6166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6212,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6575,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6576,
											"end": 6590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6565,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6602,
											"end": 6624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6737,
											"end": 6747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6721,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6733,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6890,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6919,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 6909,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3535,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3538,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3538,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3580,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3644,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3626,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 12,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "474"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 18,
											"value": "474"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "476"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 18,
											"value": "476"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "tag",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10053,
											"end": 10057,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10132,
											"end": 10162,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 10165,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 10203,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10277,
											"end": 10292,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "tag",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 10424,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "tag",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 10408,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10483,
											"end": 10504,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10528,
											"end": 10533,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10573,
											"end": 10576,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10564,
											"end": 10570,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10559,
											"end": 10562,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10555,
											"end": 10571,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 10580,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 10717,
											"end": 10723,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 10670,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10389,
											"end": 10730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "tag",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10806,
											"end": 10811,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10832,
											"end": 10859,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 10863,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "tag",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10967,
											"end": 10987,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11065,
											"end": 11069,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11053,
											"end": 11070,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 11005,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10812,
											"end": 11090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11174,
											"end": 11180,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11182,
											"end": 11188,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 11219,
											"end": 11228,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11210,
											"end": 11217,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11206,
											"end": 11229,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11202,
											"end": 11234,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 11237,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "tag",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11357,
											"end": 11358,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 11427,
											"end": 11434,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11418,
											"end": 11424,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11407,
											"end": 11416,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11403,
											"end": 11425,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 11382,
											"end": 11435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11372,
											"end": 11435,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11372,
											"end": 11435,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11328,
											"end": 11445,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11512,
											"end": 11514,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11510,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11497,
											"end": 11515,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11484,
											"end": 11516,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11532,
											"end": 11562,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 11565,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 11725,
											"end": 11732,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11716,
											"end": 11722,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11705,
											"end": 11714,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11701,
											"end": 11723,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 11670,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11660,
											"end": 11733,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11660,
											"end": 11733,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11455,
											"end": 11743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11838,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11881,
											"end": 11883,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 11869,
											"end": 11878,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11860,
											"end": 11867,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11856,
											"end": 11879,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11852,
											"end": 11884,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 11887,
											"end": 11966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 12077,
											"end": 12084,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12057,
											"end": 12066,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12053,
											"end": 12075,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 12032,
											"end": 12085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "tag",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12022,
											"end": 12085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12022,
											"end": 12085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11978,
											"end": 12095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12134,
											"end": 12136,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 12205,
											"end": 12212,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12196,
											"end": 12202,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12181,
											"end": 12203,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 12160,
											"end": 12213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12150,
											"end": 12213,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12150,
											"end": 12213,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12105,
											"end": 12223,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11756,
											"end": 12230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12236,
											"end": 12416,
											"name": "tag",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 12236,
											"end": 12416,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12284,
											"end": 12361,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12274,
											"end": 12362,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12381,
											"end": 12385,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 12378,
											"end": 12379,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 12371,
											"end": 12386,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12395,
											"end": 12410,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "tag",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12466,
											"end": 12472,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12504,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12493,
											"end": 12505,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 12483,
											"end": 12505,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12483,
											"end": 12505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 12544,
											"end": 12548,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12540,
											"end": 12552,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12571,
											"end": 12589,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12627,
											"end": 12631,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 12619,
											"end": 12625,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12615,
											"end": 12632,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12605,
											"end": 12632,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12605,
											"end": 12632,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "tag",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12689,
											"end": 12691,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12681,
											"end": 12687,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12678,
											"end": 12692,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 12658,
											"end": 12676,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 12708,
											"end": 12726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12473,
											"end": 12742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12422,
											"end": 12742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "tag",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12897,
											"end": 12901,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12937,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 12924,
											"end": 12933,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12920,
											"end": 12938,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 13016,
											"end": 13017,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13014,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13001,
											"end": 13018,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 12948,
											"end": 13019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 13097,
											"end": 13099,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13086,
											"end": 13095,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13073,
											"end": 13079,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 13029,
											"end": 13101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 13179,
											"end": 13181,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13177,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13155,
											"end": 13161,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 13111,
											"end": 13183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "tag",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12748,
											"end": 13190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13528,
											"name": "tag",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 13196,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13317,
											"end": 13321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 13357,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13344,
											"end": 13353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13332,
											"end": 13358,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13332,
											"end": 13358,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13368,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 13436,
											"end": 13437,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13425,
											"end": 13434,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13421,
											"end": 13438,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13412,
											"end": 13418,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13368,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 13368,
											"end": 13439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13368,
											"end": 13439,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 13368,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13449,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 13517,
											"end": 13519,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13506,
											"end": 13515,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13502,
											"end": 13520,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13493,
											"end": 13499,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13449,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 13449,
											"end": 13521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13449,
											"end": 13521,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 13449,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13528,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13528,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13534,
											"end": 13714,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 13534,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13582,
											"end": 13659,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13579,
											"end": 13580,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13572,
											"end": 13660,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13679,
											"end": 13683,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 13676,
											"end": 13677,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 13669,
											"end": 13684,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13703,
											"end": 13707,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13700,
											"end": 13701,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13708,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 13720,
											"end": 13900,
											"name": "tag",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 13720,
											"end": 13900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13768,
											"end": 13845,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13765,
											"end": 13766,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13758,
											"end": 13846,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13865,
											"end": 13869,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 13862,
											"end": 13863,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 13855,
											"end": 13870,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13889,
											"end": 13893,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13886,
											"end": 13887,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13879,
											"end": 13894,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 13906,
											"end": 14139,
											"name": "tag",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 13906,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13945,
											"end": 13948,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 13986,
											"end": 13991,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13968,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 13968,
											"end": 13992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13968,
											"end": 13992,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 13968,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13959,
											"end": 13992,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13959,
											"end": 13992,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14014,
											"end": 14080,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14007,
											"end": 14012,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14004,
											"end": 14081,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14001,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 14001,
											"end": 14104,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14084,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 14084,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 14084,
											"end": 14102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14084,
											"end": 14102,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 14084,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14001,
											"end": 14104,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 14001,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14131,
											"end": 14132,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14124,
											"end": 14129,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14120,
											"end": 14133,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14113,
											"end": 14133,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14113,
											"end": 14133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13906,
											"end": 14139,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13906,
											"end": 14139,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13906,
											"end": 14139,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13906,
											"end": 14139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14145,
											"end": 14368,
											"name": "tag",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 14145,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14285,
											"end": 14319,
											"name": "PUSH",
											"source": 18,
											"value": "49276D20536F72727920416C6C204E465427732068617665206265656E206D69"
										},
										{
											"begin": 14281,
											"end": 14282,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14273,
											"end": 14279,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14269,
											"end": 14283,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14262,
											"end": 14320,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14354,
											"end": 14360,
											"name": "PUSH",
											"source": 18,
											"value": "6E74656400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14349,
											"end": 14351,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14341,
											"end": 14347,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14337,
											"end": 14352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14330,
											"end": 14361,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14145,
											"end": 14368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14145,
											"end": 14368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14374,
											"end": 14740,
											"name": "tag",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 14374,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14516,
											"end": 14519,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 14601,
											"end": 14603,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14596,
											"end": 14599,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14537,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 14537,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14537,
											"end": 14604,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 14537,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14530,
											"end": 14604,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14530,
											"end": 14604,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14613,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 14702,
											"end": 14705,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14613,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 14613,
											"end": 14706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14613,
											"end": 14706,
											"name": "tag",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 14613,
											"end": 14706,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14731,
											"end": 14733,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14726,
											"end": 14729,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14722,
											"end": 14734,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14715,
											"end": 14734,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14715,
											"end": 14734,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14374,
											"end": 14740,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14374,
											"end": 14740,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14374,
											"end": 14740,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14374,
											"end": 14740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14746,
											"end": 15165,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 14746,
											"end": 15165,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14912,
											"end": 14916,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14950,
											"end": 14952,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14939,
											"end": 14948,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14935,
											"end": 14953,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14927,
											"end": 14953,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14927,
											"end": 14953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14999,
											"end": 15008,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14993,
											"end": 14997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14989,
											"end": 15009,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14985,
											"end": 14986,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14974,
											"end": 14983,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14970,
											"end": 14987,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14963,
											"end": 15010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15027,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 15153,
											"end": 15157,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15027,
											"end": 15158,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 15027,
											"end": 15158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15027,
											"end": 15158,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 15027,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15019,
											"end": 15158,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15019,
											"end": 15158,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14746,
											"end": 15165,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14746,
											"end": 15165,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14746,
											"end": 15165,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14746,
											"end": 15165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15171,
											"end": 15269,
											"name": "tag",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 15171,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15222,
											"end": 15228,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15256,
											"end": 15261,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15250,
											"end": 15262,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 15240,
											"end": 15262,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15240,
											"end": 15262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15171,
											"end": 15269,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15171,
											"end": 15269,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15171,
											"end": 15269,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15171,
											"end": 15269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15275,
											"end": 15443,
											"name": "tag",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 15275,
											"end": 15443,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15358,
											"end": 15369,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15392,
											"end": 15398,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15387,
											"end": 15390,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15380,
											"end": 15399,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15432,
											"end": 15436,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15427,
											"end": 15430,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15423,
											"end": 15437,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15408,
											"end": 15437,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15408,
											"end": 15437,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15275,
											"end": 15443,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15275,
											"end": 15443,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15275,
											"end": 15443,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15275,
											"end": 15443,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15275,
											"end": 15443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15449,
											"end": 15822,
											"name": "tag",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 15449,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15535,
											"end": 15538,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15563,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 15595,
											"end": 15600,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15563,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 15563,
											"end": 15601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15563,
											"end": 15601,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 15563,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15617,
											"end": 15687,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 15680,
											"end": 15686,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15675,
											"end": 15678,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15617,
											"end": 15687,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 15617,
											"end": 15687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15617,
											"end": 15687,
											"name": "tag",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 15617,
											"end": 15687,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15610,
											"end": 15687,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 15610,
											"end": 15687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15696,
											"end": 15761,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 15754,
											"end": 15760,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15749,
											"end": 15752,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15742,
											"end": 15746,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15735,
											"end": 15740,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 15731,
											"end": 15747,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15696,
											"end": 15761,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 15696,
											"end": 15761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15696,
											"end": 15761,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 15696,
											"end": 15761,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15786,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 15808,
											"end": 15814,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15786,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 15786,
											"end": 15815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15786,
											"end": 15815,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 15786,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15781,
											"end": 15784,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15777,
											"end": 15816,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15770,
											"end": 15816,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15770,
											"end": 15816,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15539,
											"end": 15822,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15449,
											"end": 15822,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15449,
											"end": 15822,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15449,
											"end": 15822,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15449,
											"end": 15822,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15449,
											"end": 15822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16023,
											"end": 16027,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16061,
											"end": 16064,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 16050,
											"end": 16059,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16046,
											"end": 16065,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16038,
											"end": 16065,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16038,
											"end": 16065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16075,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 16143,
											"end": 16144,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16141,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16128,
											"end": 16145,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16119,
											"end": 16125,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 16075,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 16075,
											"end": 16146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16075,
											"end": 16146,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 16075,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16156,
											"end": 16228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16213,
											"end": 16222,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16209,
											"end": 16227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16200,
											"end": 16206,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 16156,
											"end": 16228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 16156,
											"end": 16228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16156,
											"end": 16228,
											"name": "tag",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 16156,
											"end": 16228,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16238,
											"end": 16310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 16306,
											"end": 16308,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 16295,
											"end": 16304,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16291,
											"end": 16309,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16282,
											"end": 16288,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16238,
											"end": 16310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 16238,
											"end": 16310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16238,
											"end": 16310,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 16238,
											"end": 16310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16357,
											"end": 16366,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16351,
											"end": 16355,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16347,
											"end": 16367,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 16331,
											"end": 16340,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16327,
											"end": 16345,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16320,
											"end": 16368,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16385,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 16456,
											"end": 16460,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16385,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 16385,
											"end": 16461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16385,
											"end": 16461,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 16385,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16377,
											"end": 16461,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16377,
											"end": 16461,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15828,
											"end": 16468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16474,
											"end": 16615,
											"name": "tag",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 16474,
											"end": 16615,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16530,
											"end": 16535,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16561,
											"end": 16567,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16555,
											"end": 16568,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 16546,
											"end": 16568,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16546,
											"end": 16568,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16577,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 16603,
											"end": 16608,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16577,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 16577,
											"end": 16609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16577,
											"end": 16609,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 16577,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16474,
											"end": 16615,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16474,
											"end": 16615,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16474,
											"end": 16615,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16474,
											"end": 16615,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16474,
											"end": 16615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16621,
											"end": 16970,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 16621,
											"end": 16970,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16690,
											"end": 16696,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16739,
											"end": 16741,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16727,
											"end": 16736,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16718,
											"end": 16725,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16714,
											"end": 16737,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 16710,
											"end": 16742,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 16707,
											"end": 16826,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 16707,
											"end": 16826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 16707,
											"end": 16826,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 16745,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 16745,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 16745,
											"end": 16824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16745,
											"end": 16824,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 16745,
											"end": 16824,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16707,
											"end": 16826,
											"name": "tag",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 16707,
											"end": 16826,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16865,
											"end": 16866,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16890,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 16945,
											"end": 16952,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16936,
											"end": 16942,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16925,
											"end": 16934,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16921,
											"end": 16943,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16890,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 16890,
											"end": 16953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16890,
											"end": 16953,
											"name": "tag",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 16890,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16880,
											"end": 16953,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16880,
											"end": 16953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16836,
											"end": 16963,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16621,
											"end": 16970,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16621,
											"end": 16970,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16621,
											"end": 16970,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16621,
											"end": 16970,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16621,
											"end": 16970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16976,
											"end": 17124,
											"name": "tag",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 16976,
											"end": 17124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17078,
											"end": 17089,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17115,
											"end": 17118,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17100,
											"end": 17118,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17100,
											"end": 17118,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16976,
											"end": 17124,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16976,
											"end": 17124,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16976,
											"end": 17124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16976,
											"end": 17124,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16976,
											"end": 17124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17130,
											"end": 17520,
											"name": "tag",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 17130,
											"end": 17520,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17236,
											"end": 17239,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17264,
											"end": 17303,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 17297,
											"end": 17302,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17264,
											"end": 17303,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 17264,
											"end": 17303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17264,
											"end": 17303,
											"name": "tag",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 17264,
											"end": 17303,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17319,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 17401,
											"end": 17407,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17396,
											"end": 17399,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17319,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 17319,
											"end": 17408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17319,
											"end": 17408,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 17319,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17312,
											"end": 17408,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 17312,
											"end": 17408,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17417,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 17475,
											"end": 17481,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17470,
											"end": 17473,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17463,
											"end": 17467,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17456,
											"end": 17461,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 17452,
											"end": 17468,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17417,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 17417,
											"end": 17482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17417,
											"end": 17482,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 17417,
											"end": 17482,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17507,
											"end": 17513,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 17502,
											"end": 17505,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17498,
											"end": 17514,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17491,
											"end": 17514,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17491,
											"end": 17514,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17240,
											"end": 17520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17130,
											"end": 17520,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17130,
											"end": 17520,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17130,
											"end": 17520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17130,
											"end": 17520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17130,
											"end": 17520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17961,
											"name": "tag",
											"source": 18,
											"value": "226"
										},
										{
											"begin": 17526,
											"end": 17961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17706,
											"end": 17709,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17728,
											"end": 17823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 17819,
											"end": 17822,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17810,
											"end": 17816,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17728,
											"end": 17823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 17728,
											"end": 17823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17728,
											"end": 17823,
											"name": "tag",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 17728,
											"end": 17823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17721,
											"end": 17823,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17721,
											"end": 17823,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17840,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 17931,
											"end": 17934,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17922,
											"end": 17928,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17840,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 17840,
											"end": 17935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17840,
											"end": 17935,
											"name": "tag",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 17840,
											"end": 17935,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17833,
											"end": 17935,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17833,
											"end": 17935,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17952,
											"end": 17955,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17945,
											"end": 17955,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17945,
											"end": 17955,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17961,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17961,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17967,
											"end": 18108,
											"name": "tag",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 17967,
											"end": 18108,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18016,
											"end": 18020,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18039,
											"end": 18042,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18031,
											"end": 18042,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18031,
											"end": 18042,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18062,
											"end": 18065,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18059,
											"end": 18060,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18052,
											"end": 18066,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18096,
											"end": 18100,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18093,
											"end": 18094,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18083,
											"end": 18101,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 18075,
											"end": 18101,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18075,
											"end": 18101,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17967,
											"end": 18108,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17967,
											"end": 18108,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17967,
											"end": 18108,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17967,
											"end": 18108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18114,
											"end": 18207,
											"name": "tag",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 18114,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18151,
											"end": 18157,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18198,
											"end": 18200,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18193,
											"end": 18195,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 18186,
											"end": 18191,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18182,
											"end": 18196,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18178,
											"end": 18201,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 18168,
											"end": 18201,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18168,
											"end": 18201,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18114,
											"end": 18207,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18114,
											"end": 18207,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18114,
											"end": 18207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18114,
											"end": 18207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18213,
											"end": 18320,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 18213,
											"end": 18320,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18257,
											"end": 18265,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18307,
											"end": 18312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18301,
											"end": 18305,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18297,
											"end": 18313,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 18276,
											"end": 18313,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18276,
											"end": 18313,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18213,
											"end": 18320,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18213,
											"end": 18320,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18213,
											"end": 18320,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18213,
											"end": 18320,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18213,
											"end": 18320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18326,
											"end": 18719,
											"name": "tag",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 18326,
											"end": 18719,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18395,
											"end": 18401,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18445,
											"end": 18446,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 18433,
											"end": 18443,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18429,
											"end": 18447,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 18468,
											"end": 18565,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 18498,
											"end": 18564,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18487,
											"end": 18496,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18468,
											"end": 18565,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 18468,
											"end": 18565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18468,
											"end": 18565,
											"name": "tag",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 18468,
											"end": 18565,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18586,
											"end": 18625,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 18616,
											"end": 18624,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 18605,
											"end": 18614,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18586,
											"end": 18625,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 18586,
											"end": 18625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18586,
											"end": 18625,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 18586,
											"end": 18625,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18574,
											"end": 18625,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 18574,
											"end": 18625,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18658,
											"end": 18662,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 18654,
											"end": 18663,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 18647,
											"end": 18652,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18643,
											"end": 18664,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 18634,
											"end": 18664,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 18634,
											"end": 18664,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18707,
											"end": 18711,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 18697,
											"end": 18705,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 18693,
											"end": 18712,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 18686,
											"end": 18691,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18683,
											"end": 18713,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 18673,
											"end": 18713,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18673,
											"end": 18713,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18402,
											"end": 18719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18402,
											"end": 18719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18326,
											"end": 18719,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 18326,
											"end": 18719,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18326,
											"end": 18719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18326,
											"end": 18719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18326,
											"end": 18719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18326,
											"end": 18719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18725,
											"end": 18785,
											"name": "tag",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 18725,
											"end": 18785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18753,
											"end": 18756,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18774,
											"end": 18779,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18767,
											"end": 18779,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18767,
											"end": 18779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18725,
											"end": 18785,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18725,
											"end": 18785,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18725,
											"end": 18785,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18725,
											"end": 18785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18791,
											"end": 18933,
											"name": "tag",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 18791,
											"end": 18933,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18841,
											"end": 18850,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18874,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 18892,
											"end": 18926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 18901,
											"end": 18925,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 18919,
											"end": 18924,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18901,
											"end": 18925,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 18901,
											"end": 18925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18901,
											"end": 18925,
											"name": "tag",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 18901,
											"end": 18925,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18892,
											"end": 18926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 18892,
											"end": 18926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18892,
											"end": 18926,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 18892,
											"end": 18926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18874,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 18874,
											"end": 18927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18874,
											"end": 18927,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 18874,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18861,
											"end": 18927,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18861,
											"end": 18927,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18791,
											"end": 18933,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18791,
											"end": 18933,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18791,
											"end": 18933,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18791,
											"end": 18933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18939,
											"end": 19014,
											"name": "tag",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 18939,
											"end": 19014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18982,
											"end": 18985,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19003,
											"end": 19008,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18996,
											"end": 19008,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18996,
											"end": 19008,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18939,
											"end": 19014,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18939,
											"end": 19014,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18939,
											"end": 19014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18939,
											"end": 19014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19020,
											"end": 19289,
											"name": "tag",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 19020,
											"end": 19289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19130,
											"end": 19169,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 19161,
											"end": 19168,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19130,
											"end": 19169,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 19130,
											"end": 19169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19130,
											"end": 19169,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 19130,
											"end": 19169,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19191,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 19240,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 19264,
											"end": 19280,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19240,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 19240,
											"end": 19281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19240,
											"end": 19281,
											"name": "tag",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 19240,
											"end": 19281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19232,
											"end": 19238,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19225,
											"end": 19229,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19219,
											"end": 19230,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 19191,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 19191,
											"end": 19282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19191,
											"end": 19282,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 19191,
											"end": 19282,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19185,
											"end": 19189,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19178,
											"end": 19283,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 19096,
											"end": 19289,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19020,
											"end": 19289,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19020,
											"end": 19289,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19020,
											"end": 19289,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19020,
											"end": 19289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19295,
											"end": 19368,
											"name": "tag",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 19295,
											"end": 19368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19340,
											"end": 19343,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19295,
											"end": 19368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19295,
											"end": 19368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19374,
											"end": 19563,
											"name": "tag",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 19374,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19451,
											"end": 19483,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 19451,
											"end": 19483,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 19451,
											"end": 19483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19451,
											"end": 19483,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 19451,
											"end": 19483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19492,
											"end": 19557,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 19550,
											"end": 19556,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19542,
											"end": 19548,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19536,
											"end": 19540,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19492,
											"end": 19557,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 19492,
											"end": 19557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19492,
											"end": 19557,
											"name": "tag",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 19492,
											"end": 19557,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19427,
											"end": 19563,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19374,
											"end": 19563,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19374,
											"end": 19563,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19374,
											"end": 19563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19569,
											"end": 19755,
											"name": "tag",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 19569,
											"end": 19755,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "tag",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19646,
											"end": 19649,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19639,
											"end": 19644,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19636,
											"end": 19650,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19700,
											"end": 19739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 19737,
											"end": 19738,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19730,
											"end": 19735,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19700,
											"end": 19739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 19700,
											"end": 19739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19700,
											"end": 19739,
											"name": "tag",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 19700,
											"end": 19739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19673,
											"end": 19674,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 19666,
											"end": 19671,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19662,
											"end": 19675,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19653,
											"end": 19675,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19653,
											"end": 19675,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "tag",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 19629,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19569,
											"end": 19755,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19569,
											"end": 19755,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19569,
											"end": 19755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20304,
											"name": "tag",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 19761,
											"end": 20304,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19862,
											"end": 19864,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 19857,
											"end": 19860,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19854,
											"end": 19865,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 19851,
											"end": 20297,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19851,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 19851,
											"end": 20297,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19896,
											"end": 19934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 19928,
											"end": 19933,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19896,
											"end": 19934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 19896,
											"end": 19934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19896,
											"end": 19934,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 19896,
											"end": 19934,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19980,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 19998,
											"end": 20008,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19980,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 19980,
											"end": 20009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19980,
											"end": 20009,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 19980,
											"end": 20009,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19970,
											"end": 19978,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19966,
											"end": 20010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20163,
											"end": 20165,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20151,
											"end": 20161,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20148,
											"end": 20166,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 20145,
											"end": 20194,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 20145,
											"end": 20194,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 20145,
											"end": 20194,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 20184,
											"end": 20192,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20169,
											"end": 20192,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20169,
											"end": 20192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20145,
											"end": 20194,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 20145,
											"end": 20194,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20207,
											"end": 20287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 20263,
											"end": 20285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 20281,
											"end": 20284,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20263,
											"end": 20285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 20263,
											"end": 20285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20263,
											"end": 20285,
											"name": "tag",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 20263,
											"end": 20285,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20253,
											"end": 20261,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20249,
											"end": 20286,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20236,
											"end": 20247,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20207,
											"end": 20287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 20207,
											"end": 20287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20207,
											"end": 20287,
											"name": "tag",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 20207,
											"end": 20287,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19866,
											"end": 20297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19866,
											"end": 20297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19851,
											"end": 20297,
											"name": "tag",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 19851,
											"end": 20297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20304,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20304,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20304,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19761,
											"end": 20304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20310,
											"end": 20427,
											"name": "tag",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 20310,
											"end": 20427,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20364,
											"end": 20372,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20414,
											"end": 20419,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20408,
											"end": 20412,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20404,
											"end": 20420,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 20383,
											"end": 20420,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20383,
											"end": 20420,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20310,
											"end": 20427,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20310,
											"end": 20427,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20310,
											"end": 20427,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20310,
											"end": 20427,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20310,
											"end": 20427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20433,
											"end": 20602,
											"name": "tag",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 20433,
											"end": 20602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20477,
											"end": 20483,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20510,
											"end": 20561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 20558,
											"end": 20559,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20554,
											"end": 20560,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 20546,
											"end": 20551,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20543,
											"end": 20544,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 20539,
											"end": 20552,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 20510,
											"end": 20561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 20510,
											"end": 20561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20510,
											"end": 20561,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 20510,
											"end": 20561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20506,
											"end": 20562,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 20591,
											"end": 20595,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 20585,
											"end": 20589,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20581,
											"end": 20596,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20571,
											"end": 20596,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20484,
											"end": 20602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20433,
											"end": 20602,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20433,
											"end": 20602,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20433,
											"end": 20602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20433,
											"end": 20602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20433,
											"end": 20602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20607,
											"end": 20902,
											"name": "tag",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 20607,
											"end": 20902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20683,
											"end": 20687,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20829,
											"end": 20858,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 20854,
											"end": 20857,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20848,
											"end": 20852,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20829,
											"end": 20858,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 20829,
											"end": 20858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20829,
											"end": 20858,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 20829,
											"end": 20858,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20821,
											"end": 20858,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20821,
											"end": 20858,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20891,
											"end": 20894,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20888,
											"end": 20889,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 20884,
											"end": 20895,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 20878,
											"end": 20882,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20875,
											"end": 20896,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 20867,
											"end": 20896,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20867,
											"end": 20896,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20607,
											"end": 20902,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20607,
											"end": 20902,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20607,
											"end": 20902,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20607,
											"end": 20902,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20607,
											"end": 20902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20907,
											"end": 22302,
											"name": "tag",
											"source": 18,
											"value": "234"
										},
										{
											"begin": 20907,
											"end": 22302,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21024,
											"end": 21061,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 21057,
											"end": 21060,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21024,
											"end": 21061,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 21024,
											"end": 21061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21024,
											"end": 21061,
											"name": "tag",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 21024,
											"end": 21061,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21126,
											"end": 21144,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21118,
											"end": 21124,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21115,
											"end": 21145,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 21112,
											"end": 21168,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21112,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 21112,
											"end": 21168,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21148,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 21148,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 21148,
											"end": 21166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21148,
											"end": 21166,
											"name": "tag",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 21148,
											"end": 21166,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21112,
											"end": 21168,
											"name": "tag",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 21112,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21192,
											"end": 21230,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 21224,
											"end": 21228,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21218,
											"end": 21229,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 21192,
											"end": 21230,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 21192,
											"end": 21230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21192,
											"end": 21230,
											"name": "tag",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 21192,
											"end": 21230,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21277,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 21337,
											"end": 21343,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21329,
											"end": 21335,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21323,
											"end": 21327,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21277,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 21277,
											"end": 21344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21277,
											"end": 21344,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 21277,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21371,
											"end": 21372,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21395,
											"end": 21399,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21382,
											"end": 21399,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21382,
											"end": 21399,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21427,
											"end": 21429,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 21419,
											"end": 21425,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21416,
											"end": 21430,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 21444,
											"end": 21445,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 21439,
											"end": 22057,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21439,
											"end": 22057,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 21439,
											"end": 22057,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 21439,
											"end": 22057,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22101,
											"end": 22102,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22118,
											"end": 22124,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22115,
											"end": 22192,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22115,
											"end": 22192,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 22115,
											"end": 22192,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22167,
											"end": 22176,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22162,
											"end": 22165,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 22158,
											"end": 22177,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22152,
											"end": 22178,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 22143,
											"end": 22178,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22143,
											"end": 22178,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22115,
											"end": 22192,
											"name": "tag",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 22115,
											"end": 22192,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22218,
											"end": 22285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 22278,
											"end": 22284,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 22271,
											"end": 22276,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22218,
											"end": 22285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 22218,
											"end": 22285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22218,
											"end": 22285,
											"name": "tag",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 22218,
											"end": 22285,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22212,
											"end": 22216,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 22205,
											"end": 22286,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 22074,
											"end": 22296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21409,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 21409,
											"end": 22296,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21439,
											"end": 22057,
											"name": "tag",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 21439,
											"end": 22057,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21491,
											"end": 21495,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 21487,
											"end": 21496,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 21479,
											"end": 21485,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21475,
											"end": 21497,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 21525,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 21557,
											"end": 21561,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 21525,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 21525,
											"end": 21562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21525,
											"end": 21562,
											"name": "tag",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 21525,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21584,
											"end": 21585,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21612,
											"end": 21619,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21609,
											"end": 21610,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21606,
											"end": 21620,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21691,
											"end": 21700,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21686,
											"end": 21689,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 21682,
											"end": 21701,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21676,
											"end": 21702,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 21668,
											"end": 21674,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21661,
											"end": 21703,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 21742,
											"end": 21743,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 21734,
											"end": 21740,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21730,
											"end": 21744,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21720,
											"end": 21744,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21720,
											"end": 21744,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21789,
											"end": 21791,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21778,
											"end": 21787,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21774,
											"end": 21792,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21761,
											"end": 21792,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 21761,
											"end": 21792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21635,
											"end": 21639,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21632,
											"end": 21633,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21628,
											"end": 21640,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21623,
											"end": 21640,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21623,
											"end": 21640,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "tag",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 21598,
											"end": 21806,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21834,
											"end": 21840,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 21825,
											"end": 21832,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21822,
											"end": 21841,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 21819,
											"end": 21998,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21819,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 21819,
											"end": 21998,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21892,
											"end": 21901,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21887,
											"end": 21890,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 21883,
											"end": 21902,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21877,
											"end": 21903,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 21935,
											"end": 21983,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 21977,
											"end": 21981,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 21969,
											"end": 21975,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 21965,
											"end": 21982,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 21954,
											"end": 21963,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21935,
											"end": 21983,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 21935,
											"end": 21983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21935,
											"end": 21983,
											"name": "tag",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 21935,
											"end": 21983,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21927,
											"end": 21933,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21920,
											"end": 21984,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 21842,
											"end": 21998,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21819,
											"end": 21998,
											"name": "tag",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 21819,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22044,
											"end": 22045,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 22040,
											"end": 22041,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 22032,
											"end": 22038,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 22028,
											"end": 22042,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 22024,
											"end": 22046,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22018,
											"end": 22022,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 22011,
											"end": 22047,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 21446,
											"end": 22057,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21446,
											"end": 22057,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21446,
											"end": 22057,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21409,
											"end": 22296,
											"name": "tag",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 21409,
											"end": 22296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21409,
											"end": 22296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20999,
											"end": 22302,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20999,
											"end": 22302,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20999,
											"end": 22302,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20907,
											"end": 22302,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20907,
											"end": 22302,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20907,
											"end": 22302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22308,
											"end": 22502,
											"name": "tag",
											"source": 18,
											"value": "301"
										},
										{
											"begin": 22308,
											"end": 22502,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22348,
											"end": 22352,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22368,
											"end": 22388,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 22386,
											"end": 22387,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22368,
											"end": 22388,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 22368,
											"end": 22388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22368,
											"end": 22388,
											"name": "tag",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 22368,
											"end": 22388,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22363,
											"end": 22388,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22363,
											"end": 22388,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22402,
											"end": 22422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "678"
										},
										{
											"begin": 22420,
											"end": 22421,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22402,
											"end": 22422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 22402,
											"end": 22422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22402,
											"end": 22422,
											"name": "tag",
											"source": 18,
											"value": "678"
										},
										{
											"begin": 22402,
											"end": 22422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22397,
											"end": 22422,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22397,
											"end": 22422,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22446,
											"end": 22447,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22443,
											"end": 22444,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22439,
											"end": 22448,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 22431,
											"end": 22448,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22431,
											"end": 22448,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22470,
											"end": 22471,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22464,
											"end": 22468,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22461,
											"end": 22472,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 22458,
											"end": 22495,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22458,
											"end": 22495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 22458,
											"end": 22495,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 22475,
											"end": 22493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "tag",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22458,
											"end": 22495,
											"name": "tag",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 22458,
											"end": 22495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22308,
											"end": 22502,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22308,
											"end": 22502,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22308,
											"end": 22502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22308,
											"end": 22502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22308,
											"end": 22502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22508,
											"end": 22688,
											"name": "tag",
											"source": 18,
											"value": "310"
										},
										{
											"begin": 22508,
											"end": 22688,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22556,
											"end": 22633,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22553,
											"end": 22554,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22546,
											"end": 22634,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22653,
											"end": 22657,
											"name": "PUSH",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 22650,
											"end": 22651,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 22643,
											"end": 22658,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22677,
											"end": 22681,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 22674,
											"end": 22675,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22667,
											"end": 22682,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 22694,
											"end": 22874,
											"name": "tag",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 22694,
											"end": 22874,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22742,
											"end": 22819,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22739,
											"end": 22740,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22732,
											"end": 22820,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22839,
											"end": 22843,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 22836,
											"end": 22837,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 22829,
											"end": 22844,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22863,
											"end": 22867,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 22860,
											"end": 22861,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22853,
											"end": 22868,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol",
								"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol",
								"contract-3a79feaed7.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address,string)": "d204c45e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-3a79feaed7.sol\":\"Alchemy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.0.2/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contract-3a79feaed7.sol\":{\"keccak256\":\"0x9870243e9cb1e3f940895eac0dd7ffb93effa83608efc7e7d10abc7b485d6ded\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12dcc7d5943e141273b270c2462b407704c89b1aeccdd9faf499ea153046cbc2\",\"dweb:/ipfs/QmUvjeb8QXEeBm9qKy1EXoc3TUMhDrVwJMs4s5ah4pLPuE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1331,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1335,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1338,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1342,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1724,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3375,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 3378,
								"contract": "contract-3a79feaed7.sol:Alchemy",
								"label": "MAX_SUPPLY",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2203
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 2204,
							"src": "132:59:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2203,
										"src": "140:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2203
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1294
						]
					},
					"id": 28,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 4,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2203,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 32,
							"src": "172:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "180:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IERC165",
										"nameLocations": [
											"279:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2203,
										"src": "279:7:1"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:1"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC721",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "288:7:1"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:1",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 27,
							"linearizedBaseContracts": [
								27,
								1294,
								2203
							],
							"name": "IERC4906",
							"nameLocation": "267:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:1",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 19,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "529:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:1"
									},
									"src": "508:39:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:1",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 26,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "796:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "818:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:1"
									},
									"src": "770:68:1"
								}
							],
							"scope": 28,
							"src": "257:583:1",
							"usedErrors": [],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "107:734:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 32,
							"sourceUnit": 1295,
							"src": "132:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 30,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							168
						],
						"IERC20Errors": [
							73
						],
						"IERC721Errors": [
							121
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 43,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 48,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 53,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 62,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 67,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 72,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 169,
							"src": "278:1764:3",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 74,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 79,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 84,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 93,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 98,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 103,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 110,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 115,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 120,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 169,
							"src": "2186:2092:3",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 133,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 138,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 143,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 150,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 155,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 160,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 167,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 169,
							"src": "4424:2107:3",
							"usedErrors": [
								133,
								138,
								143,
								150,
								155,
								160,
								167
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1912
						],
						"ERC165": [
							2191
						],
						"ERC721": [
							1177
						],
						"IERC165": [
							2203
						],
						"IERC721": [
							1294
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1882
						],
						"IERC721Receiver": [
							1312
						],
						"Strings": [
							2167
						]
					},
					"id": 1178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1295,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1313,
							"src": "172:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "180:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1883,
							"src": "227:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1882,
										"src": "235:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1913,
							"src": "293:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1912,
										"src": "301:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 2168,
							"src": "342:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 179,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2167,
										"src": "350:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 2192,
							"src": "391:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2203,
										"src": "399:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 182,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2191,
										"src": "408:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 169,
							"src": "461:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 184,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 121,
										"src": "469:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 187,
										"name": "Context",
										"nameLocations": [
											"804:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1912,
										"src": "804:7:4"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:4"
								},
								{
									"baseName": {
										"id": 189,
										"name": "ERC165",
										"nameLocations": [
											"813:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2191,
										"src": "813:6:4"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:4"
								},
								{
									"baseName": {
										"id": 191,
										"name": "IERC721",
										"nameLocations": [
											"821:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "821:7:4"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:4"
								},
								{
									"baseName": {
										"id": 193,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1882,
										"src": "830:15:4"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:4"
								},
								{
									"baseName": {
										"id": 195,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "847:13:4"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1177,
							"linearizedBaseContracts": [
								1177,
								121,
								1882,
								1294,
								2191,
								2203,
								1912
							],
							"name": "ERC721",
							"nameLocation": "794:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 199,
									"libraryName": {
										"id": 197,
										"name": "Strings",
										"nameLocations": [
											"873:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2167,
										"src": "873:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:4",
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "917:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 200,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "964:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "993:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 206,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:4",
										"keyType": {
											"id": 204,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1051:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 210,
										"keyName": "owner",
										"keyNameLocation": "1067:5:4",
										"keyType": {
											"id": 208,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1109:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 214,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:4",
										"keyType": {
											"id": 212,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1175:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 220,
										"keyName": "owner",
										"keyNameLocation": "1191:5:4",
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 219,
											"keyName": "operator",
											"keyNameLocation": "1216:8:4",
											"keyType": {
												"id": 217,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 218,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1437:57:4",
										"statements": [
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1447:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1455:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:4"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 233,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1470:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:4"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 238,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1393:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1414:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:4"
									},
									"scope": 1177,
									"src": "1381:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2190,
										2202
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1669:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 251,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1718:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 250,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1294",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1754:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 257,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1882,
																			"src": "1774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1882_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1882_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 256,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1882",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1842:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 262,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1177_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2190,
															"src": "1818:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 248,
												"id": 267,
												"nodeType": "Return",
												"src": "1679:175:4"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 243,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2191,
												"src": "1637:6:4"
											},
											{
												"id": 244,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2203,
												"src": "1645:7:4"
											}
										],
										"src": "1628:25:4"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 240,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:4"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 1177,
									"src": "1561:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1219
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1992:136:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 277,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 278,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "2002:87:4",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "2027:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 284,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 283,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2048:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 289,
															"nodeType": "RevertStatement",
															"src": "2041:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 292,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 294,
													"indexExpression": {
														"id": 293,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2115:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 295,
												"nodeType": "Return",
												"src": "2098:23:4"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:4"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1983:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:4"
									},
									"scope": 1177,
									"src": "1920:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2257:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2274:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2267:29:4"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2202:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 1177,
									"src": "2185:118:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1867
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2425:29:4",
										"statements": [
											{
												"expression": {
													"id": 316,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "2442:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "2435:12:4"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:4"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2410:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:4"
									},
									"scope": 1177,
									"src": "2365:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1873
									],
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2580:31:4",
										"statements": [
											{
												"expression": {
													"id": 325,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 324,
												"id": 326,
												"nodeType": "Return",
												"src": "2590:14:4"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:4"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2565:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:4"
									},
									"scope": 1177,
									"src": "2518:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1881
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2756:176:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 336,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2766:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2799:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 340,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 342,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 345,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 355,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 356,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "2901:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1980,
																	"src": "2901:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 352,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 335,
												"id": 362,
												"nodeType": "Return",
												"src": "2843:82:4"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2695:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:4"
									},
									"scope": 1177,
									"src": "2677:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "3240:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 369,
												"id": 371,
												"nodeType": "Return",
												"src": "3250:9:4"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:4"
									},
									"scope": 1177,
									"src": "3174:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1267
									],
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "3384:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 384,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "3416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 980,
														"src": "3394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:4"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:4"
									},
									"scope": 1177,
									"src": "3323:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1283
									],
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "3573:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "3583:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3623:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 396,
												"id": 404,
												"nodeType": "Return",
												"src": "3616:28:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3564:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:4"
									},
									"scope": 1177,
									"src": "3497:154:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "3793:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 415,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "3822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "3836:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3846:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 414,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3803:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:4"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 1177,
									"src": "3718:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "4022:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 432,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4039:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4058:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 436,
													"indexExpression": {
														"id": 435,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4065:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 431,
												"id": 437,
												"nodeType": "Return",
												"src": "4032:42:4"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3969:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:4"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4016:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:4"
									},
									"scope": 1177,
									"src": "3928:153:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1259
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4223:498:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 449,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "4237:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 450,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "4233:87:4",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "4255:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 456,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "4276:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "RevertStatement",
															"src": "4269:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "4538:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 464,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4570:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 469,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "4583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "4562:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "4610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 474,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "4627:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "4606:109:4",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "4633:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "4675:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 478,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "4681:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 479,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4690:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 476,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "4654:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 481,
															"nodeType": "RevertStatement",
															"src": "4647:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:4"
									},
									"scope": 1177,
									"src": "4143:578:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1249
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4863:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4896:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 495,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															529
														],
														"referencedDeclaration": 529,
														"src": "4873:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:4"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4813:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4839:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:4"
									},
									"scope": 1177,
									"src": "4787:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1239
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5088:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5111:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5117:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5162:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5168:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5172:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5181:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 521,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "5139:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:4"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5011:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5025:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5054:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:4"
									},
									"scope": 1177,
									"src": "4985:208:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "5782:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 537,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 539,
													"indexExpression": {
														"id": 538,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "5807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 536,
												"id": 540,
												"nodeType": "Return",
												"src": "5792:23:4"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:4"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:4"
									},
									"scope": 1177,
									"src": "5707:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6017:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 550,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "6034:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "6050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 549,
												"id": 553,
												"nodeType": "Return",
												"src": "6027:31:4"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "5960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6008:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:4"
									},
									"scope": 1177,
									"src": "5938:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "6485:163:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 573,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "6552:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 574,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "6561:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 577,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "6589:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 578,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 560,
																				"src": "6596:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 576,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "6572:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 582,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 562,
																				"src": "6621:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 581,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6608:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 584,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "6633:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 566,
												"id": 589,
												"nodeType": "Return",
												"src": "6495:146:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6399:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6479:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:4"
									},
									"scope": 1177,
									"src": "6376:272:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "7179:271:4",
										"statements": [
											{
												"condition": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 602,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "7208:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 603,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "7215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 604,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "7224:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 601,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7194:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "7189:255:4",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "7234:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 607,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7252:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 608,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 623,
																"nodeType": "Block",
																"src": "7350:84:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 619,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 596,
																					"src": "7402:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 620,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7411:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 618,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "7375:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 622,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:4"
																	}
																]
															},
															"id": 624,
															"nodeType": "IfStatement",
															"src": "7248:186:4",
															"trueBody": {
																"id": 617,
																"nodeType": "Block",
																"src": "7273:71:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 614,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7321:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 613,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 84,
																				"src": "7298:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 616,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7140:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:4"
									},
									"scope": 1177,
									"src": "7082:368:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "8167:78:4",
										"statements": [
											{
												"id": 642,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:4",
												"statements": [
													{
														"expression": {
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 636,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "8201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "8211:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 639,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "8223:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 641,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8135:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 632,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 1177,
									"src": "8092:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "8933:700:4",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "8943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 656,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "8958:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "9035:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "9031:86:4",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "9055:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 669,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "9086:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 670,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "9092:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 671,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9098:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 668,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "9069:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "9161:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "9157:256:4",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "9181:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 687,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9298:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 688,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 682,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		980,
																		1046
																	],
																	"referencedDeclaration": 1046,
																	"src": "9277:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 694,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:4"
														},
														{
															"id": 701,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 695,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9368:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"id": 696,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 657,
																				"src": "9378:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 700,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9427:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "9423:107:4",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "9445:85:4",
													"statements": [
														{
															"id": 716,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:4",
															"statements": [
																{
																	"expression": {
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 710,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9487:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 712,
																			"indexExpression": {
																				"id": 711,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "9497:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 715,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 719,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 720,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9559:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 726,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "9586:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "9592:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "9577:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "9572:32:4"
											},
											{
												"expression": {
													"id": 731,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "9622:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 655,
												"id": 732,
												"nodeType": "Return",
												"src": "9615:11:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8855:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8924:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:4"
									},
									"scope": 1177,
									"src": "8838:795:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "10008:274:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "10022:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "10018:87:4",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "10040:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 749,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 748,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "10061:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 754,
															"nodeType": "RevertStatement",
															"src": "10054:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "10114:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "10146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "10150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 759,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "10138:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10184:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 769,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "10180:96:4",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "10213:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 775,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 774,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "10234:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 780,
															"nodeType": "RevertStatement",
															"src": "10227:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "9970:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:4"
									},
									"scope": 1177,
									"src": "9955:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "10690:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10710:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "10714:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 792,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															799,
															825
														],
														"referencedDeclaration": 825,
														"src": "10700:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:4"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10652:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:4"
									},
									"scope": 1177,
									"src": "10633:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "11038:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11054:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11058:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "11048:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11111:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11115:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 821,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "11124:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "11076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:4"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "10973:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "10985:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "11002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:4"
									},
									"scope": 1177,
									"src": "10954:182:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "11503:186:4",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "11513:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 839,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "11537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "11591:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "11587:96:4",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "11620:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "11664:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 851,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "11641:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "RevertStatement",
															"src": "11634:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "11477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:4"
									},
									"scope": 1177,
									"src": "11462:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "12084:389:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "12098:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 869,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "12094:87:4",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "12116:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 875,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 874,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "12137:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "RevertStatement",
															"src": "12130:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "12190:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 883,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"id": 886,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "12222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "12226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 885,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "12214:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "12260:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 895,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "12362:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 906,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "12379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 915,
													"nodeType": "IfStatement",
													"src": "12358:109:4",
													"trueBody": {
														"id": 914,
														"nodeType": "Block",
														"src": "12385:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 909,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "12427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 910,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 865,
																			"src": "12433:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 911,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "12442:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 908,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "12406:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 913,
																"nodeType": "RevertStatement",
																"src": "12399:57:4"
															}
														]
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "12256:211:4",
												"trueBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "12289:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 901,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "12333:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 900,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "12310:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "RevertStatement",
															"src": "12303:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12046:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12058:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:4"
									},
									"scope": 1177,
									"src": "12013:460:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13481:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13505:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "13511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "13515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 928,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															962
														],
														"referencedDeclaration": 962,
														"src": "13491:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13443:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:4"
									},
									"scope": 1177,
									"src": "13406:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "13873:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13899:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 948,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "13883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13950:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 954,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "13921:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:4"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13820:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13837:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:4"
									},
									"scope": 1177,
									"src": "13771:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "14488:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "14507:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "14511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 975,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "14520:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 972,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "14498:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:4"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14436:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14465:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:4"
									},
									"scope": 1177,
									"src": "14418:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14814:568:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "14880:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 993,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "14893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "14876:460:4",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "14913:423:4",
													"statements": [
														{
															"assignments": [
																1001
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1001,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1037,
																	"src": "14927:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1005,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "14957:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1002,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "14943:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1006,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15093:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1007,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1012,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "15115:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1013,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15124:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "15150:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "15157:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1016,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "15133:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1027,
															"nodeType": "IfStatement",
															"src": "15089:142:4",
															"trueBody": {
																"id": 1026,
																"nodeType": "Block",
																"src": "15164:67:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1023,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "15211:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1022,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "15189:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1025,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1028,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "15249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1036,
															"nodeType": "IfStatement",
															"src": "15245:81:4",
															"trueBody": {
																"id": 1035,
																"nodeType": "Block",
																"src": "15260:66:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1030,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "15292:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1031,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "15299:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1032,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 985,
																					"src": "15303:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1029,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1202,
																				"src": "15283:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1034,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1039,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "15346:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "15362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1042,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "15373:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:4"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14738:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14781:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:4"
									},
									"scope": 1177,
									"src": "14720:662:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "15684:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "15698:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1057,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "15694:91:4",
												"trueBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "15722:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "15765:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1062,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "15743:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1065,
															"nodeType": "RevertStatement",
															"src": "15736:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1068,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "15794:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1071,
															"indexExpression": {
																"id": 1069,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "15813:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1072,
														"indexExpression": {
															"id": 1070,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "15820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1073,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "15832:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1077,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "15870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "15877:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "15887:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1076,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "15855:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "15850:46:4"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15619:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15634:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:4"
									},
									"scope": 1177,
									"src": "15591:312:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "16210:169:4",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "16220:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1091,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "16245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "16236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "16267:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "16263:88:4",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "16288:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "16332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1103,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "16309:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "16302:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1109,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1092,
													"src": "16367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1110,
												"nodeType": "Return",
												"src": "16360:12:4"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:4"
									},
									"scope": 1177,
									"src": "16138:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "17020:680:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1124,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "17034:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "17030:664:4",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "17054:640:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1153,
																		"nodeType": "Block",
																		"src": "17168:162:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1142,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "17190:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1143,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1312,
																								"src": "17200:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1144,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1311,
																							"src": "17200:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1145,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1152,
																				"nodeType": "IfStatement",
																				"src": "17186:130:4",
																				"trueBody": {
																					"id": 1151,
																					"nodeType": "Block",
																					"src": "17243:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1148,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17294:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1147,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17272:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1150,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1154,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1141,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1140,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1154,
																				"src": "17153:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1139,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:4"
																	},
																	"src": "17144:186:4"
																},
																{
																	"block": {
																		"id": 1170,
																		"nodeType": "Block",
																		"src": "17359:325:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1158,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1156,
																							"src": "17381:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1168,
																					"nodeType": "Block",
																					"src": "17480:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "17566:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:4"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:4"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1167,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:4"
																						}
																					]
																				},
																				"id": 1169,
																				"nodeType": "IfStatement",
																				"src": "17377:293:4",
																				"trueBody": {
																					"id": 1166,
																					"nodeType": "Block",
																					"src": "17401:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1163,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17452:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1162,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17430:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1164,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1165,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1171,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1157,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1156,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1171,
																				"src": "17338:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:4"
																	},
																	"src": "17331:353:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1133,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1894,
																			"src": "17109:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1135,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "17123:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "17129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "17138:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1130,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "17088:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1129,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1312,
																			"src": "17072:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1312",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1311,
																	"src": "17072:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1172,
															"nodeType": "TryStatement",
															"src": "17068:616:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16950:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16964:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16976:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16993:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:4"
									},
									"scope": 1177,
									"src": "16918:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1178,
							"src": "776:16926:4",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "107:17596:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2203
						],
						"IERC721": [
							1294
						]
					},
					"id": 1295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 2204,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1180,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2203,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1183,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2203,
										"src": "287:7:5"
									},
									"id": 1184,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1182,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1294,
							"linearizedBaseContracts": [
								1294,
								2203
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1193,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1202,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1211,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1294,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1294,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1294,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1294,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1294,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1294,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1294,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1294,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1294,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1295,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1297,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "867:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "915:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "940:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:6"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "984:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:6"
									},
									"scope": 1312,
									"src": "832:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1313,
							"src": "295:699:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							1177
						],
						"ERC721Enumerable": [
							1696
						],
						"IERC165": [
							2203
						],
						"IERC721Enumerable": [
							1854
						]
					},
					"id": 1697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1697,
							"sourceUnit": 1178,
							"src": "154:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1177,
										"src": "162:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1697,
							"sourceUnit": 1855,
							"src": "192:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1317,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1854,
										"src": "200:17:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1697,
							"sourceUnit": 2192,
							"src": "251:64:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1319,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2203,
										"src": "259:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1322,
										"name": "ERC721",
										"nameLocations": [
											"746:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "746:6:7"
									},
									"id": 1323,
									"nodeType": "InheritanceSpecifier",
									"src": "746:6:7"
								},
								{
									"baseName": {
										"id": 1324,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"754:17:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1854,
										"src": "754:17:7"
									},
									"id": 1325,
									"nodeType": "InheritanceSpecifier",
									"src": "754:17:7"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1321,
								"nodeType": "StructuredDocumentation",
								"src": "317:390:7",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 1696,
							"linearizedBaseContracts": [
								1696,
								1854,
								1177,
								121,
								1882,
								1294,
								2191,
								2203,
								1912
							],
							"name": "ERC721Enumerable",
							"nameLocation": "726:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1331,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "846:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1696,
									"src": "778:80:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1330,
										"keyName": "owner",
										"keyNameLocation": "794:5:7",
										"keyType": {
											"id": 1326,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:59:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1329,
											"keyName": "index",
											"keyNameLocation": "819:5:7",
											"keyType": {
												"id": 1327,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "803:33:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1328,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "828:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1335,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "908:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1696,
									"src": "864:61:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1334,
										"keyName": "tokenId",
										"keyNameLocation": "880:7:7",
										"keyType": {
											"id": 1332,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "864:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1333,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "891:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1338,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "950:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1696,
									"src": "932:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1336,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1337,
										"nodeType": "ArrayTypeName",
										"src": "932:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1342,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1010:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1696,
									"src": "966:59:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1341,
										"keyName": "tokenId",
										"keyNameLocation": "982:7:7",
										"keyType": {
											"id": 1339,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "974:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "966:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1340,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "1032:168:7",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1349,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1211:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1257:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1249:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:30:7"
									},
									"src": "1205:59:7"
								},
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "1270:50:7",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1352,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1331:34:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:7"
									},
									"src": "1325:43:7"
								},
								{
									"baseFunctions": [
										269,
										2202
									],
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "1543:114:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1363,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "1560:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1365,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "1580:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1854_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1854_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1364,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1575:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1575:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1854",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1599:11:7",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1575:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1560:50:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "1638:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1614:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1696_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1620:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "1614:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1614:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1560:90:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1362,
												"id": 1374,
												"nodeType": "Return",
												"src": "1553:97:7"
											}
										]
									},
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "1374:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1444:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1359,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1357,
												"name": "IERC165",
												"nameLocations": [
													"1511:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2203,
												"src": "1511:7:7"
											},
											{
												"id": 1358,
												"name": "ERC721",
												"nameLocations": [
													"1520:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1520:6:7"
											}
										],
										"src": "1502:25:7"
									},
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1469:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1462:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1462:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:20:7"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1537:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1537:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:6:7"
									},
									"scope": 1696,
									"src": "1435:222:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1845
									],
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "1833:158:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1386,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "1847:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1388,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "1866:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1387,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "1856:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1856:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1847:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1397,
												"nodeType": "IfStatement",
												"src": "1843:99:7",
												"trueBody": {
													"id": 1396,
													"nodeType": "Block",
													"src": "1874:68:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1392,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "1918:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1393,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "1925:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1391,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "1895:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1895:36:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1395,
															"nodeType": "RevertStatement",
															"src": "1888:43:7"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1398,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "1958:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1400,
														"indexExpression": {
															"id": 1399,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "1971:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1958:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1402,
													"indexExpression": {
														"id": 1401,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "1978:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1403,
												"nodeType": "Return",
												"src": "1951:33:7"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "1663:68:7",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1745:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1773:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "1765:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1788:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "1780:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:30:7"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "1824:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:7"
									},
									"scope": 1696,
									"src": "1736:255:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1835
									],
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2123:41:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1411,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2140:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2151:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2140:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1413,
												"nodeType": "Return",
												"src": "2133:24:7"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "1997:60:7",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2071:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:7"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2114:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:7"
									},
									"scope": 1696,
									"src": "2062:102:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1853
									],
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "2311:151:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1423,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "2325:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1424,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "2334:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2325:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "IfStatement",
												"src": "2321:101:7",
												"trueBody": {
													"id": 1435,
													"nodeType": "Block",
													"src": "2349:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2401:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2393:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1428,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2393:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2393:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1432,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "2405:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1427,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "2370:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2370:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1434,
															"nodeType": "RevertStatement",
															"src": "2363:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1437,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2438:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1439,
													"indexExpression": {
														"id": 1438,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "2449:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2438:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1422,
												"id": 1440,
												"nodeType": "Return",
												"src": "2431:24:7"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "2170:61:7",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2245:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2266:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2258:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:7"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2302:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:9:7"
									},
									"scope": 1696,
									"src": "2236:226:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734
									],
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "2622:521:7",
										"statements": [
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2640:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "2632:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"initialValue": {
													"arguments": [
														{
															"id": 1459,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "2670:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1460,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "2674:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1461,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "2683:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1457,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2656:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1696_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2662:7:7",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "2656:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:56:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1464,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "2703:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2728:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2720:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2720:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2720:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2703:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1475,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "2807:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1476,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "2824:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2807:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1484,
													"nodeType": "IfStatement",
													"src": "2803:106:7",
													"trueBody": {
														"id": 1483,
														"nodeType": "Block",
														"src": "2828:81:7",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1479,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "2875:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1480,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "2890:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1478,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "2842:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2842:56:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1482,
																"nodeType": "ExpressionStatement",
																"src": "2842:56:7"
															}
														]
													}
												},
												"id": 1485,
												"nodeType": "IfStatement",
												"src": "2699:210:7",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "2732:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1471,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "2778:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1470,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "2746:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "2746:40:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1486,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "2922:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2936:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2928:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1487,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2928:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2928:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2922:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1497,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "3020:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "3037:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3020:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1506,
													"nodeType": "IfStatement",
													"src": "3016:90:7",
													"trueBody": {
														"id": 1505,
														"nodeType": "Block",
														"src": "3041:65:7",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1501,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1445,
																			"src": "3083:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1502,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "3087:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1500,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "3055:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3055:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1504,
																"nodeType": "ExpressionStatement",
																"src": "3055:40:7"
															}
														]
													}
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "2918:188:7",
												"trueBody": {
													"id": 1496,
													"nodeType": "Block",
													"src": "2940:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1493,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "2991:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1492,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "2954:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:45:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1495,
															"nodeType": "ExpressionStatement",
															"src": "2954:45:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1508,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1456,
													"src": "3123:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1454,
												"id": 1509,
												"nodeType": "Return",
												"src": "3116:20:7"
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "2468:45:7",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2527:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1451,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2595:8:7"
									},
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2543:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2535:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2555:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2547:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2572:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2564:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:43:7"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "2613:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:9:7"
									},
									"scope": 1696,
									"src": "2518:625:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "3511:140:7",
										"statements": [
											{
												"assignments": [
													1520
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3529:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "3521:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1522,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "3548:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1521,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "3538:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3538:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3554:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3538:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:34:7"
											},
											{
												"expression": {
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1527,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "3565:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1530,
															"indexExpression": {
																"id": 1528,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "3578:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3565:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1531,
														"indexExpression": {
															"id": 1529,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3582:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3565:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1532,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "3592:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3565:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "3565:34:7"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1535,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "3609:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1537,
														"indexExpression": {
															"id": 1536,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "3627:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3609:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1538,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "3638:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "3609:35:7"
											}
										]
									},
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "3149:283:7",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3446:27:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3474:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3494:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3486:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:29:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:0:7"
									},
									"scope": 1696,
									"src": "3437:214:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "3912:95:7",
										"statements": [
											{
												"expression": {
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1548,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "3922:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1550,
														"indexExpression": {
															"id": 1549,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "3938:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3922:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1551,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3949:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3949:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3922:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "3922:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1558,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "3992:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1555,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3976:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3987:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3976:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "3976:24:7"
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "3657:184:7",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3855:31:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3895:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "3887:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:17:7"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:7"
									},
									"scope": 1696,
									"src": "3846:161:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "4705:878:7",
										"statements": [
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4894:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1621,
														"src": "4886:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1570,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4886:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"arguments": [
														{
															"id": 1573,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "4921:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1572,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "4911:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4886:40:7"
											},
											{
												"assignments": [
													1577
												],
												"declarations": [
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "4944:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1621,
														"src": "4936:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1581,
												"initialValue": {
													"baseExpression": {
														"id": 1578,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "4957:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1580,
													"indexExpression": {
														"id": 1579,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "4975:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4957:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:47:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1582,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "5087:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1583,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "5101:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5087:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "5083:323:7",
												"trueBody": {
													"id": 1607,
													"nodeType": "Block",
													"src": "5117:289:7",
													"statements": [
														{
															"assignments": [
																1586
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1586,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5139:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1607,
																	"src": "5131:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1585,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5131:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1592,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1587,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1331,
																		"src": "5153:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1589,
																	"indexExpression": {
																		"id": 1588,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "5166:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5153:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1591,
																"indexExpression": {
																	"id": 1590,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "5172:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5153:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5131:56:7"
														},
														{
															"expression": {
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1593,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "5202:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1596,
																		"indexExpression": {
																			"id": 1594,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1565,
																			"src": "5215:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5202:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1597,
																	"indexExpression": {
																		"id": 1595,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "5221:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5202:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1598,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "5235:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5202:44:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1600,
															"nodeType": "ExpressionStatement",
															"src": "5202:44:7"
														},
														{
															"expression": {
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1601,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "5318:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1603,
																	"indexExpression": {
																		"id": 1602,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "5336:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5318:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1604,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "5351:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5318:43:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1606,
															"nodeType": "ExpressionStatement",
															"src": "5318:43:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5492:33:7",
													"subExpression": {
														"baseExpression": {
															"id": 1609,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "5499:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1611,
														"indexExpression": {
															"id": 1610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "5517:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5499:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "5492:33:7"
											},
											{
												"expression": {
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5535:41:7",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1614,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "5542:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1616,
															"indexExpression": {
																"id": 1615,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "5555:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5542:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1618,
														"indexExpression": {
															"id": 1617,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "5561:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5542:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "5535:41:7"
											}
										]
									},
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "4013:606:7",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4633:32:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4674:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "4666:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4688:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "4680:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:31:7"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4705:0:7"
									},
									"scope": 1696,
									"src": "4624:959:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "5942:990:7",
										"statements": [
											{
												"assignments": [
													1629
												],
												"declarations": [
													{
														"constant": false,
														"id": 1629,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6128:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "6120:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6120:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1630,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "6145:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6156:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6145:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6165:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6145:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6120:46:7"
											},
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6184:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "6176:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6176:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"baseExpression": {
														"id": 1637,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "6197:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1639,
													"indexExpression": {
														"id": 1638,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "6213:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6197:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6176:45:7"
											},
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6551:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "6543:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6543:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1646,
												"initialValue": {
													"baseExpression": {
														"id": 1643,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "6565:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1645,
													"indexExpression": {
														"id": 1644,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "6576:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6565:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6543:48:7"
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1647,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "6602:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1649,
														"indexExpression": {
															"id": 1648,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "6613:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6602:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1650,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "6627:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6602:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "6602:36:7"
											},
											{
												"expression": {
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1653,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "6706:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1655,
														"indexExpression": {
															"id": 1654,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "6722:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6706:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1656,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "6737:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6706:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "6706:41:7"
											},
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6868:31:7",
													"subExpression": {
														"baseExpression": {
															"id": 1659,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "6875:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1661,
														"indexExpression": {
															"id": 1660,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "6891:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6875:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "6868:31:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1664,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "6909:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6920:3:7",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6909:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "6909:16:7"
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "5589:277:7",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5880:36:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5925:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "5917:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:17:7"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:7"
									},
									"scope": 1696,
									"src": "5871:1061:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										644
									],
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "7134:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1679,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "7148:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7157:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7148:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1686,
												"nodeType": "IfStatement",
												"src": "7144:84:7",
												"trueBody": {
													"id": 1685,
													"nodeType": "Block",
													"src": "7160:68:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1682,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "7181:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7181:36:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1684,
															"nodeType": "RevertStatement",
															"src": "7174:43:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1690,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "7260:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1691,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "7269:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1687,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7237:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1696_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7243:16:7",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 644,
														"src": "7237:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "7237:39:7"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "6938:106:7",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7058:16:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1677,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7125:8:7"
									},
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7083:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "7075:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7100:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "7092:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1674,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7092:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7074:33:7"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:7"
									},
									"scope": 1696,
									"src": "7049:234:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1697,
							"src": "708:6577:7",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120,
								1349,
								1352
							],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "128:7158:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1822
						],
						"IERC165": [
							2203
						],
						"IERC4906": [
							27
						],
						"Strings": [
							2167
						]
					},
					"id": 1823,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1698,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1823,
							"sourceUnit": 1178,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1699,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1177,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1702,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1823,
							"sourceUnit": 2168,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1701,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2167,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1704,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1823,
							"sourceUnit": 28,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1703,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 27,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1823,
							"sourceUnit": 4,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1705,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2203,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1708,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 27,
										"src": "469:8:8"
									},
									"id": 1709,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:8"
								},
								{
									"baseName": {
										"id": 1710,
										"name": "ERC721",
										"nameLocations": [
											"479:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "479:6:8"
									},
									"id": 1711,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1707,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1822,
							"linearizedBaseContracts": [
								1822,
								1177,
								121,
								1882,
								27,
								1294,
								2191,
								2203,
								1912
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1714,
									"libraryName": {
										"id": 1712,
										"name": "Strings",
										"nameLocations": [
											"498:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2167,
										"src": "498:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:8",
									"typeName": {
										"id": 1713,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1720,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1822,
									"src": "706:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1715,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1718,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1717,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1716,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1724,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1822,
									"src": "817:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1723,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:8",
										"keyType": {
											"id": 1721,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1722,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										269,
										2202
									],
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "1045:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1735,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "1062:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1736,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "1077:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1740,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "1125:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1738,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1822_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "1101:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1743,
												"nodeType": "Return",
												"src": "1055:82:8"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1731,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1729,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1013:6:8"
											},
											{
												"id": 1730,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2203,
												"src": "1021:7:8"
											}
										],
										"src": "1004:25:8"
									},
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "964:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:8"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1039:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:8"
									},
									"scope": 1822,
									"src": "937:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "1298:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1755,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "1322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1754,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1308:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:8"
											},
											{
												"assignments": [
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1801,
														"src": "1341:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1758,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1763,
												"initialValue": {
													"baseExpression": {
														"id": 1760,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "1367:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1762,
													"indexExpression": {
														"id": 1761,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "1378:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:8"
											},
											{
												"assignments": [
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1765,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1801,
														"src": "1396:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1764,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1768,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1766,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1417:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1771,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1765,
																	"src": "1506:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1769,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1779,
												"nodeType": "IfStatement",
												"src": "1496:70:8",
												"trueBody": {
													"id": 1778,
													"nodeType": "Block",
													"src": "1525:41:8",
													"statements": [
														{
															"expression": {
																"id": 1776,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "1546:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1753,
															"id": 1777,
															"nodeType": "Return",
															"src": "1539:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1782,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "1671:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1780,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1795,
												"nodeType": "IfStatement",
												"src": "1661:95:8",
												"trueBody": {
													"id": 1794,
													"nodeType": "Block",
													"src": "1694:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1790,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "1729:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1791,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "1735:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1787,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1753,
															"id": 1793,
															"nodeType": "Return",
															"src": "1708:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1798,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "1788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1796,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1822_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "1773:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1800,
												"nodeType": "Return",
												"src": "1766:30:8"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1750,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:8"
									},
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "1228:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:8"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "1283:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1751,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:8"
									},
									"scope": 1822,
									"src": "1210:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "2003:86:8",
										"statements": [
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1810,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "2013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1812,
														"indexExpression": {
															"id": 1811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "2024:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1813,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "2035:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1817,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "2074:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1816,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2059:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "EmitStatement",
												"src": "2054:28:8"
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "1944:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "1961:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:8"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:8"
									},
									"scope": 1822,
									"src": "1922:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1823,
							"src": "431:1660:8",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "128:1964:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						],
						"IERC721Enumerable": [
							1854
						]
					},
					"id": 1855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1824,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1855,
							"sourceUnit": 1295,
							"src": "155:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1825,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "163:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1828,
										"name": "IERC721",
										"nameLocations": [
											"364:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "364:7:9"
									},
									"id": 1829,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:9"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1827,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1854,
							"linearizedBaseContracts": [
								1854,
								1294,
								2203
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:9",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:9"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "511:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:9"
									},
									"scope": 1854,
									"src": "465:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:9",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "731:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "746:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:9"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "784:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:9"
									},
									"scope": 1854,
									"src": "702:91:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:9",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "990:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:9"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1028:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:9"
									},
									"scope": 1854,
									"src": "968:69:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1855,
							"src": "333:706:9",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "129:911:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						],
						"IERC721Metadata": [
							1882
						]
					},
					"id": 1883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 1295,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1857,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1860,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "357:7:10"
									},
									"id": 1861,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1859,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1882,
							"linearizedBaseContracts": [
								1882,
								1294,
								2203
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1867,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1864,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 1882,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 1882,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1878,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 1882,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1883,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts@5.0.2/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1912
						]
					},
					"id": 1913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1884,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1885,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1912,
							"linearizedBaseContracts": [
								1912
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1890,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1889,
												"id": 1892,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1912,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1902,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1899,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1898,
												"id": 1901,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1912,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1907,
												"id": 1909,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1912,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1913,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts@5.0.2/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3257
						],
						"SignedMath": [
							3362
						],
						"Strings": [
							2167
						]
					},
					"id": 2168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2168,
							"sourceUnit": 3258,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1915,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3257,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1918,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2168,
							"sourceUnit": 3363,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1917,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3362,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1919,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2167,
							"linearizedBaseContracts": [
								2167
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1922,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2167,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1920,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1921,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1925,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2167,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1923,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1924,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1932,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1978,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1941
														],
														"declarations": [
															{
																"constant": false,
																"id": 1941,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1978,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1940,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1948,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1944,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1942,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3257,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3257_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3077,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1950
														],
														"declarations": [
															{
																"constant": false,
																"id": 1950,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1978,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1949,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1955,
														"initialValue": {
															"arguments": [
																{
																	"id": 1953,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1951,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1957
														],
														"declarations": [
															{
																"constant": false,
																"id": 1957,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1978,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1956,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1958,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1950,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1941,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1957,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1959,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1974,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1961,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1957,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1963,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1922,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1957,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1935,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1964,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1965,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1968,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1969,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1973,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1972,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1975,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1976,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1939,
														"id": 1977,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 2167,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1983,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2000,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1983,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1998,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3362,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3362_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3361,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1997,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1980,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1988,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1987,
												"id": 2004,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1982,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1985,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 2167,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2025,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 2024,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2015,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2018,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2009,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2016,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3257,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3257_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3199,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2014,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2026,
																	2109,
																	2129
																],
																"referencedDeclaration": 2109,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2013,
														"id": 2023,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2011,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 2167,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													2037
												],
												"declarations": [
													{
														"constant": false,
														"id": 2037,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2108,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"id": 2038,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2029,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													2041
												],
												"declarations": [
													{
														"constant": false,
														"id": 2041,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2108,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2040,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2050,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2045,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2031,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2042,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2051,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2053,
														"indexExpression": {
															"hexValue": "30",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2057,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2059,
														"indexExpression": {
															"hexValue": "31",
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 2091,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2077,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2079,
																	"indexExpression": {
																		"id": 2078,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2080,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2084,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2081,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2037,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2086,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2087,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2090,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2071,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2092,
												"initializationExpression": {
													"assignments": [
														2064
													],
													"declarations": [
														{
															"constant": false,
															"id": 2064,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2092,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2063,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2070,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2066,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2031,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"loopExpression": {
													"expression": {
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 2074,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2076,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2093,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2102,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 2101,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2097,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2029,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2098,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2031,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2096,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2100,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2105,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2103,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2035,
												"id": 2107,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2033,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 2167,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2128,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2122,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2112,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2120,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2118,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2125,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2117,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2026,
															2109,
															2129
														],
														"referencedDeclaration": 2109,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2116,
												"id": 2127,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2114,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 2167,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2141,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2139,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2146,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2144,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2153,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2132,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2151,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2150,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2159,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2134,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2157,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2156,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2138,
												"id": 2164,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 2167,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2168,
							"src": "251:2847:12",
							"usedErrors": [
								1932
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2191
						],
						"IERC165": [
							2203
						]
					},
					"id": 2192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2192,
							"sourceUnit": 2204,
							"src": "140:38:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2170,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2203,
										"src": "148:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2173,
										"name": "IERC165",
										"nameLocations": [
											"687:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2203,
										"src": "687:7:13"
									},
									"id": 2174,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2172,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2191,
							"linearizedBaseContracts": [
								2191,
								2203
							],
							"name": "ERC165",
							"nameLocation": "677:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2202
									],
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "844:64:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2182,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "861:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2184,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2203_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2203_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2183,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2203",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:13",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2181,
												"id": 2188,
												"nodeType": "Return",
												"src": "854:47:13"
											}
										]
									},
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "789:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2176,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:13"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "838:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:13"
									},
									"scope": 2191,
									"src": "762:146:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2192,
							"src": "659:251:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2203
						]
					},
					"id": 2204,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2194,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:14",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2203,
							"linearizedBaseContracts": [
								2203
							],
							"name": "IERC165",
							"nameLocation": "431:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:14",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "817:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2196,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:14"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "860:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:14"
									},
									"scope": 2203,
									"src": "790:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2204,
							"src": "421:447:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts@5.0.2/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3257
						]
					},
					"id": 3258,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2206,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:15",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3257,
							"linearizedBaseContracts": [
								3257
							],
							"name": "Math",
							"nameLocation": "211:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:15",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2209,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:15"
									},
									"src": "277:29:15"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2214,
									"members": [
										{
											"id": 2210,
											"name": "Floor",
											"nameLocation": "336:5:15",
											"nodeType": "EnumValue",
											"src": "336:5:15"
										},
										{
											"id": 2211,
											"name": "Ceil",
											"nameLocation": "379:4:15",
											"nodeType": "EnumValue",
											"src": "379:4:15"
										},
										{
											"id": 2212,
											"name": "Trunc",
											"nameLocation": "421:5:15",
											"nodeType": "EnumValue",
											"src": "421:5:15"
										},
										{
											"id": 2213,
											"name": "Expand",
											"nameLocation": "451:6:15",
											"nodeType": "EnumValue",
											"src": "451:6:15"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:15",
									"nodeType": "EnumDefinition",
									"src": "312:169:15"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "661:140:15",
										"statements": [
											{
												"id": 2244,
												"nodeType": "UncheckedBlock",
												"src": "671:124:15",
												"statements": [
													{
														"assignments": [
															2227
														],
														"declarations": [
															{
																"constant": false,
																"id": 2227,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2244,
																"src": "695:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2231,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2228,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "707:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "711:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2232,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2227,
																"src": "730:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2233,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "734:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2239,
														"nodeType": "IfStatement",
														"src": "726:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2225,
															"id": 2238,
															"nodeType": "Return",
															"src": "737:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2241,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "782:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2242,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2225,
														"id": 2243,
														"nodeType": "Return",
														"src": "768:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:15",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "612:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:15"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "646:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "652:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:15"
									},
									"scope": 3257,
									"src": "585:216:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "984:113:15",
										"statements": [
											{
												"id": 2272,
												"nodeType": "UncheckedBlock",
												"src": "994:97:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "1022:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2259,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "1026:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2265,
														"nodeType": "IfStatement",
														"src": "1018:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2257,
															"id": 2264,
															"nodeType": "Return",
															"src": "1029:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2267,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "1074:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2268,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2251,
																		"src": "1078:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2270,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2257,
														"id": 2271,
														"nodeType": "Return",
														"src": "1060:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:15",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "924:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "935:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:15"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "969:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "975:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:15"
									},
									"scope": 3257,
									"src": "908:189:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2315,
										"nodeType": "Block",
										"src": "1283:417:15",
										"statements": [
											{
												"id": 2314,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2286,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "1551:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2293,
														"nodeType": "IfStatement",
														"src": "1547:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2285,
															"id": 2292,
															"nodeType": "Return",
															"src": "1559:16:15"
														}
													},
													{
														"assignments": [
															2295
														],
														"declarations": [
															{
																"constant": false,
																"id": 2295,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2314,
																"src": "1589:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2294,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2299,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2296,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "1601:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2297,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2279,
																"src": "1605:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2300,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "1624:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2301,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "1628:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2303,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2279,
																"src": "1633:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2309,
														"nodeType": "IfStatement",
														"src": "1620:33:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2307,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2285,
															"id": 2308,
															"nodeType": "Return",
															"src": "1636:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2311,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "1681:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2312,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2285,
														"id": 2313,
														"nodeType": "Return",
														"src": "1667:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:15",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "1223:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "1234:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:15"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "1268:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "1274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:15"
									},
									"scope": 3257,
									"src": "1207:493:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2343,
										"nodeType": "Block",
										"src": "1887:114:15",
										"statements": [
											{
												"id": 2342,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2328,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2321,
																"src": "1925:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2335,
														"nodeType": "IfStatement",
														"src": "1921:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2333,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2327,
															"id": 2334,
															"nodeType": "Return",
															"src": "1933:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2337,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2319,
																		"src": "1978:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2338,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "1982:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2340,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2327,
														"id": 2341,
														"nodeType": "Return",
														"src": "1964:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2317,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:15",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "1827:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "1838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:15"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "1872:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "1878:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:15"
									},
									"scope": 3257,
									"src": "1811:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2371,
										"nodeType": "Block",
										"src": "2198:114:15",
										"statements": [
											{
												"id": 2370,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2356,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2349,
																"src": "2236:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2363,
														"nodeType": "IfStatement",
														"src": "2232:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2355,
															"id": 2362,
															"nodeType": "Return",
															"src": "2244:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2365,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "2289:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2366,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2349,
																		"src": "2293:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2368,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2355,
														"id": 2369,
														"nodeType": "Return",
														"src": "2275:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2345,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:15",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "2138:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "2149:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:15"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "2183:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "2189:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:15"
									},
									"scope": 3257,
									"src": "2122:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "2449:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2382,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "2466:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2383,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2377,
															"src": "2470:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2386,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "2478:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:15",
													"trueExpression": {
														"id": 2385,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "2474:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2381,
												"id": 2388,
												"nodeType": "Return",
												"src": "2459:20:15"
											}
										]
									},
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:15",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2395:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2406:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:15"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "2440:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:15"
									},
									"scope": 3257,
									"src": "2382:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "2624:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2400,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "2641:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2401,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2395,
															"src": "2645:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2404,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "2653:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:15",
													"trueExpression": {
														"id": 2403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "2649:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2399,
												"id": 2406,
												"nodeType": "Return",
												"src": "2634:20:15"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:15",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "2570:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "2581:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:15"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "2615:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:15"
									},
									"scope": 3257,
									"src": "2557:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2430,
										"nodeType": "Block",
										"src": "2845:82:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2418,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "2900:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2419,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "2904:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2421,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2422,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2411,
																		"src": "2910:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2423,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2413,
																		"src": "2914:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2425,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2417,
												"id": 2429,
												"nodeType": "Return",
												"src": "2892:28:15"
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:15",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "2791:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "2802:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:15"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "2836:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:15"
									},
									"scope": 3257,
									"src": "2774:153:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "3219:260:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2441,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "3233:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2449,
												"nodeType": "IfStatement",
												"src": "3229:127:15",
												"trueBody": {
													"id": 2448,
													"nodeType": "Block",
													"src": "3241:115:15",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2444,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2434,
																	"src": "3340:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2445,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "3344:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2440,
															"id": 2447,
															"nodeType": "Return",
															"src": "3333:12:15"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2450,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2434,
															"src": "3444:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2454,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2434,
																			"src": "3458:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2457,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2458,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2436,
																"src": "3467:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:15",
													"trueExpression": {
														"hexValue": "30",
														"id": 2453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2440,
												"id": 2463,
												"nodeType": "Return",
												"src": "3437:35:15"
											}
										]
									},
									"documentation": {
										"id": 2432,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:15",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3165:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3176:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:15"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:15"
									},
									"scope": 3257,
									"src": "3148:331:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2590,
										"nodeType": "Block",
										"src": "3901:4018:15",
										"statements": [
											{
												"id": 2589,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:15",
												"statements": [
													{
														"assignments": [
															2478
														],
														"declarations": [
															{
																"constant": false,
																"id": 2478,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2589,
																"src": "4232:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2477,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2482,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2479,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "4248:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2480,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2470,
																"src": "4252:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:15"
													},
													{
														"assignments": [
															2484
														],
														"declarations": [
															{
																"constant": false,
																"id": 2484,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2589,
																"src": "4312:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2483,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2485,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:15"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:15"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:15"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:15"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:15"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:15"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2478,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2478,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2484,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2470,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:15",
																"valueSize": 1
															}
														],
														"id": 2486,
														"nodeType": "InlineAssembly",
														"src": "4383:131:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2487,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2484,
																"src": "4595:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2495,
														"nodeType": "IfStatement",
														"src": "4591:368:15",
														"trueBody": {
															"id": 2494,
															"nodeType": "Block",
															"src": "4607:352:15",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2490,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2478,
																			"src": "4925:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2491,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2472,
																			"src": "4933:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2476,
																	"id": 2493,
																	"nodeType": "Return",
																	"src": "4918:26:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2496,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "5065:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2497,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2484,
																"src": "5080:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2503,
														"nodeType": "IfStatement",
														"src": "5061:88:15",
														"trueBody": {
															"id": 2502,
															"nodeType": "Block",
															"src": "5087:62:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2499,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "5112:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2501,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:15"
																}
															]
														}
													},
													{
														"assignments": [
															2505
														],
														"declarations": [
															{
																"constant": false,
																"id": 2505,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:15",
																"nodeType": "VariableDeclaration",
																"scope": 2589,
																"src": "5404:17:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2504,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2506,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:15"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:15",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:15"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:15"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:15"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:15"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:15"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:15"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:15"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:15"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2472,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2478,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2478,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2478,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2484,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2484,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2505,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2505,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2505,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2470,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:15",
																"valueSize": 1
															}
														],
														"id": 2507,
														"nodeType": "InlineAssembly",
														"src": "5435:300:15"
													},
													{
														"assignments": [
															2509
														],
														"declarations": [
															{
																"constant": false,
																"id": 2509,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 2589,
																"src": "5939:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2508,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2516,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2510,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "5954:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2512,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2472,
																			"src": "5973:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2514,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:15"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:15",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:15"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:15"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:15"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:15"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:15"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:15",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:15"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:15"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2472,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2472,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2478,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2478,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2509,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2509,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2509,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2509,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2509,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:15",
																"valueSize": 1
															}
														],
														"id": 2517,
														"nodeType": "InlineAssembly",
														"src": "5999:371:15"
													},
													{
														"expression": {
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2518,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "6436:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2519,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "6445:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2520,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "6453:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2523,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:15"
													},
													{
														"assignments": [
															2525
														],
														"declarations": [
															{
																"constant": false,
																"id": 2525,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 2589,
																"src": "6775:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2532,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2527,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2472,
																			"src": "6798:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2529,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:15"
													},
													{
														"expression": {
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2533,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "7031:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2535,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "7046:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2536,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "7060:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2540,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:15"
													},
													{
														"expression": {
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2541,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "7100:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2543,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "7115:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2544,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "7129:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2548,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:15"
													},
													{
														"expression": {
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2549,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "7170:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2551,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "7185:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2552,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "7199:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2556,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:15"
													},
													{
														"expression": {
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2557,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "7240:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2559,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "7255:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2560,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "7269:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2564,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:15"
													},
													{
														"expression": {
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2565,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "7310:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2567,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "7325:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2568,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "7339:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2572,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:15"
													},
													{
														"expression": {
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2573,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "7381:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2575,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "7396:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2576,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2525,
																		"src": "7410:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2580,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:15"
													},
													{
														"expression": {
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2581,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "7851:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2582,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "7860:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2583,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2525,
																	"src": "7868:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2586,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:15"
													},
													{
														"expression": {
															"id": 2587,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2475,
															"src": "7896:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2476,
														"id": 2588,
														"nodeType": "Return",
														"src": "7889:13:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:15",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "3819:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "3830:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "3841:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:15"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "3885:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:15"
									},
									"scope": 3257,
									"src": "3803:4116:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2633,
										"nodeType": "Block",
										"src": "8161:192:15",
										"statements": [
											{
												"assignments": [
													2607
												],
												"declarations": [
													{
														"constant": false,
														"id": 2607,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2633,
														"src": "8171:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2613,
												"initialValue": {
													"arguments": [
														{
															"id": 2609,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "8195:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2610,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "8198:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2611,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "8201:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2608,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2591,
															2634
														],
														"referencedDeclaration": 2591,
														"src": "8188:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2615,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2601,
																"src": "8244:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2214",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2214",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2614,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3256,
															"src": "8227:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2214_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2618,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2594,
																	"src": "8264:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2619,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "8267:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2620,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2598,
																	"src": "8270:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2617,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2630,
												"nodeType": "IfStatement",
												"src": "8223:101:15",
												"trueBody": {
													"id": 2629,
													"nodeType": "Block",
													"src": "8288:36:15",
													"statements": [
														{
															"expression": {
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2625,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2607,
																	"src": "8302:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2628,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2631,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2607,
													"src": "8340:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2605,
												"id": 2632,
												"nodeType": "Return",
												"src": "8333:13:15"
											}
										]
									},
									"documentation": {
										"id": 2592,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:15",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "8067:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "8078:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "8089:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "8110:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2599,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "8110:8:15"
													},
													"referencedDeclaration": 2214,
													"src": "8110:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:15"
									},
									"returnParameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "8152:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:15"
									},
									"scope": 3257,
									"src": "8051:302:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2745,
										"nodeType": "Block",
										"src": "8644:1585:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2642,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2637,
														"src": "8658:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2648,
												"nodeType": "IfStatement",
												"src": "8654:45:15",
												"trueBody": {
													"id": 2647,
													"nodeType": "Block",
													"src": "8666:33:15",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2641,
															"id": 2646,
															"nodeType": "Return",
															"src": "8680:8:15"
														}
													]
												}
											},
											{
												"assignments": [
													2650
												],
												"declarations": [
													{
														"constant": false,
														"id": 2650,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2745,
														"src": "9378:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2649,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2659,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2653,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2637,
																			"src": "9406:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2652,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2913,
																			2948
																		],
																		"referencedDeclaration": 2913,
																		"src": "9401:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2657,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:15"
											},
											{
												"id": 2744,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:15",
												"statements": [
													{
														"expression": {
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2660,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "9839:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2661,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2650,
																				"src": "9849:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2662,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2637,
																					"src": "9858:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2663,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "9862:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2666,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2670,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:15"
													},
													{
														"expression": {
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2671,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "9888:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2672,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2650,
																				"src": "9898:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2673,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2637,
																					"src": "9907:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2674,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "9911:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2677,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2681,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:15"
													},
													{
														"expression": {
															"id": 2691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2682,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "9937:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2683,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2650,
																				"src": "9947:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2684,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2637,
																					"src": "9956:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2685,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "9960:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2688,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2692,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:15"
													},
													{
														"expression": {
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2693,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "9986:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2694,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2650,
																				"src": "9996:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2695,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2637,
																					"src": "10005:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2696,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "10009:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2699,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2703,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:15"
													},
													{
														"expression": {
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2704,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "10035:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2705,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2650,
																				"src": "10045:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2706,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2637,
																					"src": "10054:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2707,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "10058:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2710,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2714,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:15"
													},
													{
														"expression": {
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2715,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "10084:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2716,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2650,
																				"src": "10094:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2717,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2637,
																					"src": "10103:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2718,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "10107:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2721,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2725,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:15"
													},
													{
														"expression": {
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2726,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "10133:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2727,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2650,
																				"src": "10143:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2728,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2637,
																					"src": "10152:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2729,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "10156:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2732,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2736,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2738,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2650,
																	"src": "10193:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2739,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2637,
																		"src": "10201:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2740,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2650,
																		"src": "10205:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2737,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2408,
																"src": "10189:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2641,
														"id": 2743,
														"nodeType": "Return",
														"src": "10182:30:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2635,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:15",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "8601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:15"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "8635:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:15"
									},
									"scope": 3257,
									"src": "8587:1642:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2780,
										"nodeType": "Block",
										"src": "10405:164:15",
										"statements": [
											{
												"id": 2779,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:15",
												"statements": [
													{
														"assignments": [
															2758
														],
														"declarations": [
															{
																"constant": false,
																"id": 2758,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2779,
																"src": "10439:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2757,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2762,
														"initialValue": {
															"arguments": [
																{
																	"id": 2760,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2749,
																	"src": "10461:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2759,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2746,
																	2781
																],
																"referencedDeclaration": 2746,
																"src": "10456:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2763,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2758,
																"src": "10484:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2765,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2752,
																						"src": "10511:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2214",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2214",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2764,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3256,
																					"src": "10494:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2214_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2767,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2758,
																						"src": "10524:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2768,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2758,
																						"src": "10533:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2770,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2749,
																					"src": "10542:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2776,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2756,
														"id": 2778,
														"nodeType": "Return",
														"src": "10477:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2747,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:15",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "10343:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "10354:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2751,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2750,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "10354:8:15"
													},
													"referencedDeclaration": 2214,
													"src": "10354:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:15"
									},
									"returnParameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "10396:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:15"
									},
									"scope": 3257,
									"src": "10329:240:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "10760:922:15",
										"statements": [
											{
												"assignments": [
													2790
												],
												"declarations": [
													{
														"constant": false,
														"id": 2790,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2912,
														"src": "10770:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2792,
												"initialValue": {
													"hexValue": "30",
													"id": 2791,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:15"
											},
											{
												"id": 2909,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2793,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "10826:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2807,
														"nodeType": "IfStatement",
														"src": "10822:99:15",
														"trueBody": {
															"id": 2806,
															"nodeType": "Block",
															"src": "10844:77:15",
															"statements": [
																{
																	"expression": {
																		"id": 2800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2798,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "10862:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2801,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:15"
																},
																{
																	"expression": {
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2802,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2790,
																			"src": "10893:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2805,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2808,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "10938:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2822,
														"nodeType": "IfStatement",
														"src": "10934:96:15",
														"trueBody": {
															"id": 2821,
															"nodeType": "Block",
															"src": "10955:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2813,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "10973:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2816,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:15"
																},
																{
																	"expression": {
																		"id": 2819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2817,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2790,
																			"src": "11003:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2820,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "11047:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2837,
														"nodeType": "IfStatement",
														"src": "11043:96:15",
														"trueBody": {
															"id": 2836,
															"nodeType": "Block",
															"src": "11064:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2828,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "11082:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2831,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:15"
																},
																{
																	"expression": {
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2832,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2790,
																			"src": "11112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2835,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2838,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "11156:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2852,
														"nodeType": "IfStatement",
														"src": "11152:96:15",
														"trueBody": {
															"id": 2851,
															"nodeType": "Block",
															"src": "11173:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2843,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "11191:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2846,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:15"
																},
																{
																	"expression": {
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2847,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2790,
																			"src": "11221:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2850,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "11265:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2867,
														"nodeType": "IfStatement",
														"src": "11261:93:15",
														"trueBody": {
															"id": 2866,
															"nodeType": "Block",
															"src": "11281:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2858,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "11299:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2861,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:15"
																},
																{
																	"expression": {
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2862,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2790,
																			"src": "11328:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2865,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2868,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "11371:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2882,
														"nodeType": "IfStatement",
														"src": "11367:93:15",
														"trueBody": {
															"id": 2881,
															"nodeType": "Block",
															"src": "11387:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2873,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "11405:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2876,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:15"
																},
																{
																	"expression": {
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2877,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2790,
																			"src": "11434:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2880,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "11477:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2897,
														"nodeType": "IfStatement",
														"src": "11473:93:15",
														"trueBody": {
															"id": 2896,
															"nodeType": "Block",
															"src": "11493:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2888,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2784,
																			"src": "11511:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2891,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:15"
																},
																{
																	"expression": {
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2892,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2790,
																			"src": "11540:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2895,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2898,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2784,
																	"src": "11583:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2908,
														"nodeType": "IfStatement",
														"src": "11579:64:15",
														"trueBody": {
															"id": 2907,
															"nodeType": "Block",
															"src": "11599:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2903,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2790,
																			"src": "11617:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2906,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2910,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2790,
													"src": "11669:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2788,
												"id": 2911,
												"nodeType": "Return",
												"src": "11662:13:15"
											}
										]
									},
									"documentation": {
										"id": 2782,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:15",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "10713:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:15"
									},
									"returnParameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "10751:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:15"
									},
									"scope": 3257,
									"src": "10699:983:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2947,
										"nodeType": "Block",
										"src": "11915:168:15",
										"statements": [
											{
												"id": 2946,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:15",
												"statements": [
													{
														"assignments": [
															2925
														],
														"declarations": [
															{
																"constant": false,
																"id": 2925,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2946,
																"src": "11949:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2924,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2929,
														"initialValue": {
															"arguments": [
																{
																	"id": 2927,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2916,
																	"src": "11971:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2926,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2913,
																	2948
																],
																"referencedDeclaration": 2913,
																"src": "11966:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2930,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2925,
																"src": "11998:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2932,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2919,
																						"src": "12025:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2214",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2214",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2931,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3256,
																					"src": "12008:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2214_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2936,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2934,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2935,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2925,
																						"src": "12043:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2937,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2916,
																					"src": "12052:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2943,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2923,
														"id": 2945,
														"nodeType": "Return",
														"src": "11991:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2914,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:15",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "11849:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "11864:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2917,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "11864:8:15"
													},
													"referencedDeclaration": 2214,
													"src": "11864:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:15"
									},
									"returnParameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "11906:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:15"
									},
									"scope": 3257,
									"src": "11835:248:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3076,
										"nodeType": "Block",
										"src": "12276:854:15",
										"statements": [
											{
												"assignments": [
													2957
												],
												"declarations": [
													{
														"constant": false,
														"id": 2957,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3076,
														"src": "12286:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2956,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2959,
												"initialValue": {
													"hexValue": "30",
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:15"
											},
											{
												"id": 3073,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2960,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2951,
																"src": "12342:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2976,
														"nodeType": "IfStatement",
														"src": "12338:103:15",
														"trueBody": {
															"id": 2975,
															"nodeType": "Block",
															"src": "12361:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2965,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2951,
																			"src": "12379:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2970,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:15"
																},
																{
																	"expression": {
																		"id": 2973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "12414:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2974,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2977,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2951,
																"src": "12458:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2993,
														"nodeType": "IfStatement",
														"src": "12454:103:15",
														"trueBody": {
															"id": 2992,
															"nodeType": "Block",
															"src": "12477:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2951,
																			"src": "12495:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2987,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:15"
																},
																{
																	"expression": {
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2988,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "12530:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2991,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2994,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2951,
																"src": "12574:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3010,
														"nodeType": "IfStatement",
														"src": "12570:103:15",
														"trueBody": {
															"id": 3009,
															"nodeType": "Block",
															"src": "12593:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 3003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2999,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2951,
																			"src": "12611:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3004,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:15"
																},
																{
																	"expression": {
																		"id": 3007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3005,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "12646:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3008,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3011,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2951,
																"src": "12690:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3027,
														"nodeType": "IfStatement",
														"src": "12686:100:15",
														"trueBody": {
															"id": 3026,
															"nodeType": "Block",
															"src": "12708:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 3020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2951,
																			"src": "12726:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3021,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:15"
																},
																{
																	"expression": {
																		"id": 3024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3022,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "12760:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3025,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2951,
																"src": "12803:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3044,
														"nodeType": "IfStatement",
														"src": "12799:100:15",
														"trueBody": {
															"id": 3043,
															"nodeType": "Block",
															"src": "12821:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2951,
																			"src": "12839:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3038,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:15"
																},
																{
																	"expression": {
																		"id": 3041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3039,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "12873:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3042,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3045,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2951,
																"src": "12916:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3061,
														"nodeType": "IfStatement",
														"src": "12912:100:15",
														"trueBody": {
															"id": 3060,
															"nodeType": "Block",
															"src": "12934:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 3054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2951,
																			"src": "12952:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3055,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:15"
																},
																{
																	"expression": {
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "12986:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3059,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3062,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2951,
																"src": "13029:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3072,
														"nodeType": "IfStatement",
														"src": "13025:66:15",
														"trueBody": {
															"id": 3071,
															"nodeType": "Block",
															"src": "13047:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 3069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3067,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "13065:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3070,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3074,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2957,
													"src": "13117:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2955,
												"id": 3075,
												"nodeType": "Return",
												"src": "13110:13:15"
											}
										]
									},
									"documentation": {
										"id": 2949,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:15",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "12229:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:15"
									},
									"returnParameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "12267:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:15"
									},
									"scope": 3257,
									"src": "12214:916:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3111,
										"nodeType": "Block",
										"src": "13365:170:15",
										"statements": [
											{
												"id": 3110,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:15",
												"statements": [
													{
														"assignments": [
															3089
														],
														"declarations": [
															{
																"constant": false,
																"id": 3089,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 3110,
																"src": "13399:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3088,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3093,
														"initialValue": {
															"arguments": [
																{
																	"id": 3091,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3080,
																	"src": "13422:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3090,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3077,
																	3112
																],
																"referencedDeclaration": 3077,
																"src": "13416:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3094,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3089,
																"src": "13449:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3096,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3083,
																						"src": "13476:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2214",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2214",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3095,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3256,
																					"src": "13459:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2214_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3098,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3099,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3089,
																						"src": "13495:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3101,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3080,
																					"src": "13504:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3107,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3087,
														"id": 3109,
														"nodeType": "Return",
														"src": "13442:76:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3078,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:15",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3112,
												"src": "13299:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3112,
												"src": "13314:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3081,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "13314:8:15"
													},
													"referencedDeclaration": 2214,
													"src": "13314:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:15"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3112,
												"src": "13356:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:15"
									},
									"scope": 3257,
									"src": "13284:251:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "13855:600:15",
										"statements": [
											{
												"assignments": [
													3121
												],
												"declarations": [
													{
														"constant": false,
														"id": 3121,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3198,
														"src": "13865:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3123,
												"initialValue": {
													"hexValue": "30",
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:15"
											},
											{
												"id": 3195,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3124,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3115,
																	"src": "13921:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3138,
														"nodeType": "IfStatement",
														"src": "13917:98:15",
														"trueBody": {
															"id": 3137,
															"nodeType": "Block",
															"src": "13939:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 3131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3129,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3115,
																			"src": "13957:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3132,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:15"
																},
																{
																	"expression": {
																		"id": 3135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3133,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3121,
																			"src": "13988:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3136,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3139,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3115,
																	"src": "14032:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3153,
														"nodeType": "IfStatement",
														"src": "14028:95:15",
														"trueBody": {
															"id": 3152,
															"nodeType": "Block",
															"src": "14049:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 3146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3144,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3115,
																			"src": "14067:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3147,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:15"
																},
																{
																	"expression": {
																		"id": 3150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3148,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3121,
																			"src": "14097:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3151,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3115,
																	"src": "14140:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3168,
														"nodeType": "IfStatement",
														"src": "14136:95:15",
														"trueBody": {
															"id": 3167,
															"nodeType": "Block",
															"src": "14157:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 3161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3159,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3115,
																			"src": "14175:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3162,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:15"
																},
																{
																	"expression": {
																		"id": 3165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3163,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3121,
																			"src": "14205:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3166,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3169,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3115,
																	"src": "14248:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3183,
														"nodeType": "IfStatement",
														"src": "14244:95:15",
														"trueBody": {
															"id": 3182,
															"nodeType": "Block",
															"src": "14265:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 3176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3174,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3115,
																			"src": "14283:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3177,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:15"
																},
																{
																	"expression": {
																		"id": 3180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3178,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3121,
																			"src": "14313:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3181,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3184,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3115,
																	"src": "14356:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3194,
														"nodeType": "IfStatement",
														"src": "14352:64:15",
														"trueBody": {
															"id": 3193,
															"nodeType": "Block",
															"src": "14372:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 3191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3189,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3121,
																			"src": "14390:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3192,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3196,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3121,
													"src": "14442:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3119,
												"id": 3197,
												"nodeType": "Return",
												"src": "14435:13:15"
											}
										]
									},
									"documentation": {
										"id": 3113,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:15",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "13808:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:15"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "13846:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:15"
									},
									"scope": 3257,
									"src": "13792:663:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3236,
										"nodeType": "Block",
										"src": "14692:177:15",
										"statements": [
											{
												"id": 3235,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:15",
												"statements": [
													{
														"assignments": [
															3211
														],
														"declarations": [
															{
																"constant": false,
																"id": 3211,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 3235,
																"src": "14726:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3210,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3215,
														"initialValue": {
															"arguments": [
																{
																	"id": 3213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3202,
																	"src": "14750:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3212,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3199,
																	3237
																],
																"referencedDeclaration": 3199,
																"src": "14743:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3216,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3211,
																"src": "14777:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3218,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3205,
																						"src": "14804:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2214",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2214",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3217,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3256,
																					"src": "14787:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2214_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3220,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3223,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3221,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3211,
																									"src": "14823:6:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3222,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3224,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3226,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3202,
																					"src": "14838:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3232,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3209,
														"id": 3234,
														"nodeType": "Return",
														"src": "14770:82:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3200,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:15",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "14626:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "14641:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3203,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "14641:8:15"
													},
													"referencedDeclaration": 2214,
													"src": "14641:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:15"
									},
									"returnParameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "14683:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:15"
									},
									"scope": 3257,
									"src": "14610:259:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3255,
										"nodeType": "Block",
										"src": "15067:48:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3248,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3241,
																	"src": "15090:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2214",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2214",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3246,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3245,
												"id": 3254,
												"nodeType": "Return",
												"src": "15077:31:15"
											}
										]
									},
									"documentation": {
										"id": 3238,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:15",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3241,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3256,
												"src": "15019:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2214",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3239,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2214,
														"src": "15019:8:15"
													},
													"referencedDeclaration": 2214,
													"src": "15019:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2214",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:15"
									},
									"returnParameters": {
										"id": 3245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3256,
												"src": "15061:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:15"
									},
									"scope": 3257,
									"src": "14993:122:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3258,
							"src": "203:14914:15",
							"usedErrors": [
								2209
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3362
						]
					},
					"id": 3363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3259,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3260,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:16",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3362,
							"linearizedBaseContracts": [
								3362
							],
							"name": "SignedMath",
							"nameLocation": "224:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3277,
										"nodeType": "Block",
										"src": "376:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3270,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3263,
															"src": "393:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3271,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3265,
															"src": "397:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3274,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3265,
														"src": "405:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:16",
													"trueExpression": {
														"id": 3273,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3263,
														"src": "401:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3269,
												"id": 3276,
												"nodeType": "Return",
												"src": "386:20:16"
											}
										]
									},
									"documentation": {
										"id": 3261,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:16",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "325:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3262,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "335:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3264,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:16"
									},
									"returnParameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "368:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3267,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:16"
									},
									"scope": 3362,
									"src": "312:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3295,
										"nodeType": "Block",
										"src": "555:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3288,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3281,
															"src": "572:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3289,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3283,
															"src": "576:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3292,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3283,
														"src": "584:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:16",
													"trueExpression": {
														"id": 3291,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3281,
														"src": "580:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3287,
												"id": 3294,
												"nodeType": "Return",
												"src": "565:20:16"
											}
										]
									},
									"documentation": {
										"id": 3279,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:16",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3296,
												"src": "504:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3280,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3296,
												"src": "514:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3282,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:16"
									},
									"returnParameters": {
										"id": 3287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3296,
												"src": "547:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3285,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:16"
									},
									"scope": 3362,
									"src": "491:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3339,
										"nodeType": "Block",
										"src": "797:162:16",
										"statements": [
											{
												"assignments": [
													3307
												],
												"declarations": [
													{
														"constant": false,
														"id": 3307,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 3339,
														"src": "859:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3306,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3320,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3308,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3299,
																	"src": "871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3309,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3301,
																	"src": "875:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3311,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3312,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3299,
																				"src": "882:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3313,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3301,
																				"src": "886:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3315,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3318,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3321,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3307,
														"src": "911:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3326,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3307,
																						"src": "931:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3324,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3322,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3331,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3299,
																				"src": "945:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3332,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3301,
																				"src": "949:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3334,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3336,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3305,
												"id": 3338,
												"nodeType": "Return",
												"src": "904:48:16"
											}
										]
									},
									"documentation": {
										"id": 3297,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:16",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3299,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3340,
												"src": "746:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3298,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3301,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3340,
												"src": "756:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3300,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:16"
									},
									"returnParameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3340,
												"src": "789:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3303,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:16"
									},
									"scope": 3362,
									"src": "729:230:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3360,
										"nodeType": "Block",
										"src": "1103:158:16",
										"statements": [
											{
												"id": 3359,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3350,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3343,
																			"src": "1228:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:16",
																		"subExpression": {
																			"id": 3354,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3343,
																			"src": "1242:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:16",
																	"trueExpression": {
																		"id": 3353,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3343,
																		"src": "1237:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3348,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3347,
														"id": 3358,
														"nodeType": "Return",
														"src": "1213:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3341,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:16",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3343,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3361,
												"src": "1061:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3342,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:16"
									},
									"returnParameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3361,
												"src": "1094:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:16"
									},
									"scope": 3362,
									"src": "1048:213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3363,
							"src": "216:1047:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:16"
				},
				"id": 16
			},
			"contract-3a79feaed7.sol": {
				"ast": {
					"absolutePath": "contract-3a79feaed7.sol",
					"exportedSymbols": {
						"Alchemy": [
							3490
						],
						"Context": [
							1912
						],
						"ERC165": [
							2191
						],
						"ERC721": [
							1177
						],
						"ERC721Enumerable": [
							1696
						],
						"ERC721URIStorage": [
							1822
						],
						"IERC165": [
							2203
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1294
						],
						"IERC721Enumerable": [
							1854
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1882
						],
						"IERC721Receiver": [
							1312
						],
						"Strings": [
							2167
						]
					},
					"id": 3491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts@5.0.2/token/ERC721/ERC721.sol",
							"id": 3365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3491,
							"sourceUnit": 1178,
							"src": "107:63:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3491,
							"sourceUnit": 1697,
							"src": "171:84:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts@5.0.2/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3491,
							"sourceUnit": 1823,
							"src": "256:84:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3368,
										"name": "ERC721",
										"nameLocations": [
											"362:6:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "362:6:17"
									},
									"id": 3369,
									"nodeType": "InheritanceSpecifier",
									"src": "362:6:17"
								},
								{
									"baseName": {
										"id": 3370,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"370:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1696,
										"src": "370:16:17"
									},
									"id": 3371,
									"nodeType": "InheritanceSpecifier",
									"src": "370:16:17"
								},
								{
									"baseName": {
										"id": 3372,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"388:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1822,
										"src": "388:16:17"
									},
									"id": 3373,
									"nodeType": "InheritanceSpecifier",
									"src": "388:16:17"
								}
							],
							"canonicalName": "Alchemy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3490,
							"linearizedBaseContracts": [
								3490,
								1822,
								1696,
								1854,
								1177,
								121,
								1882,
								27,
								1294,
								2191,
								2203,
								1912
							],
							"name": "Alchemy",
							"nameLocation": "351:7:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3375,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "427:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3490,
									"src": "411:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3374,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3378,
									"mutability": "mutable",
									"name": "MAX_SUPPLY",
									"nameLocation": "454:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 3490,
									"src": "446:26:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3376,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "446:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 3377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "467:5:17",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3385,
										"nodeType": "Block",
										"src": "522:2:17",
										"statements": []
									},
									"id": 3386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "416c6368656d79",
													"id": 3381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "500:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5aae68187502a1f7914e19dedd8ff1755780c9ccf49e8bfede23bb42030ca2e6",
														"typeString": "literal_string \"Alchemy\""
													},
													"value": "Alchemy"
												},
												{
													"hexValue": "414c4348",
													"id": 3382,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "511:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_80c8e3ac30eb0463fe99c2e000e598bd53a9559a91d713b7caeba07263c20cf2",
														"typeString": "literal_string \"ALCH\""
													},
													"value": "ALCH"
												}
											],
											"id": 3383,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3380,
												"name": "ERC721",
												"nameLocations": [
													"493:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "493:6:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "493:25:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:17"
									},
									"returnParameters": {
										"id": 3384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:17"
									},
									"scope": 3490,
									"src": "479:45:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3415,
										"nodeType": "Block",
										"src": "586:197:17",
										"statements": [
											{
												"assignments": [
													3394
												],
												"declarations": [
													{
														"constant": false,
														"id": 3394,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "604:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 3415,
														"src": "596:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "596:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3397,
												"initialValue": {
													"id": 3396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "614:14:17",
													"subExpression": {
														"id": 3395,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3375,
														"src": "614:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "596:32:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3399,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3394,
																"src": "646:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3400,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3378,
																"src": "657:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "646:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49276d20536f72727920416c6c204e465427732068617665206265656e206d696e746564",
															"id": 3402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "669:38:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4",
																"typeString": "literal_string \"I'm Sorry All NFT's have been minted\""
															},
															"value": "I'm Sorry All NFT's have been minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_738b307e4bd45c3323b10be6f5667890564a564411080080d3c3a0a47917c1b4",
																"typeString": "literal_string \"I'm Sorry All NFT's have been minted\""
															}
														],
														"id": 3398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "638:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "638:70:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3404,
												"nodeType": "ExpressionStatement",
												"src": "638:70:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3388,
															"src": "728:2:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3407,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3394,
															"src": "732:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3405,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															799,
															825
														],
														"referencedDeclaration": 799,
														"src": "718:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "718:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3409,
												"nodeType": "ExpressionStatement",
												"src": "718:22:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3411,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3394,
															"src": "763:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3412,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3390,
															"src": "772:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3410,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "750:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "750:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3414,
												"nodeType": "ExpressionStatement",
												"src": "750:26:17"
											}
										]
									},
									"functionSelector": "d204c45e",
									"id": 3416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "539:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "556:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "548:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "574:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "560:17:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3389,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "560:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:31:17"
									},
									"returnParameters": {
										"id": 3392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:17"
									},
									"scope": 3490,
									"src": "530:253:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734,
										1511
									],
									"body": {
										"id": 3437,
										"nodeType": "Block",
										"src": "1008:56:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3432,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3418,
															"src": "1039:2:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3433,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3420,
															"src": "1043:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3434,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3422,
															"src": "1052:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3430,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1025:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Alchemy_$3490_$",
																"typeString": "type(contract super Alchemy)"
															}
														},
														"id": 3431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1031:7:17",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1511,
														"src": "1025:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 3435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1025:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3429,
												"id": 3436,
												"nodeType": "Return",
												"src": "1018:39:17"
											}
										]
									},
									"id": 3438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "867:7:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3426,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3424,
												"name": "ERC721",
												"nameLocations": [
													"952:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "952:6:17"
											},
											{
												"id": 3425,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"960:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1696,
												"src": "960:16:17"
											}
										],
										"src": "943:34:17"
									},
									"parameters": {
										"id": 3423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3418,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 3438,
												"src": "875:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "895:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3438,
												"src": "887:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3422,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "912:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 3438,
												"src": "904:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:43:17"
									},
									"returnParameters": {
										"id": 3429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3438,
												"src": "995:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:9:17"
									},
									"scope": 3490,
									"src": "858:206:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										644,
										1695
									],
									"body": {
										"id": 3455,
										"nodeType": "Block",
										"src": "1192:55:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3451,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3440,
															"src": "1225:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3452,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3442,
															"src": "1234:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 3448,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1202:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Alchemy_$3490_$",
																"typeString": "type(contract super Alchemy)"
															}
														},
														"id": 3450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1208:16:17",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1695,
														"src": "1202:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 3453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1202:38:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3454,
												"nodeType": "ExpressionStatement",
												"src": "1202:38:17"
											}
										]
									},
									"id": 3456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "1079:16:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3446,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3444,
												"name": "ERC721",
												"nameLocations": [
													"1162:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1162:6:17"
											},
											{
												"id": 3445,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"1170:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1696,
												"src": "1170:16:17"
											}
										],
										"src": "1153:34:17"
									},
									"parameters": {
										"id": 3443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1104:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3456,
												"src": "1096:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1121:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3456,
												"src": "1113:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3441,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:32:17"
									},
									"returnParameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:0:17"
									},
									"scope": 3490,
									"src": "1070:177:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										364,
										1802
									],
									"body": {
										"id": 3471,
										"nodeType": "Block",
										"src": "1395:47:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3468,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "1427:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3466,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1412:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Alchemy_$3490_$",
																"typeString": "type(contract super Alchemy)"
															}
														},
														"id": 3467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1418:8:17",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1802,
														"src": "1412:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:23:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3465,
												"id": 3470,
												"nodeType": "Return",
												"src": "1405:30:17"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1262:8:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3462,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3460,
												"name": "ERC721",
												"nameLocations": [
													"1333:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1333:6:17"
											},
											{
												"id": 3461,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1341:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1822,
												"src": "1341:16:17"
											}
										],
										"src": "1324:34:17"
									},
									"parameters": {
										"id": 3459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1279:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3472,
												"src": "1271:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:17:17"
									},
									"returnParameters": {
										"id": 3465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3472,
												"src": "1376:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3463,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1376:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:15:17"
									},
									"scope": 3490,
									"src": "1253:189:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										269,
										1376,
										1745
									],
									"body": {
										"id": 3488,
										"nodeType": "Block",
										"src": "1611:60:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3485,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3474,
															"src": "1652:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3483,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1628:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Alchemy_$3490_$",
																"typeString": "type(contract super Alchemy)"
															}
														},
														"id": 3484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1634:17:17",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "1628:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:36:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3482,
												"id": 3487,
												"nodeType": "Return",
												"src": "1621:43:17"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1457:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3479,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3476,
												"name": "ERC721",
												"nameLocations": [
													"1540:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1540:6:17"
											},
											{
												"id": 3477,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"1548:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1696,
												"src": "1548:16:17"
											},
											{
												"id": 3478,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1566:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1822,
												"src": "1566:16:17"
											}
										],
										"src": "1531:52:17"
									},
									"parameters": {
										"id": 3475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1482:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "1475:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3473,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1475:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:20:17"
									},
									"returnParameters": {
										"id": 3482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "1601:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1601:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1600:6:17"
									},
									"scope": 3490,
									"src": "1448:223:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3491,
							"src": "342:1331:17",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120,
								1349,
								1352
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "81:1593:17"
				},
				"id": 17
			}
		}
	}
}